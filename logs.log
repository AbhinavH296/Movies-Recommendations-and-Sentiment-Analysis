2025-01-17 11:50:08,488:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 11:50:08,488:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 11:50:08,488:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 11:50:08,488:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 12:02:16,510:INFO:PyCaret ClassificationExperiment
2025-01-17 12:02:16,510:INFO:Logging name: clf-default-name
2025-01-17 12:02:16,510:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-01-17 12:02:16,510:INFO:version 3.3.2
2025-01-17 12:02:16,510:INFO:Initializing setup()
2025-01-17 12:02:16,510:INFO:self.USI: 8015
2025-01-17 12:02:16,510:INFO:self._variable_keys: {'gpu_n_jobs_param', '_ml_usecase', 'logging_param', 'X', 'exp_id', 'fold_generator', 'USI', 'data', '_available_plots', 'seed', 'memory', 'html_param', 'exp_name_log', 'pipeline', 'X_train', 'target_param', 'fold_shuffle_param', 'X_test', 'gpu_param', 'n_jobs_param', 'y_test', 'y', 'fold_groups_param', 'y_train', 'idx', 'log_plots_param', 'is_multiclass', 'fix_imbalance'}
2025-01-17 12:02:16,510:INFO:Checking environment
2025-01-17 12:02:16,510:INFO:python_version: 3.9.0
2025-01-17 12:02:16,510:INFO:python_build: ('default', 'Nov 15 2020 08:30:55')
2025-01-17 12:02:16,510:INFO:machine: AMD64
2025-01-17 12:02:16,510:INFO:platform: Windows-10-10.0.26100-SP0
2025-01-17 12:02:16,515:INFO:Memory: svmem(total=7967137792, available=1317613568, percent=83.5, used=6649524224, free=1317613568)
2025-01-17 12:02:16,516:INFO:Physical Core: 6
2025-01-17 12:02:16,516:INFO:Logical Core: 12
2025-01-17 12:02:16,516:INFO:Checking libraries
2025-01-17 12:02:16,516:INFO:System:
2025-01-17 12:02:16,516:INFO:    python: 3.9.0 (default, Nov 15 2020, 08:30:55) [MSC v.1916 64 bit (AMD64)]
2025-01-17 12:02:16,516:INFO:executable: e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\python.exe
2025-01-17 12:02:16,516:INFO:   machine: Windows-10-10.0.26100-SP0
2025-01-17 12:02:16,516:INFO:PyCaret required dependencies:
2025-01-17 12:02:17,413:INFO:                 pip: 24.2
2025-01-17 12:02:17,413:INFO:          setuptools: 75.1.0
2025-01-17 12:02:17,413:INFO:             pycaret: 3.3.2
2025-01-17 12:02:17,413:INFO:             IPython: 8.18.1
2025-01-17 12:02:17,413:INFO:          ipywidgets: 8.1.5
2025-01-17 12:02:17,413:INFO:                tqdm: 4.67.1
2025-01-17 12:02:17,413:INFO:               numpy: 1.26.4
2025-01-17 12:02:17,414:INFO:              pandas: 2.1.4
2025-01-17 12:02:17,414:INFO:              jinja2: 3.1.5
2025-01-17 12:02:17,414:INFO:               scipy: 1.11.4
2025-01-17 12:02:17,414:INFO:              joblib: 1.3.2
2025-01-17 12:02:17,414:INFO:             sklearn: 1.4.2
2025-01-17 12:02:17,414:INFO:                pyod: 2.0.3
2025-01-17 12:02:17,414:INFO:            imblearn: 0.12.3
2025-01-17 12:02:17,414:INFO:   category_encoders: 2.6.4
2025-01-17 12:02:17,414:INFO:            lightgbm: 4.5.0
2025-01-17 12:02:17,414:INFO:               numba: 0.60.0
2025-01-17 12:02:17,414:INFO:            requests: 2.32.3
2025-01-17 12:02:17,414:INFO:          matplotlib: 3.7.5
2025-01-17 12:02:17,414:INFO:          scikitplot: 0.3.7
2025-01-17 12:02:17,414:INFO:         yellowbrick: 1.5
2025-01-17 12:02:17,414:INFO:              plotly: 5.24.1
2025-01-17 12:02:17,414:INFO:    plotly-resampler: Not installed
2025-01-17 12:02:17,414:INFO:             kaleido: 0.2.1
2025-01-17 12:02:17,414:INFO:           schemdraw: 0.15
2025-01-17 12:02:17,414:INFO:         statsmodels: 0.14.4
2025-01-17 12:02:17,414:INFO:              sktime: 0.26.0
2025-01-17 12:02:17,414:INFO:               tbats: 1.1.3
2025-01-17 12:02:17,414:INFO:            pmdarima: 2.0.4
2025-01-17 12:02:17,414:INFO:              psutil: 6.1.1
2025-01-17 12:02:17,414:INFO:          markupsafe: 2.1.5
2025-01-17 12:02:17,414:INFO:             pickle5: Not installed
2025-01-17 12:02:17,414:INFO:         cloudpickle: 3.1.1
2025-01-17 12:02:17,414:INFO:         deprecation: 2.1.0
2025-01-17 12:02:17,414:INFO:              xxhash: 3.5.0
2025-01-17 12:02:17,414:INFO:           wurlitzer: Not installed
2025-01-17 12:02:17,414:INFO:PyCaret optional dependencies:
2025-01-17 12:02:18,125:INFO:                shap: 0.44.1
2025-01-17 12:02:18,125:INFO:           interpret: 0.6.9
2025-01-17 12:02:18,125:INFO:                umap: 0.5.7
2025-01-17 12:02:18,125:INFO:     ydata_profiling: 4.12.1
2025-01-17 12:02:18,125:INFO:  explainerdashboard: 0.4.8
2025-01-17 12:02:18,125:INFO:             autoviz: Not installed
2025-01-17 12:02:18,125:INFO:           fairlearn: 0.7.0
2025-01-17 12:02:18,125:INFO:          deepchecks: Not installed
2025-01-17 12:02:18,125:INFO:             xgboost: 2.1.3
2025-01-17 12:02:18,125:INFO:            catboost: 1.2.7
2025-01-17 12:02:18,125:INFO:              kmodes: 0.12.2
2025-01-17 12:02:18,126:INFO:             mlxtend: 0.23.3
2025-01-17 12:02:18,126:INFO:       statsforecast: 1.5.0
2025-01-17 12:02:18,126:INFO:        tune_sklearn: Not installed
2025-01-17 12:02:18,126:INFO:                 ray: Not installed
2025-01-17 12:02:18,126:INFO:            hyperopt: 0.2.7
2025-01-17 12:02:18,126:INFO:              optuna: 4.1.0
2025-01-17 12:02:18,126:INFO:               skopt: 0.10.2
2025-01-17 12:02:18,126:INFO:              mlflow: 2.19.0
2025-01-17 12:02:18,126:INFO:              gradio: Not installed
2025-01-17 12:02:18,126:INFO:             fastapi: Not installed
2025-01-17 12:02:18,126:INFO:             uvicorn: Not installed
2025-01-17 12:02:18,126:INFO:              m2cgen: 0.10.0
2025-01-17 12:02:18,126:INFO:           evidently: 0.4.40
2025-01-17 12:02:18,126:INFO:               fugue: 0.8.7
2025-01-17 12:02:18,126:INFO:           streamlit: 1.41.1
2025-01-17 12:02:18,126:INFO:             prophet: Not installed
2025-01-17 12:02:18,126:INFO:None
2025-01-17 12:02:18,126:INFO:Set up data.
2025-01-17 12:02:19,230:INFO:Set up folding strategy.
2025-01-17 12:02:19,230:INFO:Set up train/test split.
2025-01-17 12:02:19,776:INFO:Set up index.
2025-01-17 12:02:19,810:INFO:Assigning column types.
2025-01-17 12:02:20,461:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-01-17 12:02:20,506:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 12:02:20,511:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 12:02:20,549:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 12:02:20,552:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 12:02:22,050:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 12:02:22,051:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 12:02:22,080:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 12:02:22,083:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 12:02:22,084:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-01-17 12:02:22,130:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 12:02:22,160:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 12:02:22,162:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 12:02:22,210:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 12:02:22,239:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 12:02:22,242:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 12:02:22,243:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-01-17 12:02:22,319:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 12:02:22,322:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 12:02:22,398:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 12:02:22,401:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 12:02:22,404:INFO:Preparing preprocessing pipeline...
2025-01-17 12:02:22,494:INFO:Set up label encoding.
2025-01-17 12:02:22,494:INFO:Set up simple imputation.
2025-01-17 12:02:23,842:INFO:Finished creating preprocessing pipeline.
2025-01-17 12:02:23,852:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\AMMUNA~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['ability', 'able', 'absolutely',
                                             'across', 'act', 'acted', 'acting',
                                             'action', 'actor', 'actress',
                                             'actual'...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-01-17 12:02:23,852:INFO:Creating final display dataframe.
2025-01-17 12:02:27,682:INFO:Setup _display_container:                     Description                                 Value
0                    Session id                                   153
1                        Target                             Sentiment
2                   Target type                            Multiclass
3                Target mapping  negative: 0, neutral: 1, positive: 2
4           Original data shape                         (20190, 1001)
5        Transformed data shape                         (20190, 1001)
6   Transformed train set shape                         (14133, 1001)
7    Transformed test set shape                          (6057, 1001)
8              Numeric features                                  1000
9                    Preprocess                                  True
10              Imputation type                                simple
11           Numeric imputation                                  mean
12       Categorical imputation                                  mode
13               Fold Generator                       StratifiedKFold
14                  Fold Number                                    10
15                     CPU Jobs                                    -1
16                      Use GPU                                 False
17               Log Experiment                                 False
18              Experiment Name                      clf-default-name
19                          USI                                  8015
2025-01-17 12:02:27,768:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 12:02:27,771:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 12:02:27,846:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 12:02:27,849:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 12:02:27,851:INFO:setup() successfully completed in 11.45s...............
2025-01-17 12:02:27,851:INFO:Initializing get_config()
2025-01-17 12:02:27,851:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001547730A940>, variable=y_train)
2025-01-17 12:02:27,851:INFO:Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
2025-01-17 12:02:28,019:INFO:Variable:  returned as 8943      neutral
6887      neutral
8862     positive
8820      neutral
15629    negative
           ...   
17226    positive
13414    negative
12072    negative
18788    positive
1982      neutral
Name: Sentiment, Length: 14133, dtype: category
Categories (3, object): ['negative', 'neutral', 'positive']
2025-01-17 12:02:28,020:INFO:get_config() successfully completed......................................
2025-01-17 12:02:36,626:INFO:Initializing compare_models()
2025-01-17 12:02:36,626:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001547730A940>, include=['svm', 'dt', 'rf', 'ridge', 'knn', 'nb', 'xgboost'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001547730A940>, 'include': ['svm', 'dt', 'rf', 'ridge', 'knn', 'nb', 'xgboost'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-01-17 12:02:36,626:INFO:Checking exceptions
2025-01-17 12:02:37,239:INFO:Preparing display monitor
2025-01-17 12:02:37,268:INFO:Initializing SVM - Linear Kernel
2025-01-17 12:02:37,268:INFO:Total runtime is 0.0 minutes
2025-01-17 12:02:37,273:INFO:SubProcess create_model() called ==================================
2025-01-17 12:02:37,274:INFO:Initializing create_model()
2025-01-17 12:02:37,275:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001547730A940>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000015461A182E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 12:02:37,275:INFO:Checking exceptions
2025-01-17 12:02:37,275:INFO:Importing libraries
2025-01-17 12:02:37,275:INFO:Copying training dataset
2025-01-17 12:02:37,896:INFO:Defining folds
2025-01-17 12:02:37,896:INFO:Declaring metric variables
2025-01-17 12:02:37,900:INFO:Importing untrained model
2025-01-17 12:02:37,905:INFO:SVM - Linear Kernel Imported successfully
2025-01-17 12:02:37,914:INFO:Starting cross validation
2025-01-17 12:02:37,919:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 12:02:51,021:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 12:02:51,059:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 12:02:51,070:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:02:51,072:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:02:51,073:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:02:51,089:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:02:51,091:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:02:51,092:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:02:51,104:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:02:51,105:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:02:51,109:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:02:51,472:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 12:02:51,481:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:02:51,501:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:02:51,517:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:02:52,379:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 12:02:52,389:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:02:52,403:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:02:52,415:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:02:54,443:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 12:02:54,453:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:02:54,472:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:02:54,487:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:02:55,085:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 12:02:55,099:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:02:55,120:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:02:55,134:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:02:55,522:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 12:02:55,526:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:02:55,536:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:02:55,545:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:02:55,889:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 12:02:55,894:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:02:55,903:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:02:55,912:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:02:56,351:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 12:02:56,355:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:02:56,364:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:02:56,373:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:02:56,417:INFO:Calculating mean and std
2025-01-17 12:02:56,439:INFO:Creating metrics dataframe
2025-01-17 12:02:56,459:INFO:Uploading results into container
2025-01-17 12:02:56,463:INFO:Uploading model into container now
2025-01-17 12:02:56,466:INFO:_master_model_container: 1
2025-01-17 12:02:56,466:INFO:_display_container: 2
2025-01-17 12:02:56,469:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=153, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-01-17 12:02:56,469:INFO:create_model() successfully completed......................................
2025-01-17 12:02:56,937:INFO:SubProcess create_model() end ==================================
2025-01-17 12:02:56,937:INFO:Creating metrics dataframe
2025-01-17 12:02:56,951:INFO:Initializing Decision Tree Classifier
2025-01-17 12:02:56,951:INFO:Total runtime is 0.3280486981074015 minutes
2025-01-17 12:02:56,957:INFO:SubProcess create_model() called ==================================
2025-01-17 12:02:56,958:INFO:Initializing create_model()
2025-01-17 12:02:56,958:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001547730A940>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000015461A182E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 12:02:56,958:INFO:Checking exceptions
2025-01-17 12:02:56,958:INFO:Importing libraries
2025-01-17 12:02:56,959:INFO:Copying training dataset
2025-01-17 12:02:57,670:INFO:Defining folds
2025-01-17 12:02:57,670:INFO:Declaring metric variables
2025-01-17 12:02:57,675:INFO:Importing untrained model
2025-01-17 12:02:57,680:INFO:Decision Tree Classifier Imported successfully
2025-01-17 12:02:57,690:INFO:Starting cross validation
2025-01-17 12:02:57,695:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 12:03:12,092:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:12,106:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:12,120:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:12,266:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:12,278:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:12,292:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:12,680:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:12,693:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:12,705:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:13,087:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:13,101:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:13,114:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:13,467:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:13,479:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:13,491:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:13,845:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:13,857:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:13,866:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:14,707:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:14,716:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:14,719:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:14,724:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:14,729:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:14,739:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:17,304:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:17,312:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:17,320:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:17,459:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:17,467:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:17,474:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:17,499:INFO:Calculating mean and std
2025-01-17 12:03:17,501:INFO:Creating metrics dataframe
2025-01-17 12:03:17,507:INFO:Uploading results into container
2025-01-17 12:03:17,508:INFO:Uploading model into container now
2025-01-17 12:03:17,509:INFO:_master_model_container: 2
2025-01-17 12:03:17,509:INFO:_display_container: 2
2025-01-17 12:03:17,510:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=153, splitter='best')
2025-01-17 12:03:17,510:INFO:create_model() successfully completed......................................
2025-01-17 12:03:17,863:INFO:SubProcess create_model() end ==================================
2025-01-17 12:03:17,863:INFO:Creating metrics dataframe
2025-01-17 12:03:17,878:INFO:Initializing Random Forest Classifier
2025-01-17 12:03:17,878:INFO:Total runtime is 0.6768322666486104 minutes
2025-01-17 12:03:17,883:INFO:SubProcess create_model() called ==================================
2025-01-17 12:03:17,884:INFO:Initializing create_model()
2025-01-17 12:03:17,884:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001547730A940>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000015461A182E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 12:03:17,884:INFO:Checking exceptions
2025-01-17 12:03:17,884:INFO:Importing libraries
2025-01-17 12:03:17,885:INFO:Copying training dataset
2025-01-17 12:03:18,521:INFO:Defining folds
2025-01-17 12:03:18,522:INFO:Declaring metric variables
2025-01-17 12:03:18,528:INFO:Importing untrained model
2025-01-17 12:03:18,534:INFO:Random Forest Classifier Imported successfully
2025-01-17 12:03:18,545:INFO:Starting cross validation
2025-01-17 12:03:18,552:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 12:03:30,532:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:30,612:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:30,683:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:33,152:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:33,236:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:33,284:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:34,621:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:34,636:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:34,697:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:36,249:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:36,318:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:36,375:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:37,782:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:37,815:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:37,863:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:40,017:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:40,058:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:40,072:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:42,541:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:42,632:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:42,701:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:43,146:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:43,160:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:43,173:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:43,850:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:43,864:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:43,876:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:44,136:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:44,144:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:44,152:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:44,185:INFO:Calculating mean and std
2025-01-17 12:03:44,188:INFO:Creating metrics dataframe
2025-01-17 12:03:44,192:INFO:Uploading results into container
2025-01-17 12:03:44,193:INFO:Uploading model into container now
2025-01-17 12:03:44,193:INFO:_master_model_container: 3
2025-01-17 12:03:44,193:INFO:_display_container: 2
2025-01-17 12:03:44,194:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=153, verbose=0,
                       warm_start=False)
2025-01-17 12:03:44,196:INFO:create_model() successfully completed......................................
2025-01-17 12:03:44,535:INFO:SubProcess create_model() end ==================================
2025-01-17 12:03:44,535:INFO:Creating metrics dataframe
2025-01-17 12:03:44,545:INFO:Initializing Ridge Classifier
2025-01-17 12:03:44,545:INFO:Total runtime is 1.121281051635742 minutes
2025-01-17 12:03:44,551:INFO:SubProcess create_model() called ==================================
2025-01-17 12:03:44,551:INFO:Initializing create_model()
2025-01-17 12:03:44,551:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001547730A940>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000015461A182E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 12:03:44,551:INFO:Checking exceptions
2025-01-17 12:03:44,551:INFO:Importing libraries
2025-01-17 12:03:44,551:INFO:Copying training dataset
2025-01-17 12:03:45,177:INFO:Defining folds
2025-01-17 12:03:45,177:INFO:Declaring metric variables
2025-01-17 12:03:45,182:INFO:Importing untrained model
2025-01-17 12:03:45,187:INFO:Ridge Classifier Imported successfully
2025-01-17 12:03:45,198:INFO:Starting cross validation
2025-01-17 12:03:45,204:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 12:03:47,380:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 12:03:47,386:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:47,401:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:47,418:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:48,021:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 12:03:48,032:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:48,042:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:48,053:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:48,534:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 12:03:48,540:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:48,551:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:48,562:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:49,088:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 12:03:49,096:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:49,111:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:49,138:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:50,341:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 12:03:50,348:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:50,375:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:50,394:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:51,064:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 12:03:51,070:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:51,087:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:51,109:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:51,396:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 12:03:51,405:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:51,422:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:51,437:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:51,881:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 12:03:51,885:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:51,903:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:51,914:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:52,262:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 12:03:52,296:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:52,305:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:52,314:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:52,542:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 12:03:52,547:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:52,557:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:52,566:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:03:52,606:INFO:Calculating mean and std
2025-01-17 12:03:52,608:INFO:Creating metrics dataframe
2025-01-17 12:03:52,611:INFO:Uploading results into container
2025-01-17 12:03:52,613:INFO:Uploading model into container now
2025-01-17 12:03:52,614:INFO:_master_model_container: 4
2025-01-17 12:03:52,615:INFO:_display_container: 2
2025-01-17 12:03:52,615:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=153, solver='auto',
                tol=0.0001)
2025-01-17 12:03:52,615:INFO:create_model() successfully completed......................................
2025-01-17 12:03:52,978:INFO:SubProcess create_model() end ==================================
2025-01-17 12:03:52,978:INFO:Creating metrics dataframe
2025-01-17 12:03:52,993:INFO:Initializing K Neighbors Classifier
2025-01-17 12:03:52,993:INFO:Total runtime is 1.2620701591173806 minutes
2025-01-17 12:03:52,999:INFO:SubProcess create_model() called ==================================
2025-01-17 12:03:52,999:INFO:Initializing create_model()
2025-01-17 12:03:52,999:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001547730A940>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000015461A182E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 12:03:52,999:INFO:Checking exceptions
2025-01-17 12:03:52,999:INFO:Importing libraries
2025-01-17 12:03:52,999:INFO:Copying training dataset
2025-01-17 12:03:53,704:INFO:Defining folds
2025-01-17 12:03:53,705:INFO:Declaring metric variables
2025-01-17 12:03:53,712:INFO:Importing untrained model
2025-01-17 12:03:53,729:INFO:K Neighbors Classifier Imported successfully
2025-01-17 12:03:53,746:INFO:Starting cross validation
2025-01-17 12:03:53,755:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 12:04:06,617:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:06,667:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:06,695:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:08,034:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:08,058:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:08,085:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:08,177:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:08,205:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:08,229:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:09,683:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:09,712:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:09,736:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:10,564:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:10,577:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:10,591:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:11,097:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:11,109:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:11,122:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:11,592:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:11,603:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:11,616:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:11,829:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:11,839:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:11,848:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:12,264:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:12,275:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:12,283:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:12,555:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:12,565:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:12,572:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:12,615:INFO:Calculating mean and std
2025-01-17 12:04:12,634:INFO:Creating metrics dataframe
2025-01-17 12:04:12,644:INFO:Uploading results into container
2025-01-17 12:04:12,649:INFO:Uploading model into container now
2025-01-17 12:04:12,651:INFO:_master_model_container: 5
2025-01-17 12:04:12,651:INFO:_display_container: 2
2025-01-17 12:04:12,652:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-01-17 12:04:12,653:INFO:create_model() successfully completed......................................
2025-01-17 12:04:13,074:INFO:SubProcess create_model() end ==================================
2025-01-17 12:04:13,075:INFO:Creating metrics dataframe
2025-01-17 12:04:13,091:INFO:Initializing Naive Bayes
2025-01-17 12:04:13,091:INFO:Total runtime is 1.5970493833223978 minutes
2025-01-17 12:04:13,095:INFO:SubProcess create_model() called ==================================
2025-01-17 12:04:13,096:INFO:Initializing create_model()
2025-01-17 12:04:13,097:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001547730A940>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000015461A182E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 12:04:13,097:INFO:Checking exceptions
2025-01-17 12:04:13,097:INFO:Importing libraries
2025-01-17 12:04:13,099:INFO:Copying training dataset
2025-01-17 12:04:13,816:INFO:Defining folds
2025-01-17 12:04:13,816:INFO:Declaring metric variables
2025-01-17 12:04:13,822:INFO:Importing untrained model
2025-01-17 12:04:13,830:INFO:Naive Bayes Imported successfully
2025-01-17 12:04:13,840:INFO:Starting cross validation
2025-01-17 12:04:13,845:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 12:04:16,516:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:16,534:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:16,545:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:17,251:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:17,277:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:17,299:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:18,065:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:18,077:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:18,094:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:18,583:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:18,595:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:18,606:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:19,943:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:19,971:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:19,998:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:20,820:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:20,853:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:20,871:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:21,068:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:21,085:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:21,104:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:21,458:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:21,469:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:21,477:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:21,794:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:21,803:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:21,812:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:22,078:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:22,085:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:22,092:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:04:22,117:INFO:Calculating mean and std
2025-01-17 12:04:22,118:INFO:Creating metrics dataframe
2025-01-17 12:04:22,120:INFO:Uploading results into container
2025-01-17 12:04:22,122:INFO:Uploading model into container now
2025-01-17 12:04:22,122:INFO:_master_model_container: 6
2025-01-17 12:04:22,122:INFO:_display_container: 2
2025-01-17 12:04:22,122:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-01-17 12:04:22,123:INFO:create_model() successfully completed......................................
2025-01-17 12:04:22,375:INFO:SubProcess create_model() end ==================================
2025-01-17 12:04:22,375:INFO:Creating metrics dataframe
2025-01-17 12:04:22,386:INFO:Initializing Extreme Gradient Boosting
2025-01-17 12:04:22,387:INFO:Total runtime is 1.7519721627235412 minutes
2025-01-17 12:04:22,391:INFO:SubProcess create_model() called ==================================
2025-01-17 12:04:22,391:INFO:Initializing create_model()
2025-01-17 12:04:22,392:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001547730A940>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000015461A182E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 12:04:22,392:INFO:Checking exceptions
2025-01-17 12:04:22,392:INFO:Importing libraries
2025-01-17 12:04:22,392:INFO:Copying training dataset
2025-01-17 12:04:23,021:INFO:Defining folds
2025-01-17 12:04:23,021:INFO:Declaring metric variables
2025-01-17 12:04:23,027:INFO:Importing untrained model
2025-01-17 12:04:23,033:INFO:Extreme Gradient Boosting Imported successfully
2025-01-17 12:04:23,042:INFO:Starting cross validation
2025-01-17 12:04:23,047:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 12:07:35,632:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:07:35,659:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:07:35,679:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:07:39,024:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:07:39,046:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:07:39,062:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:07:39,259:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:07:39,285:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:07:39,305:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:07:42,967:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:07:42,988:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:07:43,002:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:07:44,334:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:07:44,354:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:07:44,368:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:07:44,669:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:07:44,685:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:07:44,702:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:07:44,959:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:07:44,977:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:07:44,985:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:07:45,396:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:07:45,409:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:07:45,417:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:07:46,041:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:07:46,054:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:07:46,062:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:07:46,503:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:07:46,514:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:07:46,523:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:07:46,724:INFO:Calculating mean and std
2025-01-17 12:07:46,794:INFO:Creating metrics dataframe
2025-01-17 12:07:46,865:INFO:Uploading results into container
2025-01-17 12:07:46,871:INFO:Uploading model into container now
2025-01-17 12:07:46,878:INFO:_master_model_container: 7
2025-01-17 12:07:46,879:INFO:_display_container: 2
2025-01-17 12:07:46,888:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2025-01-17 12:07:46,888:INFO:create_model() successfully completed......................................
2025-01-17 12:07:48,101:INFO:SubProcess create_model() end ==================================
2025-01-17 12:07:48,101:INFO:Creating metrics dataframe
2025-01-17 12:07:48,133:INFO:Initializing create_model()
2025-01-17 12:07:48,133:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001547730A940>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 12:07:48,134:INFO:Checking exceptions
2025-01-17 12:07:48,141:INFO:Importing libraries
2025-01-17 12:07:48,143:INFO:Copying training dataset
2025-01-17 12:07:48,878:INFO:Defining folds
2025-01-17 12:07:48,879:INFO:Declaring metric variables
2025-01-17 12:07:48,879:INFO:Importing untrained model
2025-01-17 12:07:48,879:INFO:Declaring custom model
2025-01-17 12:07:48,880:INFO:Extreme Gradient Boosting Imported successfully
2025-01-17 12:07:48,885:INFO:Cross validation set to False
2025-01-17 12:07:48,885:INFO:Fitting Model
2025-01-17 12:08:22,088:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)
2025-01-17 12:08:22,089:INFO:create_model() successfully completed......................................
2025-01-17 12:08:22,399:INFO:_master_model_container: 7
2025-01-17 12:08:22,399:INFO:_display_container: 2
2025-01-17 12:08:22,400:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)
2025-01-17 12:08:22,400:INFO:compare_models() successfully completed......................................
2025-01-17 12:08:42,355:INFO:Initializing finalize_model()
2025-01-17 12:08:42,355:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001547730A940>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-01-17 12:08:42,356:INFO:Finalizing XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)
2025-01-17 12:08:42,749:INFO:Initializing create_model()
2025-01-17 12:08:42,749:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001547730A940>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 12:08:42,749:INFO:Checking exceptions
2025-01-17 12:08:42,751:INFO:Importing libraries
2025-01-17 12:08:42,751:INFO:Copying training dataset
2025-01-17 12:08:42,845:INFO:Defining folds
2025-01-17 12:08:42,846:INFO:Declaring metric variables
2025-01-17 12:08:42,846:INFO:Importing untrained model
2025-01-17 12:08:42,846:INFO:Declaring custom model
2025-01-17 12:08:42,847:INFO:Extreme Gradient Boosting Imported successfully
2025-01-17 12:08:42,851:INFO:Cross validation set to False
2025-01-17 12:08:42,851:INFO:Fitting Model
2025-01-17 12:09:21,907:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['ability', 'able', 'absolutely',
                                             'across', 'act', 'acted', 'acting',
                                             'action', 'actor', 'actress',
                                             'actual', 'actually', 'adaptation',
                                             'add', 'added', 'adm...
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None,
                               objective='multi:softprob', ...))],
         verbose=False)
2025-01-17 12:09:21,908:INFO:create_model() successfully completed......................................
2025-01-17 12:09:22,190:INFO:_master_model_container: 7
2025-01-17 12:09:22,190:INFO:_display_container: 2
2025-01-17 12:09:22,203:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['ability', 'able', 'absolutely',
                                             'across', 'act', 'acted', 'acting',
                                             'action', 'actor', 'actress',
                                             'actual', 'actually', 'adaptation',
                                             'add', 'added', 'adm...
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None,
                               objective='multi:softprob', ...))],
         verbose=False)
2025-01-17 12:09:22,203:INFO:finalize_model() successfully completed......................................
2025-01-17 12:13:25,790:INFO:Initializing get_config()
2025-01-17 12:13:25,790:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001547730A940>, variable=y_train)
2025-01-17 12:13:25,791:INFO:Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
2025-01-17 12:13:26,093:INFO:Variable:  returned as 8943      neutral
6887      neutral
8862     positive
8820      neutral
15629    negative
           ...   
17226    positive
13414    negative
12072    negative
18788    positive
1982      neutral
Name: Sentiment, Length: 14133, dtype: category
Categories (3, object): ['negative', 'neutral', 'positive']
2025-01-17 12:13:26,093:INFO:get_config() successfully completed......................................
2025-01-17 12:15:30,461:INFO:Initializing create_model()
2025-01-17 12:15:30,461:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001547730A940>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 12:15:30,462:INFO:Checking exceptions
2025-01-17 12:15:30,483:INFO:Importing libraries
2025-01-17 12:15:30,484:INFO:Copying training dataset
2025-01-17 12:15:31,113:INFO:Defining folds
2025-01-17 12:15:31,113:INFO:Declaring metric variables
2025-01-17 12:15:31,119:INFO:Importing untrained model
2025-01-17 12:15:31,125:INFO:Extreme Gradient Boosting Imported successfully
2025-01-17 12:15:31,133:INFO:Starting cross validation
2025-01-17 12:15:31,140:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 12:18:46,069:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:18:46,102:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:18:46,148:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:18:49,920:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:18:49,953:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:18:49,969:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:18:50,716:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:18:50,750:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:18:50,774:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:18:51,841:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:18:51,860:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:18:51,871:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:18:51,942:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:18:51,965:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:18:51,963:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:18:51,977:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:18:51,983:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:18:51,994:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:18:52,293:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:18:52,314:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:18:52,328:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:18:52,566:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:18:52,588:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:18:52,605:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:18:53,103:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:18:53,121:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:18:53,131:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:18:53,585:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:18:53,600:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:18:53,607:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 12:18:53,760:INFO:Calculating mean and std
2025-01-17 12:18:53,814:INFO:Creating metrics dataframe
2025-01-17 12:18:53,891:INFO:Finalizing model
2025-01-17 12:19:27,056:INFO:Uploading results into container
2025-01-17 12:19:27,060:INFO:Uploading model into container now
2025-01-17 12:19:27,101:INFO:_master_model_container: 8
2025-01-17 12:19:27,101:INFO:_display_container: 3
2025-01-17 12:19:27,103:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)
2025-01-17 12:19:27,104:INFO:create_model() successfully completed......................................
2025-01-17 12:21:36,701:INFO:Initializing finalize_model()
2025-01-17 12:21:36,701:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001547730A940>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-01-17 12:21:36,704:INFO:Finalizing XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)
2025-01-17 12:21:37,278:INFO:Initializing create_model()
2025-01-17 12:21:37,278:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001547730A940>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 12:21:37,278:INFO:Checking exceptions
2025-01-17 12:21:37,285:INFO:Importing libraries
2025-01-17 12:21:37,285:INFO:Copying training dataset
2025-01-17 12:21:37,423:INFO:Defining folds
2025-01-17 12:21:37,423:INFO:Declaring metric variables
2025-01-17 12:21:37,424:INFO:Importing untrained model
2025-01-17 12:21:37,424:INFO:Declaring custom model
2025-01-17 12:21:37,425:INFO:Extreme Gradient Boosting Imported successfully
2025-01-17 12:21:37,429:INFO:Cross validation set to False
2025-01-17 12:21:37,429:INFO:Fitting Model
2025-01-17 12:22:18,476:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['ability', 'able', 'absolutely',
                                             'across', 'act', 'acted', 'acting',
                                             'action', 'actor', 'actress',
                                             'actual', 'actually', 'adaptation',
                                             'add', 'added', 'adm...
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None,
                               objective='multi:softprob', ...))],
         verbose=False)
2025-01-17 12:22:18,476:INFO:create_model() successfully completed......................................
2025-01-17 12:22:19,005:INFO:_master_model_container: 8
2025-01-17 12:22:19,005:INFO:_display_container: 3
2025-01-17 12:22:19,019:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['ability', 'able', 'absolutely',
                                             'across', 'act', 'acted', 'acting',
                                             'action', 'actor', 'actress',
                                             'actual', 'actually', 'adaptation',
                                             'add', 'added', 'adm...
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None,
                               objective='multi:softprob', ...))],
         verbose=False)
2025-01-17 12:22:19,019:INFO:finalize_model() successfully completed......................................
2025-01-17 12:23:59,794:INFO:Initializing save_model()
2025-01-17 12:23:59,795:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['ability', 'able', 'absolutely',
                                             'across', 'act', 'acted', 'acting',
                                             'action', 'actor', 'actress',
                                             'actual', 'actually', 'adaptation',
                                             'add', 'added', 'adm...
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None,
                               objective='multi:softprob', ...))],
         verbose=False), model_name=xgb_sentiment_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\AMMUNA~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['ability', 'able', 'absolutely',
                                             'across', 'act', 'acted', 'acting',
                                             'action', 'actor', 'actress',
                                             'actual'...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-01-17 12:23:59,795:INFO:Adding model into prep_pipe
2025-01-17 12:23:59,795:WARNING:Only Model saved as it was a pipeline.
2025-01-17 12:23:59,826:INFO:xgb_sentiment_model.pkl saved in current working directory
2025-01-17 12:23:59,843:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['ability', 'able', 'absolutely',
                                             'across', 'act', 'acted', 'acting',
                                             'action', 'actor', 'actress',
                                             'actual', 'actually', 'adaptation',
                                             'add', 'added', 'adm...
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None,
                               objective='multi:softprob', ...))],
         verbose=False)
2025-01-17 12:23:59,844:INFO:save_model() successfully completed......................................
2025-01-17 12:24:40,142:INFO:Initializing load_model()
2025-01-17 12:24:40,142:INFO:load_model(model_name=xgb_sentiment_model, platform=None, authentication=None, verbose=True)
2025-01-17 12:24:58,497:INFO:Initializing predict_model()
2025-01-17 12:24:58,497:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001547730A940>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['ability', 'able', 'absolutely',
                                             'across', 'act', 'acted', 'acting',
                                             'action', 'actor', 'actress',
                                             'actual', 'actually', 'adaptation',
                                             'add', 'added', 'adm...
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None,
                               objective='multi:softprob', ...))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001542373B670>)
2025-01-17 12:24:58,497:INFO:Checking exceptions
2025-01-17 12:24:58,497:INFO:Preloading libraries
2025-01-17 12:24:58,500:INFO:Set up data.
2025-01-17 12:24:58,654:INFO:Set up index.
2025-01-17 12:25:02,536:INFO:Initializing save_model()
2025-01-17 12:25:02,536:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['ability', 'able', 'absolutely',
                                             'across', 'act', 'acted', 'acting',
                                             'action', 'actor', 'actress',
                                             'actual', 'actually', 'adaptation',
                                             'add', 'added', 'adm...
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None,
                               objective='multi:softprob', ...))],
         verbose=False), model_name=final_sentiment_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\AMMUNA~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['ability', 'able', 'absolutely',
                                             'across', 'act', 'acted', 'acting',
                                             'action', 'actor', 'actress',
                                             'actual'...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-01-17 12:25:02,536:INFO:Adding model into prep_pipe
2025-01-17 12:25:02,536:WARNING:Only Model saved as it was a pipeline.
2025-01-17 12:25:02,563:INFO:final_sentiment_model.pkl saved in current working directory
2025-01-17 12:25:02,579:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['ability', 'able', 'absolutely',
                                             'across', 'act', 'acted', 'acting',
                                             'action', 'actor', 'actress',
                                             'actual', 'actually', 'adaptation',
                                             'add', 'added', 'adm...
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None,
                               objective='multi:softprob', ...))],
         verbose=False)
2025-01-17 12:25:02,580:INFO:save_model() successfully completed......................................
2025-01-17 12:40:18,139:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 12:40:18,140:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 12:40:18,140:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 12:40:18,140:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 12:40:23,219:INFO:Initializing load_model()
2025-01-17 12:40:23,220:INFO:load_model(model_name=xgb_sentiment_model, platform=None, authentication=None, verbose=True)
2025-01-17 12:40:24,090:INFO:Initializing load_model()
2025-01-17 12:40:24,091:INFO:load_model(model_name=xgb_sentiment_model, platform=None, authentication=None, verbose=True)
2025-01-17 12:40:24,125:WARNING:E:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.18.1', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.12.3', 'category_encoders': '2.6.4', 'lightgbm': 'Installed but version unavailable', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.9.0', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '24.2', 'setuptools': '75.1.0', 'pycaret': '3.3.2', 'IPython': '8.18.1', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '2.1.4', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.12.3', 'category_encoders': '2.6.4', 'lightgbm': '4.5.0', 'numba': '0.60.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '6.1.1', 'markupsafe': '2.1.5', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.9.0', 'machine': 'AMD64'}}
  warnings.warn(

2025-01-17 12:40:24,126:INFO:Transformation Pipeline and Model Successfully Loaded
2025-01-17 12:54:31,587:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 12:54:31,588:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 12:54:31,588:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 12:54:31,588:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 12:54:34,166:INFO:Initializing load_model()
2025-01-17 12:54:34,167:INFO:load_model(model_name=xgb_sentiment_model, platform=None, authentication=None, verbose=True)
2025-01-17 12:59:35,030:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 12:59:35,030:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 12:59:35,030:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 12:59:35,030:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 13:10:16,151:INFO:PyCaret ClassificationExperiment
2025-01-17 13:10:16,151:INFO:Logging name: clf-default-name
2025-01-17 13:10:16,152:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-01-17 13:10:16,152:INFO:version 3.3.2
2025-01-17 13:10:16,152:INFO:Initializing setup()
2025-01-17 13:10:16,152:INFO:self.USI: abef
2025-01-17 13:10:16,152:INFO:self._variable_keys: {'idx', 'exp_id', '_ml_usecase', 'exp_name_log', 'y_test', 'USI', 'gpu_param', 'fold_shuffle_param', 'is_multiclass', 'target_param', 'fold_groups_param', 'pipeline', 'X_train', 'html_param', 'y', 'fix_imbalance', 'memory', 'log_plots_param', 'logging_param', '_available_plots', 'fold_generator', 'X', 'X_test', 'y_train', 'data', 'n_jobs_param', 'gpu_n_jobs_param', 'seed'}
2025-01-17 13:10:16,152:INFO:Checking environment
2025-01-17 13:10:16,152:INFO:python_version: 3.9.0
2025-01-17 13:10:16,152:INFO:python_build: ('default', 'Nov 15 2020 08:30:55')
2025-01-17 13:10:16,152:INFO:machine: AMD64
2025-01-17 13:10:16,152:INFO:platform: Windows-10-10.0.26100-SP0
2025-01-17 13:10:16,157:INFO:Memory: svmem(total=7967137792, available=1151442944, percent=85.5, used=6815694848, free=1151442944)
2025-01-17 13:10:16,157:INFO:Physical Core: 6
2025-01-17 13:10:16,157:INFO:Logical Core: 12
2025-01-17 13:10:16,157:INFO:Checking libraries
2025-01-17 13:10:16,157:INFO:System:
2025-01-17 13:10:16,157:INFO:    python: 3.9.0 (default, Nov 15 2020, 08:30:55) [MSC v.1916 64 bit (AMD64)]
2025-01-17 13:10:16,157:INFO:executable: e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\python.exe
2025-01-17 13:10:16,157:INFO:   machine: Windows-10-10.0.26100-SP0
2025-01-17 13:10:16,157:INFO:PyCaret required dependencies:
2025-01-17 13:10:16,827:INFO:                 pip: 24.2
2025-01-17 13:10:16,827:INFO:          setuptools: 75.1.0
2025-01-17 13:10:16,827:INFO:             pycaret: 3.3.2
2025-01-17 13:10:16,827:INFO:             IPython: 8.18.1
2025-01-17 13:10:16,827:INFO:          ipywidgets: 8.1.5
2025-01-17 13:10:16,827:INFO:                tqdm: 4.67.1
2025-01-17 13:10:16,827:INFO:               numpy: 1.26.4
2025-01-17 13:10:16,827:INFO:              pandas: 2.1.4
2025-01-17 13:10:16,828:INFO:              jinja2: 3.1.5
2025-01-17 13:10:16,828:INFO:               scipy: 1.11.4
2025-01-17 13:10:16,828:INFO:              joblib: 1.3.2
2025-01-17 13:10:16,828:INFO:             sklearn: 1.4.2
2025-01-17 13:10:16,828:INFO:                pyod: 2.0.3
2025-01-17 13:10:16,828:INFO:            imblearn: 0.12.3
2025-01-17 13:10:16,828:INFO:   category_encoders: 2.6.4
2025-01-17 13:10:16,828:INFO:            lightgbm: 4.5.0
2025-01-17 13:10:16,828:INFO:               numba: 0.60.0
2025-01-17 13:10:16,828:INFO:            requests: 2.32.3
2025-01-17 13:10:16,828:INFO:          matplotlib: 3.7.5
2025-01-17 13:10:16,828:INFO:          scikitplot: 0.3.7
2025-01-17 13:10:16,828:INFO:         yellowbrick: 1.5
2025-01-17 13:10:16,828:INFO:              plotly: 5.24.1
2025-01-17 13:10:16,828:INFO:    plotly-resampler: Not installed
2025-01-17 13:10:16,828:INFO:             kaleido: 0.2.1
2025-01-17 13:10:16,828:INFO:           schemdraw: 0.15
2025-01-17 13:10:16,828:INFO:         statsmodels: 0.14.4
2025-01-17 13:10:16,828:INFO:              sktime: 0.26.0
2025-01-17 13:10:16,828:INFO:               tbats: 1.1.3
2025-01-17 13:10:16,828:INFO:            pmdarima: 2.0.4
2025-01-17 13:10:16,828:INFO:              psutil: 6.1.1
2025-01-17 13:10:16,828:INFO:          markupsafe: 2.1.5
2025-01-17 13:10:16,828:INFO:             pickle5: Not installed
2025-01-17 13:10:16,828:INFO:         cloudpickle: 3.1.1
2025-01-17 13:10:16,828:INFO:         deprecation: 2.1.0
2025-01-17 13:10:16,828:INFO:              xxhash: 3.5.0
2025-01-17 13:10:16,828:INFO:           wurlitzer: Not installed
2025-01-17 13:10:16,828:INFO:PyCaret optional dependencies:
2025-01-17 13:10:17,352:INFO:                shap: 0.44.1
2025-01-17 13:10:17,352:INFO:           interpret: 0.6.9
2025-01-17 13:10:17,352:INFO:                umap: 0.5.7
2025-01-17 13:10:17,352:INFO:     ydata_profiling: 4.12.1
2025-01-17 13:10:17,352:INFO:  explainerdashboard: 0.4.8
2025-01-17 13:10:17,352:INFO:             autoviz: Not installed
2025-01-17 13:10:17,352:INFO:           fairlearn: 0.7.0
2025-01-17 13:10:17,352:INFO:          deepchecks: Not installed
2025-01-17 13:10:17,352:INFO:             xgboost: 2.1.3
2025-01-17 13:10:17,352:INFO:            catboost: 1.2.7
2025-01-17 13:10:17,352:INFO:              kmodes: 0.12.2
2025-01-17 13:10:17,352:INFO:             mlxtend: 0.23.3
2025-01-17 13:10:17,352:INFO:       statsforecast: 1.5.0
2025-01-17 13:10:17,352:INFO:        tune_sklearn: Not installed
2025-01-17 13:10:17,352:INFO:                 ray: Not installed
2025-01-17 13:10:17,352:INFO:            hyperopt: 0.2.7
2025-01-17 13:10:17,353:INFO:              optuna: 4.1.0
2025-01-17 13:10:17,353:INFO:               skopt: 0.10.2
2025-01-17 13:10:17,353:INFO:              mlflow: 2.19.0
2025-01-17 13:10:17,353:INFO:              gradio: Not installed
2025-01-17 13:10:17,353:INFO:             fastapi: Not installed
2025-01-17 13:10:17,353:INFO:             uvicorn: Not installed
2025-01-17 13:10:17,353:INFO:              m2cgen: 0.10.0
2025-01-17 13:10:17,353:INFO:           evidently: 0.4.40
2025-01-17 13:10:17,353:INFO:               fugue: 0.8.7
2025-01-17 13:10:17,353:INFO:           streamlit: 1.41.1
2025-01-17 13:10:17,353:INFO:             prophet: Not installed
2025-01-17 13:10:17,353:INFO:None
2025-01-17 13:10:17,353:INFO:Set up data.
2025-01-17 13:10:18,517:INFO:Set up folding strategy.
2025-01-17 13:10:18,517:INFO:Set up train/test split.
2025-01-17 13:10:19,050:INFO:Set up index.
2025-01-17 13:10:19,083:INFO:Assigning column types.
2025-01-17 13:10:19,786:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-01-17 13:10:19,833:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 13:10:19,837:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 13:10:19,877:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 13:10:19,880:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 13:10:20,051:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 13:10:20,052:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 13:10:20,080:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 13:10:20,083:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 13:10:20,083:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-01-17 13:10:20,129:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 13:10:20,157:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 13:10:20,160:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 13:10:20,207:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 13:10:20,235:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 13:10:20,239:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 13:10:20,239:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-01-17 13:10:20,315:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 13:10:20,317:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 13:10:20,392:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 13:10:20,395:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 13:10:20,398:INFO:Preparing preprocessing pipeline...
2025-01-17 13:10:20,488:INFO:Set up label encoding.
2025-01-17 13:10:20,488:INFO:Set up simple imputation.
2025-01-17 13:10:22,032:INFO:Finished creating preprocessing pipeline.
2025-01-17 13:10:22,041:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\AMMUNA~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['ability', 'able', 'absolutely',
                                             'across', 'act', 'acted', 'acting',
                                             'action', 'actor', 'actress',
                                             'actual'...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-01-17 13:10:22,041:INFO:Creating final display dataframe.
2025-01-17 13:10:25,620:INFO:Setup _display_container:                     Description                                 Value
0                    Session id                                  3630
1                        Target                             Sentiment
2                   Target type                            Multiclass
3                Target mapping  negative: 0, neutral: 1, positive: 2
4           Original data shape                         (20190, 1001)
5        Transformed data shape                         (20190, 1001)
6   Transformed train set shape                         (14133, 1001)
7    Transformed test set shape                          (6057, 1001)
8              Numeric features                                  1000
9                    Preprocess                                  True
10              Imputation type                                simple
11           Numeric imputation                                  mean
12       Categorical imputation                                  mode
13               Fold Generator                       StratifiedKFold
14                  Fold Number                                    10
15                     CPU Jobs                                    -1
16                      Use GPU                                 False
17               Log Experiment                                 False
18              Experiment Name                      clf-default-name
19                          USI                                  abef
2025-01-17 13:10:25,704:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 13:10:25,706:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 13:10:25,782:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 13:10:25,785:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 13:10:25,787:INFO:setup() successfully completed in 9.74s...............
2025-01-17 13:10:25,787:INFO:Initializing get_config()
2025-01-17 13:10:25,787:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012CA9E56A00>, variable=y_train)
2025-01-17 13:10:25,787:INFO:Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
2025-01-17 13:10:25,954:INFO:Variable:  returned as 10584    negative
9146      neutral
4217     positive
7156      neutral
4867      neutral
           ...   
313       neutral
10676    negative
11830    negative
6739     positive
12122    negative
Name: Sentiment, Length: 14133, dtype: category
Categories (3, object): ['negative', 'neutral', 'positive']
2025-01-17 13:10:25,954:INFO:get_config() successfully completed......................................
2025-01-17 13:10:29,146:INFO:Initializing compare_models()
2025-01-17 13:10:29,146:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012CA9E56A00>, include=['svm', 'dt', 'rf', 'ridge', 'knn', 'nb', 'xgboost'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000012CA9E56A00>, 'include': ['svm', 'dt', 'rf', 'ridge', 'knn', 'nb', 'xgboost'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-01-17 13:10:29,146:INFO:Checking exceptions
2025-01-17 13:10:29,825:INFO:Preparing display monitor
2025-01-17 13:10:29,863:INFO:Initializing SVM - Linear Kernel
2025-01-17 13:10:29,863:INFO:Total runtime is 0.0 minutes
2025-01-17 13:10:29,868:INFO:SubProcess create_model() called ==================================
2025-01-17 13:10:29,869:INFO:Initializing create_model()
2025-01-17 13:10:29,869:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012CA9E56A00>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012CB8E66040>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 13:10:29,869:INFO:Checking exceptions
2025-01-17 13:10:29,869:INFO:Importing libraries
2025-01-17 13:10:29,869:INFO:Copying training dataset
2025-01-17 13:10:30,646:INFO:Defining folds
2025-01-17 13:10:30,647:INFO:Declaring metric variables
2025-01-17 13:10:30,650:INFO:Importing untrained model
2025-01-17 13:10:30,656:INFO:SVM - Linear Kernel Imported successfully
2025-01-17 13:10:30,668:INFO:Starting cross validation
2025-01-17 13:10:30,673:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 13:10:43,526:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 13:10:43,538:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:10:43,561:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:10:43,577:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:10:43,963:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 13:10:43,970:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:10:44,004:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:10:44,035:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:10:44,448:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 13:10:44,457:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:10:44,471:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:10:44,485:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:10:45,209:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 13:10:45,222:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:10:45,243:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:10:45,259:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:10:46,028:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 13:10:46,037:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:10:46,056:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:10:46,075:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:10:47,200:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 13:10:47,217:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:10:47,245:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:10:47,266:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:10:48,393:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 13:10:48,405:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:10:48,427:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:10:48,448:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:10:49,362:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 13:10:49,372:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:10:49,390:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:10:49,404:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:10:50,039:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 13:10:50,046:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:10:50,059:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:10:50,075:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:10:50,356:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 13:10:50,361:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:10:50,370:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:10:50,380:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:10:50,432:INFO:Calculating mean and std
2025-01-17 13:10:50,446:INFO:Creating metrics dataframe
2025-01-17 13:10:50,463:INFO:Uploading results into container
2025-01-17 13:10:50,468:INFO:Uploading model into container now
2025-01-17 13:10:50,471:INFO:_master_model_container: 1
2025-01-17 13:10:50,471:INFO:_display_container: 2
2025-01-17 13:10:50,473:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3630, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-01-17 13:10:50,473:INFO:create_model() successfully completed......................................
2025-01-17 13:10:51,029:INFO:SubProcess create_model() end ==================================
2025-01-17 13:10:51,029:INFO:Creating metrics dataframe
2025-01-17 13:10:51,040:INFO:Initializing Decision Tree Classifier
2025-01-17 13:10:51,041:INFO:Total runtime is 0.3529637416203817 minutes
2025-01-17 13:10:51,045:INFO:SubProcess create_model() called ==================================
2025-01-17 13:10:51,045:INFO:Initializing create_model()
2025-01-17 13:10:51,046:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012CA9E56A00>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012CB8E66040>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 13:10:51,046:INFO:Checking exceptions
2025-01-17 13:10:51,046:INFO:Importing libraries
2025-01-17 13:10:51,047:INFO:Copying training dataset
2025-01-17 13:10:51,682:INFO:Defining folds
2025-01-17 13:10:51,683:INFO:Declaring metric variables
2025-01-17 13:10:51,687:INFO:Importing untrained model
2025-01-17 13:10:51,692:INFO:Decision Tree Classifier Imported successfully
2025-01-17 13:10:51,701:INFO:Starting cross validation
2025-01-17 13:10:51,706:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 13:11:06,683:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:06,696:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:06,708:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:07,157:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:07,172:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:07,187:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:07,394:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:07,409:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:07,426:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:07,855:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:07,869:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:07,880:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:08,358:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:08,371:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:08,382:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:09,017:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:09,022:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:09,026:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:09,033:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:09,035:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:09,043:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:09,732:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:09,743:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:09,750:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:10,528:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:10,536:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:10,543:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:11,279:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:11,289:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:11,297:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:11,331:INFO:Calculating mean and std
2025-01-17 13:11:11,345:INFO:Creating metrics dataframe
2025-01-17 13:11:11,369:INFO:Uploading results into container
2025-01-17 13:11:11,375:INFO:Uploading model into container now
2025-01-17 13:11:11,378:INFO:_master_model_container: 2
2025-01-17 13:11:11,378:INFO:_display_container: 2
2025-01-17 13:11:11,380:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3630, splitter='best')
2025-01-17 13:11:11,380:INFO:create_model() successfully completed......................................
2025-01-17 13:11:11,866:INFO:SubProcess create_model() end ==================================
2025-01-17 13:11:11,866:INFO:Creating metrics dataframe
2025-01-17 13:11:11,886:INFO:Initializing Random Forest Classifier
2025-01-17 13:11:11,887:INFO:Total runtime is 0.7003882010777791 minutes
2025-01-17 13:11:11,891:INFO:SubProcess create_model() called ==================================
2025-01-17 13:11:11,891:INFO:Initializing create_model()
2025-01-17 13:11:11,892:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012CA9E56A00>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012CB8E66040>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 13:11:11,892:INFO:Checking exceptions
2025-01-17 13:11:11,892:INFO:Importing libraries
2025-01-17 13:11:11,894:INFO:Copying training dataset
2025-01-17 13:11:12,599:INFO:Defining folds
2025-01-17 13:11:12,599:INFO:Declaring metric variables
2025-01-17 13:11:12,606:INFO:Importing untrained model
2025-01-17 13:11:12,614:INFO:Random Forest Classifier Imported successfully
2025-01-17 13:11:12,624:INFO:Starting cross validation
2025-01-17 13:11:12,629:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 13:11:27,205:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:27,299:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:27,315:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:29,335:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:29,351:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:29,364:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:34,585:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:34,671:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:34,687:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:36,721:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:36,738:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:36,778:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:36,863:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:36,882:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:36,933:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:37,005:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:37,018:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:37,021:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:37,045:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:37,051:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:37,065:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:37,288:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:37,302:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:37,316:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:37,318:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:37,331:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:37,341:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:37,435:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:37,443:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:37,450:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:37,484:INFO:Calculating mean and std
2025-01-17 13:11:37,486:INFO:Creating metrics dataframe
2025-01-17 13:11:37,489:INFO:Uploading results into container
2025-01-17 13:11:37,490:INFO:Uploading model into container now
2025-01-17 13:11:37,492:INFO:_master_model_container: 3
2025-01-17 13:11:37,492:INFO:_display_container: 2
2025-01-17 13:11:37,494:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=3630, verbose=0,
                       warm_start=False)
2025-01-17 13:11:37,494:INFO:create_model() successfully completed......................................
2025-01-17 13:11:37,871:INFO:SubProcess create_model() end ==================================
2025-01-17 13:11:37,871:INFO:Creating metrics dataframe
2025-01-17 13:11:37,883:INFO:Initializing Ridge Classifier
2025-01-17 13:11:37,883:INFO:Total runtime is 1.1336646397908527 minutes
2025-01-17 13:11:37,888:INFO:SubProcess create_model() called ==================================
2025-01-17 13:11:37,889:INFO:Initializing create_model()
2025-01-17 13:11:37,889:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012CA9E56A00>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012CB8E66040>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 13:11:37,889:INFO:Checking exceptions
2025-01-17 13:11:37,889:INFO:Importing libraries
2025-01-17 13:11:37,889:INFO:Copying training dataset
2025-01-17 13:11:38,527:INFO:Defining folds
2025-01-17 13:11:38,527:INFO:Declaring metric variables
2025-01-17 13:11:38,531:INFO:Importing untrained model
2025-01-17 13:11:38,537:INFO:Ridge Classifier Imported successfully
2025-01-17 13:11:38,544:INFO:Starting cross validation
2025-01-17 13:11:38,549:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 13:11:40,932:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 13:11:40,943:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:40,965:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:40,986:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:41,538:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 13:11:41,551:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:41,579:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:41,611:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:42,156:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 13:11:42,164:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:42,175:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:42,191:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:42,705:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 13:11:42,712:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:42,724:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:42,739:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:44,222:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 13:11:44,233:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:44,257:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:44,289:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:44,847:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 13:11:44,853:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:44,867:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:44,886:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:45,269:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 13:11:45,273:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:45,292:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:45,304:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:45,583:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 13:11:45,587:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:45,596:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:45,607:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:45,875:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 13:11:45,879:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:45,886:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:45,894:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:46,134:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 13:11:46,138:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:46,145:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:46,154:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:46,193:INFO:Calculating mean and std
2025-01-17 13:11:46,196:INFO:Creating metrics dataframe
2025-01-17 13:11:46,198:INFO:Uploading results into container
2025-01-17 13:11:46,199:INFO:Uploading model into container now
2025-01-17 13:11:46,199:INFO:_master_model_container: 4
2025-01-17 13:11:46,199:INFO:_display_container: 2
2025-01-17 13:11:46,200:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3630, solver='auto',
                tol=0.0001)
2025-01-17 13:11:46,200:INFO:create_model() successfully completed......................................
2025-01-17 13:11:46,481:INFO:SubProcess create_model() end ==================================
2025-01-17 13:11:46,481:INFO:Creating metrics dataframe
2025-01-17 13:11:46,492:INFO:Initializing K Neighbors Classifier
2025-01-17 13:11:46,492:INFO:Total runtime is 1.2771482229232787 minutes
2025-01-17 13:11:46,496:INFO:SubProcess create_model() called ==================================
2025-01-17 13:11:46,496:INFO:Initializing create_model()
2025-01-17 13:11:46,496:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012CA9E56A00>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012CB8E66040>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 13:11:46,497:INFO:Checking exceptions
2025-01-17 13:11:46,497:INFO:Importing libraries
2025-01-17 13:11:46,497:INFO:Copying training dataset
2025-01-17 13:11:47,124:INFO:Defining folds
2025-01-17 13:11:47,125:INFO:Declaring metric variables
2025-01-17 13:11:47,130:INFO:Importing untrained model
2025-01-17 13:11:47,136:INFO:K Neighbors Classifier Imported successfully
2025-01-17 13:11:47,144:INFO:Starting cross validation
2025-01-17 13:11:47,148:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 13:11:59,961:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:11:59,996:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:00,031:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:00,176:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:00,212:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:00,241:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:00,734:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:00,755:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:00,774:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:01,611:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:01,640:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:01,668:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:03,163:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:03,179:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:03,191:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:03,403:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:03,421:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:03,438:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:03,513:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:03,525:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:03,539:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:03,917:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:03,929:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:03,941:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:04,240:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:04,249:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:04,260:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:04,649:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:04,656:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:04,663:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:04,701:INFO:Calculating mean and std
2025-01-17 13:12:04,711:INFO:Creating metrics dataframe
2025-01-17 13:12:04,725:INFO:Uploading results into container
2025-01-17 13:12:04,729:INFO:Uploading model into container now
2025-01-17 13:12:04,731:INFO:_master_model_container: 5
2025-01-17 13:12:04,731:INFO:_display_container: 2
2025-01-17 13:12:04,733:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-01-17 13:12:04,733:INFO:create_model() successfully completed......................................
2025-01-17 13:12:05,210:INFO:SubProcess create_model() end ==================================
2025-01-17 13:12:05,210:INFO:Creating metrics dataframe
2025-01-17 13:12:05,228:INFO:Initializing Naive Bayes
2025-01-17 13:12:05,229:INFO:Total runtime is 1.5894260485967 minutes
2025-01-17 13:12:05,235:INFO:SubProcess create_model() called ==================================
2025-01-17 13:12:05,235:INFO:Initializing create_model()
2025-01-17 13:12:05,235:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012CA9E56A00>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012CB8E66040>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 13:12:05,236:INFO:Checking exceptions
2025-01-17 13:12:05,236:INFO:Importing libraries
2025-01-17 13:12:05,238:INFO:Copying training dataset
2025-01-17 13:12:05,890:INFO:Defining folds
2025-01-17 13:12:05,890:INFO:Declaring metric variables
2025-01-17 13:12:05,896:INFO:Importing untrained model
2025-01-17 13:12:05,901:INFO:Naive Bayes Imported successfully
2025-01-17 13:12:05,916:INFO:Starting cross validation
2025-01-17 13:12:05,923:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 13:12:08,406:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:08,435:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:08,459:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:09,275:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:09,293:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:09,312:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:10,006:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:10,036:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:10,060:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:10,725:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:10,745:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:10,769:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:12,202:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:12,217:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:12,245:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:12,841:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:12,855:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:12,868:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:12,987:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:12,997:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:13,021:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:13,489:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:13,502:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:13,513:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:13,845:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:13,854:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:13,862:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:14,114:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:14,121:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:14,128:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:12:14,156:INFO:Calculating mean and std
2025-01-17 13:12:14,158:INFO:Creating metrics dataframe
2025-01-17 13:12:14,160:INFO:Uploading results into container
2025-01-17 13:12:14,161:INFO:Uploading model into container now
2025-01-17 13:12:14,162:INFO:_master_model_container: 6
2025-01-17 13:12:14,162:INFO:_display_container: 2
2025-01-17 13:12:14,163:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-01-17 13:12:14,163:INFO:create_model() successfully completed......................................
2025-01-17 13:12:14,449:INFO:SubProcess create_model() end ==================================
2025-01-17 13:12:14,449:INFO:Creating metrics dataframe
2025-01-17 13:12:14,464:INFO:Initializing Extreme Gradient Boosting
2025-01-17 13:12:14,464:INFO:Total runtime is 1.7433481216430664 minutes
2025-01-17 13:12:14,471:INFO:SubProcess create_model() called ==================================
2025-01-17 13:12:14,472:INFO:Initializing create_model()
2025-01-17 13:12:14,472:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012CA9E56A00>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012CB8E66040>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 13:12:14,472:INFO:Checking exceptions
2025-01-17 13:12:14,472:INFO:Importing libraries
2025-01-17 13:12:14,473:INFO:Copying training dataset
2025-01-17 13:12:15,088:INFO:Defining folds
2025-01-17 13:12:15,088:INFO:Declaring metric variables
2025-01-17 13:12:15,093:INFO:Importing untrained model
2025-01-17 13:12:15,098:INFO:Extreme Gradient Boosting Imported successfully
2025-01-17 13:12:15,107:INFO:Starting cross validation
2025-01-17 13:12:15,112:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 13:12:23,568:WARNING:create_model() for xgboost raised an exception or returned all 0.0, trying without fit_kwargs:
2025-01-17 13:12:23,697:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\joblib\externals\loky\backend\queues.py", line 161, in _feed
    send_bytes(obj_)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\multiprocessing\connection.py", line 205, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\multiprocessing\connection.py", line 285, in _send_bytes
    ov, err = _winapi.WriteFile(self._handle, buf, overlapped=True)
OSError: [WinError 1450] Insufficient system resources exist to complete the requested service
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
_pickle.PicklingError: Could not pickle the task to send it to the workers.

2025-01-17 13:12:23,698:INFO:Initializing create_model()
2025-01-17 13:12:23,698:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012CA9E56A00>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000012CB8E66040>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 13:12:23,699:INFO:Checking exceptions
2025-01-17 13:12:23,699:INFO:Importing libraries
2025-01-17 13:12:23,701:INFO:Copying training dataset
2025-01-17 13:12:24,411:INFO:Defining folds
2025-01-17 13:12:24,412:INFO:Declaring metric variables
2025-01-17 13:12:24,420:INFO:Importing untrained model
2025-01-17 13:12:24,425:INFO:Extreme Gradient Boosting Imported successfully
2025-01-17 13:12:24,433:INFO:Starting cross validation
2025-01-17 13:12:24,438:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 13:15:57,444:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:15:57,445:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:15:57,473:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:15:57,475:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:15:57,497:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:15:57,497:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:15:57,696:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:15:57,723:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:15:57,737:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:15:57,952:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:15:57,975:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:15:57,998:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:15:58,096:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:15:58,124:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:15:58,147:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:15:58,751:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:15:58,772:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:15:58,786:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:15:58,944:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:15:58,969:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:15:58,978:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:15:59,288:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:15:59,304:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:15:59,312:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:15:59,514:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:15:59,533:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:15:59,543:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:16:00,134:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:16:00,146:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:16:00,155:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:16:00,320:INFO:Calculating mean and std
2025-01-17 13:16:00,346:INFO:Creating metrics dataframe
2025-01-17 13:16:00,391:INFO:Uploading results into container
2025-01-17 13:16:00,396:INFO:Uploading model into container now
2025-01-17 13:16:00,403:INFO:_master_model_container: 7
2025-01-17 13:16:00,403:INFO:_display_container: 2
2025-01-17 13:16:00,411:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2025-01-17 13:16:00,411:INFO:create_model() successfully completed......................................
2025-01-17 13:16:01,989:INFO:SubProcess create_model() end ==================================
2025-01-17 13:16:01,989:INFO:Creating metrics dataframe
2025-01-17 13:16:02,023:INFO:Initializing create_model()
2025-01-17 13:16:02,023:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012CA9E56A00>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 13:16:02,024:INFO:Checking exceptions
2025-01-17 13:16:02,029:INFO:Importing libraries
2025-01-17 13:16:02,032:INFO:Copying training dataset
2025-01-17 13:16:02,876:INFO:Defining folds
2025-01-17 13:16:02,877:INFO:Declaring metric variables
2025-01-17 13:16:02,878:INFO:Importing untrained model
2025-01-17 13:16:02,878:INFO:Declaring custom model
2025-01-17 13:16:02,880:INFO:Extreme Gradient Boosting Imported successfully
2025-01-17 13:16:02,885:INFO:Cross validation set to False
2025-01-17 13:16:02,885:INFO:Fitting Model
2025-01-17 13:16:37,793:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)
2025-01-17 13:16:37,793:INFO:create_model() successfully completed......................................
2025-01-17 13:16:38,100:INFO:_master_model_container: 7
2025-01-17 13:16:38,100:INFO:_display_container: 2
2025-01-17 13:16:38,101:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)
2025-01-17 13:16:38,101:INFO:compare_models() successfully completed......................................
2025-01-17 13:16:44,102:INFO:Initializing get_config()
2025-01-17 13:16:44,102:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012CA9E56A00>, variable=y_train)
2025-01-17 13:16:44,103:INFO:Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
2025-01-17 13:16:44,284:INFO:Variable:  returned as 10584    negative
9146      neutral
4217     positive
7156      neutral
4867      neutral
           ...   
313       neutral
10676    negative
11830    negative
6739     positive
12122    negative
Name: Sentiment, Length: 14133, dtype: category
Categories (3, object): ['negative', 'neutral', 'positive']
2025-01-17 13:16:44,285:INFO:get_config() successfully completed......................................
2025-01-17 13:16:51,353:INFO:Initializing create_model()
2025-01-17 13:16:51,353:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012CA9E56A00>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 13:16:51,353:INFO:Checking exceptions
2025-01-17 13:16:51,371:INFO:Importing libraries
2025-01-17 13:16:51,371:INFO:Copying training dataset
2025-01-17 13:16:51,972:INFO:Defining folds
2025-01-17 13:16:51,972:INFO:Declaring metric variables
2025-01-17 13:16:51,979:INFO:Importing untrained model
2025-01-17 13:16:51,985:INFO:Extreme Gradient Boosting Imported successfully
2025-01-17 13:16:51,992:INFO:Starting cross validation
2025-01-17 13:16:51,997:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 13:18:21,167:INFO:Initializing create_model()
2025-01-17 13:18:21,167:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012CA9E56A00>, estimator=xgboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 13:18:21,167:INFO:Checking exceptions
2025-01-17 13:18:21,191:INFO:Importing libraries
2025-01-17 13:18:21,192:INFO:Copying training dataset
2025-01-17 13:18:22,273:INFO:Defining folds
2025-01-17 13:18:22,273:INFO:Declaring metric variables
2025-01-17 13:18:22,277:INFO:Importing untrained model
2025-01-17 13:18:22,283:INFO:Extreme Gradient Boosting Imported successfully
2025-01-17 13:18:22,291:INFO:Starting cross validation
2025-01-17 13:18:22,295:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 13:20:45,966:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:20:45,993:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:20:46,015:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:20:47,093:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:20:47,110:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:20:47,120:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:20:47,363:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:20:47,384:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:20:47,395:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:20:47,573:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:20:47,593:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:20:47,604:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:20:48,077:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:20:48,089:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:20:48,096:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:20:48,271:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:20:48,285:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:20:48,293:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:20:48,347:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:20:48,362:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:20:48,370:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 13:20:48,604:INFO:Calculating mean and std
2025-01-17 13:20:48,696:INFO:Creating metrics dataframe
2025-01-17 13:20:48,825:INFO:Finalizing model
2025-01-17 13:21:22,429:INFO:Uploading results into container
2025-01-17 13:21:22,436:INFO:Uploading model into container now
2025-01-17 13:21:22,483:INFO:_master_model_container: 8
2025-01-17 13:21:22,483:INFO:_display_container: 3
2025-01-17 13:21:22,486:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)
2025-01-17 13:21:22,486:INFO:create_model() successfully completed......................................
2025-01-17 13:21:29,175:INFO:Initializing finalize_model()
2025-01-17 13:21:29,175:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012CA9E56A00>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-01-17 13:21:29,178:INFO:Finalizing XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)
2025-01-17 13:21:29,703:INFO:Initializing create_model()
2025-01-17 13:21:29,703:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012CA9E56A00>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 13:21:29,704:INFO:Checking exceptions
2025-01-17 13:21:29,708:INFO:Importing libraries
2025-01-17 13:21:29,709:INFO:Copying training dataset
2025-01-17 13:21:29,810:INFO:Defining folds
2025-01-17 13:21:29,810:INFO:Declaring metric variables
2025-01-17 13:21:29,811:INFO:Importing untrained model
2025-01-17 13:21:29,811:INFO:Declaring custom model
2025-01-17 13:21:29,812:INFO:Extreme Gradient Boosting Imported successfully
2025-01-17 13:21:29,816:INFO:Cross validation set to False
2025-01-17 13:21:29,816:INFO:Fitting Model
2025-01-17 13:22:09,284:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['ability', 'able', 'absolutely',
                                             'across', 'act', 'acted', 'acting',
                                             'action', 'actor', 'actress',
                                             'actual', 'actually', 'adaptation',
                                             'add', 'added', 'adm...
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None,
                               objective='multi:softprob', ...))],
         verbose=False)
2025-01-17 13:22:09,284:INFO:create_model() successfully completed......................................
2025-01-17 13:22:09,691:INFO:_master_model_container: 8
2025-01-17 13:22:09,692:INFO:_display_container: 3
2025-01-17 13:22:09,706:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['ability', 'able', 'absolutely',
                                             'across', 'act', 'acted', 'acting',
                                             'action', 'actor', 'actress',
                                             'actual', 'actually', 'adaptation',
                                             'add', 'added', 'adm...
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None,
                               objective='multi:softprob', ...))],
         verbose=False)
2025-01-17 13:22:09,707:INFO:finalize_model() successfully completed......................................
2025-01-17 13:22:43,324:INFO:Initializing save_model()
2025-01-17 13:22:43,324:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['ability', 'able', 'absolutely',
                                             'across', 'act', 'acted', 'acting',
                                             'action', 'actor', 'actress',
                                             'actual', 'actually', 'adaptation',
                                             'add', 'added', 'adm...
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None,
                               objective='multi:softprob', ...))],
         verbose=False), model_name=xgb_sentiment_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\AMMUNA~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['ability', 'able', 'absolutely',
                                             'across', 'act', 'acted', 'acting',
                                             'action', 'actor', 'actress',
                                             'actual'...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-01-17 13:22:43,325:INFO:Adding model into prep_pipe
2025-01-17 13:22:43,325:WARNING:Only Model saved as it was a pipeline.
2025-01-17 13:22:43,354:INFO:xgb_sentiment_model.pkl saved in current working directory
2025-01-17 13:22:43,372:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['ability', 'able', 'absolutely',
                                             'across', 'act', 'acted', 'acting',
                                             'action', 'actor', 'actress',
                                             'actual', 'actually', 'adaptation',
                                             'add', 'added', 'adm...
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None,
                               objective='multi:softprob', ...))],
         verbose=False)
2025-01-17 13:22:43,372:INFO:save_model() successfully completed......................................
2025-01-17 13:22:51,608:INFO:Initializing load_model()
2025-01-17 13:22:51,609:INFO:load_model(model_name=xgb_sentiment_model, platform=None, authentication=None, verbose=True)
2025-01-17 13:23:51,052:INFO:Initializing predict_model()
2025-01-17 13:23:51,053:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012CA9E56A00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['ability', 'able', 'absolutely',
                                             'across', 'act', 'acted', 'acting',
                                             'action', 'actor', 'actress',
                                             'actual', 'actually', 'adaptation',
                                             'add', 'added', 'adm...
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None,
                               objective='multi:softprob', ...))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000012CDE1E0040>)
2025-01-17 13:23:51,053:INFO:Checking exceptions
2025-01-17 13:23:51,053:INFO:Preloading libraries
2025-01-17 13:23:51,057:INFO:Set up data.
2025-01-17 13:23:51,232:INFO:Set up index.
2025-01-17 13:27:13,338:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 13:27:13,339:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 13:27:13,339:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 13:27:13,339:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 13:27:17,913:INFO:Initializing load_model()
2025-01-17 13:27:17,914:INFO:load_model(model_name=xgb_sentiment_model, platform=None, authentication=None, verbose=True)
2025-01-17 13:36:33,745:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 13:36:33,745:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 13:36:33,745:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 13:36:33,745:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 13:36:36,638:INFO:Initializing load_model()
2025-01-17 13:36:36,638:INFO:load_model(model_name=xgb_sentiment_model, platform=None, authentication=None, verbose=True)
2025-01-17 13:39:18,673:INFO:Initializing predict_model()
2025-01-17 13:39:18,674:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000012CA9E56A00>, estimator=Pipeline(memory=FastMemory(location=C:\Users\AMMUNA~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['ability', 'able', 'absolutely',
                                             'across', 'act', 'acted', 'acting',
                                             'action', 'actor', 'actress',
                                             'actual'...
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None,
                               objective='multi:softprob', ...))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000012CB94EA9D0>)
2025-01-17 13:39:18,674:INFO:Checking exceptions
2025-01-17 13:39:18,674:INFO:Preloading libraries
2025-01-17 13:39:18,683:INFO:Set up data.
2025-01-17 13:39:19,765:INFO:Set up index.
2025-01-17 13:45:50,283:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 13:45:50,283:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 13:45:50,283:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 13:45:50,283:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 13:52:50,640:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 13:52:50,641:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 13:52:50,641:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 13:52:50,641:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 13:54:35,385:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 13:54:35,385:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 13:54:35,385:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 13:54:35,385:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 13:54:38,295:INFO:PyCaret ClassificationExperiment
2025-01-17 13:54:38,295:INFO:Logging name: clf-default-name
2025-01-17 13:54:38,295:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-01-17 13:54:38,295:INFO:version 3.3.2
2025-01-17 13:54:38,295:INFO:Initializing setup()
2025-01-17 13:54:38,295:INFO:self.USI: d967
2025-01-17 13:54:38,295:INFO:self._variable_keys: {'y_train', 'pipeline', 'X_train', 'fold_generator', 'fold_shuffle_param', 'exp_name_log', 'log_plots_param', '_ml_usecase', 'logging_param', 'X_test', '_available_plots', 'fix_imbalance', 'X', 'fold_groups_param', 'is_multiclass', 'y_test', 'data', 'exp_id', 'html_param', 'USI', 'seed', 'idx', 'target_param', 'n_jobs_param', 'gpu_n_jobs_param', 'gpu_param', 'memory', 'y'}
2025-01-17 13:54:38,295:INFO:Checking environment
2025-01-17 13:54:38,295:INFO:python_version: 3.9.0
2025-01-17 13:54:38,295:INFO:python_build: ('default', 'Nov 15 2020 08:30:55')
2025-01-17 13:54:38,295:INFO:machine: AMD64
2025-01-17 13:54:38,296:INFO:platform: Windows-10-10.0.26100-SP0
2025-01-17 13:54:38,300:INFO:Memory: svmem(total=7967137792, available=2050179072, percent=74.3, used=5916958720, free=2050179072)
2025-01-17 13:54:38,301:INFO:Physical Core: 6
2025-01-17 13:54:38,301:INFO:Logical Core: 12
2025-01-17 13:54:38,301:INFO:Checking libraries
2025-01-17 13:54:38,301:INFO:System:
2025-01-17 13:54:38,301:INFO:    python: 3.9.0 (default, Nov 15 2020, 08:30:55) [MSC v.1916 64 bit (AMD64)]
2025-01-17 13:54:38,301:INFO:executable: E:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\python.exe
2025-01-17 13:54:38,301:INFO:   machine: Windows-10-10.0.26100-SP0
2025-01-17 13:54:38,301:INFO:PyCaret required dependencies:
2025-01-17 13:59:22,908:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 13:59:22,908:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 13:59:22,908:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 13:59:22,908:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 13:59:26,032:INFO:PyCaret ClassificationExperiment
2025-01-17 13:59:26,032:INFO:Logging name: clf-default-name
2025-01-17 13:59:26,033:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-01-17 13:59:26,033:INFO:version 3.3.2
2025-01-17 13:59:26,033:INFO:Initializing setup()
2025-01-17 13:59:26,033:INFO:self.USI: 09f9
2025-01-17 13:59:26,033:INFO:self._variable_keys: {'gpu_n_jobs_param', 'X', 'exp_id', '_available_plots', 'target_param', 'y', 'fold_shuffle_param', 'X_train', 'data', 'fold_groups_param', 'exp_name_log', 'pipeline', 'y_test', '_ml_usecase', 'y_train', 'is_multiclass', 'logging_param', 'idx', 'seed', 'fold_generator', 'html_param', 'n_jobs_param', 'X_test', 'log_plots_param', 'USI', 'fix_imbalance', 'memory', 'gpu_param'}
2025-01-17 13:59:26,033:INFO:Checking environment
2025-01-17 13:59:26,033:INFO:python_version: 3.9.0
2025-01-17 13:59:26,033:INFO:python_build: ('default', 'Nov 15 2020 08:30:55')
2025-01-17 13:59:26,033:INFO:machine: AMD64
2025-01-17 13:59:26,033:INFO:platform: Windows-10-10.0.26100-SP0
2025-01-17 13:59:26,038:INFO:Memory: svmem(total=7967137792, available=1859301376, percent=76.7, used=6107836416, free=1859301376)
2025-01-17 13:59:26,039:INFO:Physical Core: 6
2025-01-17 13:59:26,039:INFO:Logical Core: 12
2025-01-17 13:59:26,039:INFO:Checking libraries
2025-01-17 13:59:26,039:INFO:System:
2025-01-17 13:59:26,039:INFO:    python: 3.9.0 (default, Nov 15 2020, 08:30:55) [MSC v.1916 64 bit (AMD64)]
2025-01-17 13:59:26,039:INFO:executable: E:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\python.exe
2025-01-17 13:59:26,040:INFO:   machine: Windows-10-10.0.26100-SP0
2025-01-17 13:59:26,040:INFO:PyCaret required dependencies:
2025-01-17 20:23:55,717:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 20:23:55,717:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 20:23:55,718:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 20:23:55,718:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-17 20:26:30,862:INFO:PyCaret ClassificationExperiment
2025-01-17 20:26:30,862:INFO:Logging name: clf-default-name
2025-01-17 20:26:30,863:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-01-17 20:26:30,863:INFO:version 3.3.2
2025-01-17 20:26:30,863:INFO:Initializing setup()
2025-01-17 20:26:30,863:INFO:self.USI: bafc
2025-01-17 20:26:30,863:INFO:self._variable_keys: {'fold_generator', '_ml_usecase', 'X_train', 'X', 'fix_imbalance', 'logging_param', 'n_jobs_param', 'y_train', 'pipeline', 'memory', 'gpu_param', 'idx', 'y_test', 'gpu_n_jobs_param', 'target_param', 'html_param', 'USI', 'exp_id', 'y', 'seed', 'X_test', 'data', 'log_plots_param', 'is_multiclass', 'fold_groups_param', 'fold_shuffle_param', '_available_plots', 'exp_name_log'}
2025-01-17 20:26:30,863:INFO:Checking environment
2025-01-17 20:26:30,863:INFO:python_version: 3.9.0
2025-01-17 20:26:30,863:INFO:python_build: ('default', 'Nov 15 2020 08:30:55')
2025-01-17 20:26:30,863:INFO:machine: AMD64
2025-01-17 20:26:30,863:INFO:platform: Windows-10-10.0.26100-SP0
2025-01-17 20:26:30,868:INFO:Memory: svmem(total=7967137792, available=1302544384, percent=83.7, used=6664593408, free=1302544384)
2025-01-17 20:26:30,868:INFO:Physical Core: 6
2025-01-17 20:26:30,868:INFO:Logical Core: 12
2025-01-17 20:26:30,868:INFO:Checking libraries
2025-01-17 20:26:30,868:INFO:System:
2025-01-17 20:26:30,868:INFO:    python: 3.9.0 (default, Nov 15 2020, 08:30:55) [MSC v.1916 64 bit (AMD64)]
2025-01-17 20:26:30,868:INFO:executable: e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\python.exe
2025-01-17 20:26:30,868:INFO:   machine: Windows-10-10.0.26100-SP0
2025-01-17 20:26:30,868:INFO:PyCaret required dependencies:
2025-01-17 20:26:32,250:INFO:                 pip: 24.2
2025-01-17 20:26:32,250:INFO:          setuptools: 75.1.0
2025-01-17 20:26:32,250:INFO:             pycaret: 3.3.2
2025-01-17 20:26:32,250:INFO:             IPython: 8.18.1
2025-01-17 20:26:32,250:INFO:          ipywidgets: 8.1.5
2025-01-17 20:26:32,250:INFO:                tqdm: 4.67.1
2025-01-17 20:26:32,250:INFO:               numpy: 1.26.4
2025-01-17 20:26:32,250:INFO:              pandas: 2.1.4
2025-01-17 20:26:32,251:INFO:              jinja2: 3.1.5
2025-01-17 20:26:32,251:INFO:               scipy: 1.11.4
2025-01-17 20:26:32,251:INFO:              joblib: 1.3.2
2025-01-17 20:26:32,251:INFO:             sklearn: 1.4.2
2025-01-17 20:26:32,251:INFO:                pyod: 2.0.3
2025-01-17 20:26:32,251:INFO:            imblearn: 0.12.3
2025-01-17 20:26:32,251:INFO:   category_encoders: 2.6.4
2025-01-17 20:26:32,251:INFO:            lightgbm: 4.5.0
2025-01-17 20:26:32,251:INFO:               numba: 0.60.0
2025-01-17 20:26:32,251:INFO:            requests: 2.32.3
2025-01-17 20:26:32,251:INFO:          matplotlib: 3.7.5
2025-01-17 20:26:32,251:INFO:          scikitplot: 0.3.7
2025-01-17 20:26:32,251:INFO:         yellowbrick: 1.5
2025-01-17 20:26:32,251:INFO:              plotly: 5.24.1
2025-01-17 20:26:32,251:INFO:    plotly-resampler: Not installed
2025-01-17 20:26:32,251:INFO:             kaleido: 0.2.1
2025-01-17 20:26:32,251:INFO:           schemdraw: 0.15
2025-01-17 20:26:32,251:INFO:         statsmodels: 0.14.4
2025-01-17 20:26:32,251:INFO:              sktime: 0.26.0
2025-01-17 20:26:32,251:INFO:               tbats: 1.1.3
2025-01-17 20:26:32,251:INFO:            pmdarima: 2.0.4
2025-01-17 20:26:32,251:INFO:              psutil: 6.1.1
2025-01-17 20:26:32,251:INFO:          markupsafe: 2.1.5
2025-01-17 20:26:32,251:INFO:             pickle5: Not installed
2025-01-17 20:26:32,251:INFO:         cloudpickle: 3.1.1
2025-01-17 20:26:32,251:INFO:         deprecation: 2.1.0
2025-01-17 20:26:32,251:INFO:              xxhash: 3.5.0
2025-01-17 20:26:32,251:INFO:           wurlitzer: Not installed
2025-01-17 20:26:32,251:INFO:PyCaret optional dependencies:
2025-01-17 20:26:33,040:INFO:                shap: 0.44.1
2025-01-17 20:26:33,040:INFO:           interpret: 0.6.9
2025-01-17 20:26:33,040:INFO:                umap: 0.5.7
2025-01-17 20:26:33,040:INFO:     ydata_profiling: 4.12.1
2025-01-17 20:26:33,040:INFO:  explainerdashboard: 0.4.8
2025-01-17 20:26:33,040:INFO:             autoviz: Not installed
2025-01-17 20:26:33,040:INFO:           fairlearn: 0.7.0
2025-01-17 20:26:33,040:INFO:          deepchecks: Not installed
2025-01-17 20:26:33,040:INFO:             xgboost: 2.1.3
2025-01-17 20:26:33,040:INFO:            catboost: 1.2.7
2025-01-17 20:26:33,040:INFO:              kmodes: 0.12.2
2025-01-17 20:26:33,040:INFO:             mlxtend: 0.23.3
2025-01-17 20:26:33,040:INFO:       statsforecast: 1.5.0
2025-01-17 20:26:33,040:INFO:        tune_sklearn: Not installed
2025-01-17 20:26:33,040:INFO:                 ray: Not installed
2025-01-17 20:26:33,040:INFO:            hyperopt: 0.2.7
2025-01-17 20:26:33,040:INFO:              optuna: 4.1.0
2025-01-17 20:26:33,040:INFO:               skopt: 0.10.2
2025-01-17 20:26:33,040:INFO:              mlflow: 2.19.0
2025-01-17 20:26:33,040:INFO:              gradio: Not installed
2025-01-17 20:26:33,040:INFO:             fastapi: Not installed
2025-01-17 20:26:33,040:INFO:             uvicorn: Not installed
2025-01-17 20:26:33,040:INFO:              m2cgen: 0.10.0
2025-01-17 20:26:33,040:INFO:           evidently: 0.4.40
2025-01-17 20:26:33,040:INFO:               fugue: 0.8.7
2025-01-17 20:26:33,040:INFO:           streamlit: 1.41.1
2025-01-17 20:26:33,041:INFO:             prophet: Not installed
2025-01-17 20:26:33,041:INFO:None
2025-01-17 20:26:33,041:INFO:Set up data.
2025-01-17 20:26:33,086:INFO:Set up folding strategy.
2025-01-17 20:26:33,087:INFO:Set up train/test split.
2025-01-17 20:26:33,118:INFO:Set up index.
2025-01-17 20:26:33,120:INFO:Assigning column types.
2025-01-17 20:26:33,123:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-01-17 20:26:33,170:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 20:26:33,174:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 20:26:33,213:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 20:26:33,216:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 20:26:34,711:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 20:26:34,712:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 20:26:34,742:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 20:26:34,744:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 20:26:34,745:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-01-17 20:26:34,793:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 20:26:34,822:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 20:26:34,825:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 20:26:34,872:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 20:26:34,901:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 20:26:34,904:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 20:26:34,904:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-01-17 20:26:34,980:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 20:26:34,983:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 20:26:35,059:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 20:26:35,062:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 20:26:35,076:INFO:Preparing preprocessing pipeline...
2025-01-17 20:26:35,080:INFO:Set up label encoding.
2025-01-17 20:26:35,080:INFO:Set up simple imputation.
2025-01-17 20:26:35,083:INFO:Set up encoding of categorical features.
2025-01-17 20:26:35,441:INFO:Finished creating preprocessing pipeline.
2025-01-17 20:26:35,448:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\AMMUNA~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=Fal...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Review'],
                                    transformer=TargetEncoder(cols=['Review'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2025-01-17 20:26:35,448:INFO:Creating final display dataframe.
2025-01-17 20:26:36,279:INFO:Setup _display_container:                     Description                                 Value
0                    Session id                                  1799
1                        Target                             Sentiment
2                   Target type                            Multiclass
3                Target mapping  negative: 0, neutral: 1, positive: 2
4           Original data shape                            (10000, 2)
5        Transformed data shape                            (10000, 2)
6   Transformed train set shape                             (7000, 2)
7    Transformed test set shape                             (3000, 2)
8          Categorical features                                     1
9                    Preprocess                                  True
10              Imputation type                                simple
11           Numeric imputation                                  mean
12       Categorical imputation                                  mode
13     Maximum one-hot encoding                                    25
14              Encoding method                                  None
15               Fold Generator                       StratifiedKFold
16                  Fold Number                                    10
17                     CPU Jobs                                    -1
18                      Use GPU                                 False
19               Log Experiment                                 False
20              Experiment Name                      clf-default-name
21                          USI                                  bafc
2025-01-17 20:26:36,366:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 20:26:36,369:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 20:26:36,451:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 20:26:36,454:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 20:26:36,455:INFO:setup() successfully completed in 5.72s...............
2025-01-17 20:26:36,456:INFO:Initializing get_config()
2025-01-17 20:26:36,456:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016E62A6CA00>, variable=y_train)
2025-01-17 20:26:36,456:INFO:Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
2025-01-17 20:26:36,458:INFO:Variable:  returned as 6296     neutral
1942     neutral
9099    negative
2213     neutral
9481     neutral
          ...   
3802     neutral
1828     neutral
2101    positive
8085     neutral
9873     neutral
Name: Sentiment, Length: 7000, dtype: category
Categories (3, object): ['negative', 'neutral', 'positive']
2025-01-17 20:26:36,458:INFO:get_config() successfully completed......................................
2025-01-17 20:27:49,542:INFO:Initializing compare_models()
2025-01-17 20:27:49,542:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016E62A6CA00>, include=['svm', 'dt', 'rf', 'ridge', 'knn', 'nb', 'xgboost'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000016E62A6CA00>, 'include': ['svm', 'dt', 'rf', 'ridge', 'knn', 'nb', 'xgboost'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-01-17 20:27:49,543:INFO:Checking exceptions
2025-01-17 20:27:49,548:INFO:Preparing display monitor
2025-01-17 20:27:49,581:INFO:Initializing SVM - Linear Kernel
2025-01-17 20:27:49,581:INFO:Total runtime is 0.0 minutes
2025-01-17 20:27:49,589:INFO:SubProcess create_model() called ==================================
2025-01-17 20:27:49,590:INFO:Initializing create_model()
2025-01-17 20:27:49,590:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016E62A6CA00>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E6248EC10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 20:27:49,590:INFO:Checking exceptions
2025-01-17 20:27:49,590:INFO:Importing libraries
2025-01-17 20:27:49,590:INFO:Copying training dataset
2025-01-17 20:27:49,597:INFO:Defining folds
2025-01-17 20:27:49,597:INFO:Declaring metric variables
2025-01-17 20:27:49,604:INFO:Importing untrained model
2025-01-17 20:27:49,616:INFO:SVM - Linear Kernel Imported successfully
2025-01-17 20:27:49,635:INFO:Starting cross validation
2025-01-17 20:27:49,637:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 20:27:59,186:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:27:59,209:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:27:59,209:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:27:59,209:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:27:59,209:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:27:59,209:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:27:59,209:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:27:59,210:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:27:59,219:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:27:59,219:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:27:59,219:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:27:59,220:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:27:59,220:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:27:59,220:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:27:59,221:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:27:59,222:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:27:59,223:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:27:59,223:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:27:59,224:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:27:59,224:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:27:59,224:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:27:59,224:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:27:59,225:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:27:59,225:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:27:59,227:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:27:59,227:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:27:59,227:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:27:59,227:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:27:59,228:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:27:59,228:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:27:59,229:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:27:59,230:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:27:59,405:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:27:59,412:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:27:59,419:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:27:59,423:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:27:59,428:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:27:59,442:INFO:Calculating mean and std
2025-01-17 20:27:59,444:INFO:Creating metrics dataframe
2025-01-17 20:27:59,448:INFO:Uploading results into container
2025-01-17 20:27:59,448:INFO:Uploading model into container now
2025-01-17 20:27:59,449:INFO:_master_model_container: 1
2025-01-17 20:27:59,450:INFO:_display_container: 2
2025-01-17 20:27:59,450:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1799, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-01-17 20:27:59,451:INFO:create_model() successfully completed......................................
2025-01-17 20:27:59,713:INFO:SubProcess create_model() end ==================================
2025-01-17 20:27:59,713:INFO:Creating metrics dataframe
2025-01-17 20:27:59,721:INFO:Initializing Decision Tree Classifier
2025-01-17 20:27:59,722:INFO:Total runtime is 0.16901774009068807 minutes
2025-01-17 20:27:59,726:INFO:SubProcess create_model() called ==================================
2025-01-17 20:27:59,727:INFO:Initializing create_model()
2025-01-17 20:27:59,727:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016E62A6CA00>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E6248EC10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 20:27:59,727:INFO:Checking exceptions
2025-01-17 20:27:59,727:INFO:Importing libraries
2025-01-17 20:27:59,727:INFO:Copying training dataset
2025-01-17 20:27:59,731:INFO:Defining folds
2025-01-17 20:27:59,731:INFO:Declaring metric variables
2025-01-17 20:27:59,735:INFO:Importing untrained model
2025-01-17 20:27:59,740:INFO:Decision Tree Classifier Imported successfully
2025-01-17 20:27:59,751:INFO:Starting cross validation
2025-01-17 20:27:59,753:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 20:28:00,164:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:00,177:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:00,185:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:00,190:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:00,215:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:00,229:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:00,235:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:00,243:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:00,307:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:00,317:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:00,323:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:00,331:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:00,351:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:00,361:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:00,364:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:00,370:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:00,387:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:00,395:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:00,399:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:00,404:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:00,431:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:00,439:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:00,444:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:00,448:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:00,462:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:00,469:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:00,472:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:00,474:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:00,478:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:00,483:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:00,486:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:00,490:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:03,897:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:03,902:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:03,904:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:03,906:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:03,913:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:03,918:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:03,920:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:03,923:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:03,940:INFO:Calculating mean and std
2025-01-17 20:28:03,941:INFO:Creating metrics dataframe
2025-01-17 20:28:03,943:INFO:Uploading results into container
2025-01-17 20:28:03,944:INFO:Uploading model into container now
2025-01-17 20:28:03,944:INFO:_master_model_container: 2
2025-01-17 20:28:03,944:INFO:_display_container: 2
2025-01-17 20:28:03,945:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1799, splitter='best')
2025-01-17 20:28:03,945:INFO:create_model() successfully completed......................................
2025-01-17 20:28:04,189:INFO:SubProcess create_model() end ==================================
2025-01-17 20:28:04,189:INFO:Creating metrics dataframe
2025-01-17 20:28:04,199:INFO:Initializing Random Forest Classifier
2025-01-17 20:28:04,199:INFO:Total runtime is 0.24363863865534463 minutes
2025-01-17 20:28:04,203:INFO:SubProcess create_model() called ==================================
2025-01-17 20:28:04,203:INFO:Initializing create_model()
2025-01-17 20:28:04,203:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016E62A6CA00>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E6248EC10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 20:28:04,203:INFO:Checking exceptions
2025-01-17 20:28:04,203:INFO:Importing libraries
2025-01-17 20:28:04,203:INFO:Copying training dataset
2025-01-17 20:28:04,208:INFO:Defining folds
2025-01-17 20:28:04,208:INFO:Declaring metric variables
2025-01-17 20:28:04,212:INFO:Importing untrained model
2025-01-17 20:28:04,217:INFO:Random Forest Classifier Imported successfully
2025-01-17 20:28:04,228:INFO:Starting cross validation
2025-01-17 20:28:04,229:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 20:28:05,067:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:05,078:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:05,089:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:05,096:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:05,096:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:05,105:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:05,110:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:05,115:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:05,214:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:05,222:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:05,228:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:05,234:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:05,269:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:05,279:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:05,285:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:05,293:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:05,379:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:05,389:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:05,395:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:05,400:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:05,481:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:05,488:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:05,492:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:05,495:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:05,561:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:05,568:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:05,571:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:05,574:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:05,619:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:05,624:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:05,627:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:05,630:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:05,649:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:05,654:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:05,656:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:05,659:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:05,664:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:05,669:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:05,671:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:05,674:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:05,688:INFO:Calculating mean and std
2025-01-17 20:28:05,689:INFO:Creating metrics dataframe
2025-01-17 20:28:05,692:INFO:Uploading results into container
2025-01-17 20:28:05,693:INFO:Uploading model into container now
2025-01-17 20:28:05,694:INFO:_master_model_container: 3
2025-01-17 20:28:05,694:INFO:_display_container: 2
2025-01-17 20:28:05,695:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1799, verbose=0,
                       warm_start=False)
2025-01-17 20:28:05,695:INFO:create_model() successfully completed......................................
2025-01-17 20:28:06,003:INFO:SubProcess create_model() end ==================================
2025-01-17 20:28:06,003:INFO:Creating metrics dataframe
2025-01-17 20:28:06,013:INFO:Initializing Ridge Classifier
2025-01-17 20:28:06,013:INFO:Total runtime is 0.2738643368085225 minutes
2025-01-17 20:28:06,019:INFO:SubProcess create_model() called ==================================
2025-01-17 20:28:06,019:INFO:Initializing create_model()
2025-01-17 20:28:06,019:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016E62A6CA00>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E6248EC10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 20:28:06,020:INFO:Checking exceptions
2025-01-17 20:28:06,020:INFO:Importing libraries
2025-01-17 20:28:06,020:INFO:Copying training dataset
2025-01-17 20:28:06,025:INFO:Defining folds
2025-01-17 20:28:06,026:INFO:Declaring metric variables
2025-01-17 20:28:06,031:INFO:Importing untrained model
2025-01-17 20:28:06,037:INFO:Ridge Classifier Imported successfully
2025-01-17 20:28:06,048:INFO:Starting cross validation
2025-01-17 20:28:06,050:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 20:28:06,438:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:28:06,445:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:06,463:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:06,468:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:06,477:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:06,486:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:28:06,491:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:06,503:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:06,510:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:06,515:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:06,561:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:28:06,565:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:06,586:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:06,602:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:06,622:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:06,671:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:28:06,677:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:06,686:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:06,691:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:06,697:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:06,714:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:28:06,719:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:06,726:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:06,729:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:06,732:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:06,752:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:28:06,755:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:06,762:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:06,765:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:06,769:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:06,772:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:28:06,775:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:06,780:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:06,783:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:06,786:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:06,794:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:28:06,796:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:06,801:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:06,804:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:06,807:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:06,824:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:28:06,827:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:06,831:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:06,834:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:06,836:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:06,849:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:28:06,852:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:06,856:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:06,859:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:06,862:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:06,873:INFO:Calculating mean and std
2025-01-17 20:28:06,875:INFO:Creating metrics dataframe
2025-01-17 20:28:06,879:INFO:Uploading results into container
2025-01-17 20:28:06,880:INFO:Uploading model into container now
2025-01-17 20:28:06,881:INFO:_master_model_container: 4
2025-01-17 20:28:06,881:INFO:_display_container: 2
2025-01-17 20:28:06,881:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1799, solver='auto',
                tol=0.0001)
2025-01-17 20:28:06,881:INFO:create_model() successfully completed......................................
2025-01-17 20:28:07,243:INFO:SubProcess create_model() end ==================================
2025-01-17 20:28:07,243:INFO:Creating metrics dataframe
2025-01-17 20:28:07,252:INFO:Initializing K Neighbors Classifier
2025-01-17 20:28:07,252:INFO:Total runtime is 0.2945218006769816 minutes
2025-01-17 20:28:07,255:INFO:SubProcess create_model() called ==================================
2025-01-17 20:28:07,256:INFO:Initializing create_model()
2025-01-17 20:28:07,256:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016E62A6CA00>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E6248EC10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 20:28:07,256:INFO:Checking exceptions
2025-01-17 20:28:07,256:INFO:Importing libraries
2025-01-17 20:28:07,256:INFO:Copying training dataset
2025-01-17 20:28:07,262:INFO:Defining folds
2025-01-17 20:28:07,262:INFO:Declaring metric variables
2025-01-17 20:28:07,269:INFO:Importing untrained model
2025-01-17 20:28:07,273:INFO:K Neighbors Classifier Imported successfully
2025-01-17 20:28:07,281:INFO:Starting cross validation
2025-01-17 20:28:07,283:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 20:28:07,777:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:07,787:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:07,799:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:07,809:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:07,873:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:07,885:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:07,892:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:07,897:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:08,055:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:08,064:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:08,069:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:08,072:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:08,127:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:08,133:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:08,137:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:08,139:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:08,155:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:08,162:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:08,165:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:08,169:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:08,180:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:08,188:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:08,193:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:08,197:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:08,228:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:08,233:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:08,236:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:08,238:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:08,248:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:08,254:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:08,258:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:08,261:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:08,278:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:08,282:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:08,285:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:08,287:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:08,295:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:08,300:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:08,303:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:08,305:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:08,316:INFO:Calculating mean and std
2025-01-17 20:28:08,318:INFO:Creating metrics dataframe
2025-01-17 20:28:08,320:INFO:Uploading results into container
2025-01-17 20:28:08,321:INFO:Uploading model into container now
2025-01-17 20:28:08,322:INFO:_master_model_container: 5
2025-01-17 20:28:08,322:INFO:_display_container: 2
2025-01-17 20:28:08,323:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-01-17 20:28:08,323:INFO:create_model() successfully completed......................................
2025-01-17 20:28:08,576:INFO:SubProcess create_model() end ==================================
2025-01-17 20:28:08,576:INFO:Creating metrics dataframe
2025-01-17 20:28:08,584:INFO:Initializing Naive Bayes
2025-01-17 20:28:08,584:INFO:Total runtime is 0.31671355168024695 minutes
2025-01-17 20:28:08,588:INFO:SubProcess create_model() called ==================================
2025-01-17 20:28:08,589:INFO:Initializing create_model()
2025-01-17 20:28:08,589:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016E62A6CA00>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E6248EC10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 20:28:08,589:INFO:Checking exceptions
2025-01-17 20:28:08,589:INFO:Importing libraries
2025-01-17 20:28:08,589:INFO:Copying training dataset
2025-01-17 20:28:08,596:INFO:Defining folds
2025-01-17 20:28:08,596:INFO:Declaring metric variables
2025-01-17 20:28:08,604:INFO:Importing untrained model
2025-01-17 20:28:08,613:INFO:Naive Bayes Imported successfully
2025-01-17 20:28:08,636:INFO:Starting cross validation
2025-01-17 20:28:08,638:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 20:28:09,047:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:09,067:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:09,073:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:09,078:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:09,111:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:09,122:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:09,128:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:09,135:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:09,203:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:09,213:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:09,221:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:09,229:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:09,283:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:09,294:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:09,299:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:09,304:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:09,337:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:09,348:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:09,355:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:09,361:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:09,437:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:09,447:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:09,450:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:09,455:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:09,493:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:09,504:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:09,508:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:09,513:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:09,565:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:09,576:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:09,581:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:09,586:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:09,633:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:09,642:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:09,646:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:09,649:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:09,687:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:09,692:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:09,696:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:09,698:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:09,719:INFO:Calculating mean and std
2025-01-17 20:28:09,721:INFO:Creating metrics dataframe
2025-01-17 20:28:09,723:INFO:Uploading results into container
2025-01-17 20:28:09,726:INFO:Uploading model into container now
2025-01-17 20:28:09,727:INFO:_master_model_container: 6
2025-01-17 20:28:09,728:INFO:_display_container: 2
2025-01-17 20:28:09,728:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-01-17 20:28:09,728:INFO:create_model() successfully completed......................................
2025-01-17 20:28:10,076:INFO:SubProcess create_model() end ==================================
2025-01-17 20:28:10,076:INFO:Creating metrics dataframe
2025-01-17 20:28:10,084:INFO:Initializing Extreme Gradient Boosting
2025-01-17 20:28:10,084:INFO:Total runtime is 0.34172207514444985 minutes
2025-01-17 20:28:10,089:INFO:SubProcess create_model() called ==================================
2025-01-17 20:28:10,090:INFO:Initializing create_model()
2025-01-17 20:28:10,090:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016E62A6CA00>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E6248EC10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 20:28:10,090:INFO:Checking exceptions
2025-01-17 20:28:10,090:INFO:Importing libraries
2025-01-17 20:28:10,090:INFO:Copying training dataset
2025-01-17 20:28:10,095:INFO:Defining folds
2025-01-17 20:28:10,096:INFO:Declaring metric variables
2025-01-17 20:28:10,101:INFO:Importing untrained model
2025-01-17 20:28:10,106:INFO:Extreme Gradient Boosting Imported successfully
2025-01-17 20:28:10,117:INFO:Starting cross validation
2025-01-17 20:28:10,119:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 20:28:11,360:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:11,363:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:11,365:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:11,369:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:11,370:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:11,373:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:11,377:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:11,380:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:11,413:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:11,428:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:11,433:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:11,447:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:11,563:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:11,579:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:11,584:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:11,588:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:11,645:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:11,653:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:11,657:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:11,661:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:11,714:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:11,720:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:11,723:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:11,724:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:11,729:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:11,731:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:11,736:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:11,740:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:11,761:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:11,767:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:11,770:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:11,773:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:11,853:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:11,859:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:11,862:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:11,864:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:11,881:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:11,886:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:11,888:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:28:11,890:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:28:11,910:INFO:Calculating mean and std
2025-01-17 20:28:11,912:INFO:Creating metrics dataframe
2025-01-17 20:28:11,914:INFO:Uploading results into container
2025-01-17 20:28:11,916:INFO:Uploading model into container now
2025-01-17 20:28:11,916:INFO:_master_model_container: 7
2025-01-17 20:28:11,917:INFO:_display_container: 2
2025-01-17 20:28:11,918:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2025-01-17 20:28:11,918:INFO:create_model() successfully completed......................................
2025-01-17 20:28:12,206:INFO:SubProcess create_model() end ==================================
2025-01-17 20:28:12,206:INFO:Creating metrics dataframe
2025-01-17 20:28:12,235:INFO:Initializing create_model()
2025-01-17 20:28:12,235:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016E62A6CA00>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1799, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 20:28:12,235:INFO:Checking exceptions
2025-01-17 20:28:12,238:INFO:Importing libraries
2025-01-17 20:28:12,239:INFO:Copying training dataset
2025-01-17 20:28:12,245:INFO:Defining folds
2025-01-17 20:28:12,246:INFO:Declaring metric variables
2025-01-17 20:28:12,246:INFO:Importing untrained model
2025-01-17 20:28:12,246:INFO:Declaring custom model
2025-01-17 20:28:12,247:INFO:SVM - Linear Kernel Imported successfully
2025-01-17 20:28:12,248:INFO:Cross validation set to False
2025-01-17 20:28:12,248:INFO:Fitting Model
2025-01-17 20:28:12,388:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1799, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-01-17 20:28:12,388:INFO:create_model() successfully completed......................................
2025-01-17 20:28:12,818:INFO:_master_model_container: 7
2025-01-17 20:28:12,818:INFO:_display_container: 2
2025-01-17 20:28:12,819:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1799, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-01-17 20:28:12,820:INFO:compare_models() successfully completed......................................
2025-01-17 20:33:39,512:INFO:PyCaret ClassificationExperiment
2025-01-17 20:33:39,512:INFO:Logging name: clf-default-name
2025-01-17 20:33:39,512:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-01-17 20:33:39,512:INFO:version 3.3.2
2025-01-17 20:33:39,512:INFO:Initializing setup()
2025-01-17 20:33:39,512:INFO:self.USI: e504
2025-01-17 20:33:39,512:INFO:self._variable_keys: {'fold_generator', '_ml_usecase', 'X_train', 'X', 'fix_imbalance', 'logging_param', 'n_jobs_param', 'y_train', 'pipeline', 'memory', 'gpu_param', 'idx', 'y_test', 'gpu_n_jobs_param', 'target_param', 'html_param', 'USI', 'exp_id', 'y', 'seed', 'X_test', 'data', 'log_plots_param', 'is_multiclass', 'fold_groups_param', 'fold_shuffle_param', '_available_plots', 'exp_name_log'}
2025-01-17 20:33:39,513:INFO:Checking environment
2025-01-17 20:33:39,513:INFO:python_version: 3.9.0
2025-01-17 20:33:39,513:INFO:python_build: ('default', 'Nov 15 2020 08:30:55')
2025-01-17 20:33:39,513:INFO:machine: AMD64
2025-01-17 20:33:39,513:INFO:platform: Windows-10-10.0.26100-SP0
2025-01-17 20:33:39,518:INFO:Memory: svmem(total=7967137792, available=2565619712, percent=67.8, used=5401518080, free=2565619712)
2025-01-17 20:33:39,518:INFO:Physical Core: 6
2025-01-17 20:33:39,518:INFO:Logical Core: 12
2025-01-17 20:33:39,518:INFO:Checking libraries
2025-01-17 20:33:39,518:INFO:System:
2025-01-17 20:33:39,518:INFO:    python: 3.9.0 (default, Nov 15 2020, 08:30:55) [MSC v.1916 64 bit (AMD64)]
2025-01-17 20:33:39,518:INFO:executable: e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\python.exe
2025-01-17 20:33:39,518:INFO:   machine: Windows-10-10.0.26100-SP0
2025-01-17 20:33:39,518:INFO:PyCaret required dependencies:
2025-01-17 20:33:39,518:INFO:                 pip: 24.2
2025-01-17 20:33:39,518:INFO:          setuptools: 75.1.0
2025-01-17 20:33:39,518:INFO:             pycaret: 3.3.2
2025-01-17 20:33:39,518:INFO:             IPython: 8.18.1
2025-01-17 20:33:39,519:INFO:          ipywidgets: 8.1.5
2025-01-17 20:33:39,519:INFO:                tqdm: 4.67.1
2025-01-17 20:33:39,519:INFO:               numpy: 1.26.4
2025-01-17 20:33:39,519:INFO:              pandas: 2.1.4
2025-01-17 20:33:39,519:INFO:              jinja2: 3.1.5
2025-01-17 20:33:39,519:INFO:               scipy: 1.11.4
2025-01-17 20:33:39,519:INFO:              joblib: 1.3.2
2025-01-17 20:33:39,519:INFO:             sklearn: 1.4.2
2025-01-17 20:33:39,519:INFO:                pyod: 2.0.3
2025-01-17 20:33:39,519:INFO:            imblearn: 0.12.3
2025-01-17 20:33:39,519:INFO:   category_encoders: 2.6.4
2025-01-17 20:33:39,519:INFO:            lightgbm: 4.5.0
2025-01-17 20:33:39,519:INFO:               numba: 0.60.0
2025-01-17 20:33:39,519:INFO:            requests: 2.32.3
2025-01-17 20:33:39,519:INFO:          matplotlib: 3.7.5
2025-01-17 20:33:39,519:INFO:          scikitplot: 0.3.7
2025-01-17 20:33:39,519:INFO:         yellowbrick: 1.5
2025-01-17 20:33:39,519:INFO:              plotly: 5.24.1
2025-01-17 20:33:39,519:INFO:    plotly-resampler: Not installed
2025-01-17 20:33:39,519:INFO:             kaleido: 0.2.1
2025-01-17 20:33:39,519:INFO:           schemdraw: 0.15
2025-01-17 20:33:39,519:INFO:         statsmodels: 0.14.4
2025-01-17 20:33:39,519:INFO:              sktime: 0.26.0
2025-01-17 20:33:39,519:INFO:               tbats: 1.1.3
2025-01-17 20:33:39,519:INFO:            pmdarima: 2.0.4
2025-01-17 20:33:39,519:INFO:              psutil: 6.1.1
2025-01-17 20:33:39,519:INFO:          markupsafe: 2.1.5
2025-01-17 20:33:39,519:INFO:             pickle5: Not installed
2025-01-17 20:33:39,519:INFO:         cloudpickle: 3.1.1
2025-01-17 20:33:39,520:INFO:         deprecation: 2.1.0
2025-01-17 20:33:39,520:INFO:              xxhash: 3.5.0
2025-01-17 20:33:39,520:INFO:           wurlitzer: Not installed
2025-01-17 20:33:39,520:INFO:PyCaret optional dependencies:
2025-01-17 20:33:39,520:INFO:                shap: 0.44.1
2025-01-17 20:33:39,520:INFO:           interpret: 0.6.9
2025-01-17 20:33:39,520:INFO:                umap: 0.5.7
2025-01-17 20:33:39,520:INFO:     ydata_profiling: 4.12.1
2025-01-17 20:33:39,520:INFO:  explainerdashboard: 0.4.8
2025-01-17 20:33:39,520:INFO:             autoviz: Not installed
2025-01-17 20:33:39,520:INFO:           fairlearn: 0.7.0
2025-01-17 20:33:39,520:INFO:          deepchecks: Not installed
2025-01-17 20:33:39,520:INFO:             xgboost: 2.1.3
2025-01-17 20:33:39,520:INFO:            catboost: 1.2.7
2025-01-17 20:33:39,520:INFO:              kmodes: 0.12.2
2025-01-17 20:33:39,520:INFO:             mlxtend: 0.23.3
2025-01-17 20:33:39,520:INFO:       statsforecast: 1.5.0
2025-01-17 20:33:39,520:INFO:        tune_sklearn: Not installed
2025-01-17 20:33:39,520:INFO:                 ray: Not installed
2025-01-17 20:33:39,520:INFO:            hyperopt: 0.2.7
2025-01-17 20:33:39,520:INFO:              optuna: 4.1.0
2025-01-17 20:33:39,520:INFO:               skopt: 0.10.2
2025-01-17 20:33:39,520:INFO:              mlflow: 2.19.0
2025-01-17 20:33:39,520:INFO:              gradio: Not installed
2025-01-17 20:33:39,520:INFO:             fastapi: Not installed
2025-01-17 20:33:39,520:INFO:             uvicorn: Not installed
2025-01-17 20:33:39,520:INFO:              m2cgen: 0.10.0
2025-01-17 20:33:39,520:INFO:           evidently: 0.4.40
2025-01-17 20:33:39,520:INFO:               fugue: 0.8.7
2025-01-17 20:33:39,520:INFO:           streamlit: 1.41.1
2025-01-17 20:33:39,521:INFO:             prophet: Not installed
2025-01-17 20:33:39,521:INFO:None
2025-01-17 20:33:39,521:INFO:Set up data.
2025-01-17 20:33:39,569:INFO:Set up folding strategy.
2025-01-17 20:33:39,570:INFO:Set up train/test split.
2025-01-17 20:33:39,649:INFO:Set up index.
2025-01-17 20:33:39,650:INFO:Assigning column types.
2025-01-17 20:33:39,653:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-01-17 20:33:39,702:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 20:33:39,703:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 20:33:39,733:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 20:33:39,737:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 20:33:39,794:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 20:33:39,795:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 20:33:39,824:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 20:33:39,827:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 20:33:39,827:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-01-17 20:33:39,876:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 20:33:39,905:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 20:33:39,908:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 20:33:39,955:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 20:33:39,985:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 20:33:39,988:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 20:33:39,988:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-01-17 20:33:40,064:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 20:33:40,067:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 20:33:40,144:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 20:33:40,147:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 20:33:40,149:INFO:Preparing preprocessing pipeline...
2025-01-17 20:33:40,151:INFO:Set up label encoding.
2025-01-17 20:33:40,151:INFO:Set up simple imputation.
2025-01-17 20:33:40,154:INFO:Set up encoding of categorical features.
2025-01-17 20:33:40,154:INFO:Set up imbalanced handling.
2025-01-17 20:33:40,555:INFO:Finished creating preprocessing pipeline.
2025-01-17 20:33:40,563:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\AMMUNA~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=Fal...
                                    transformer=TargetEncoder(cols=['Review'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto'))))],
         verbose=False)
2025-01-17 20:33:40,563:INFO:Creating final display dataframe.
2025-01-17 20:33:41,745:INFO:Setup _display_container:                     Description                                 Value
0                    Session id                                  8913
1                        Target                             Sentiment
2                   Target type                            Multiclass
3                Target mapping  negative: 0, neutral: 1, positive: 2
4           Original data shape                            (10000, 2)
5        Transformed data shape                            (17133, 2)
6   Transformed train set shape                            (14133, 2)
7    Transformed test set shape                             (3000, 2)
8          Categorical features                                     1
9                    Preprocess                                  True
10              Imputation type                                simple
11           Numeric imputation                                  mean
12       Categorical imputation                                  mode
13     Maximum one-hot encoding                                    25
14              Encoding method                                  None
15                Fix imbalance                                  True
16         Fix imbalance method                                 SMOTE
17               Fold Generator                       StratifiedKFold
18                  Fold Number                                    10
19                     CPU Jobs                                    -1
20                      Use GPU                                 False
21               Log Experiment                                 False
22              Experiment Name                      clf-default-name
23                          USI                                  e504
2025-01-17 20:33:41,833:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 20:33:41,835:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 20:33:41,914:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 20:33:41,917:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 20:33:41,918:INFO:setup() successfully completed in 2.49s...............
2025-01-17 20:33:41,958:INFO:Initializing get_config()
2025-01-17 20:33:41,958:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016E629634F0>, variable=y_train)
2025-01-17 20:33:41,960:INFO:Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
2025-01-17 20:33:41,960:INFO:Variable:  returned as 2445     neutral
6766     neutral
767      neutral
5209    positive
3686     neutral
          ...   
2809    positive
1709     neutral
2983    positive
6149     neutral
8336     neutral
Name: Sentiment, Length: 7000, dtype: category
Categories (3, object): ['negative', 'neutral', 'positive']
2025-01-17 20:33:41,961:INFO:get_config() successfully completed......................................
2025-01-17 20:33:47,887:INFO:Initializing compare_models()
2025-01-17 20:33:47,888:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016E629634F0>, include=['svm', 'dt', 'rf', 'ridge', 'knn', 'nb', 'xgboost'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000016E629634F0>, 'include': ['svm', 'dt', 'rf', 'ridge', 'knn', 'nb', 'xgboost'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-01-17 20:33:47,888:INFO:Checking exceptions
2025-01-17 20:33:47,892:INFO:Preparing display monitor
2025-01-17 20:33:47,925:INFO:Initializing SVM - Linear Kernel
2025-01-17 20:33:47,925:INFO:Total runtime is 0.0 minutes
2025-01-17 20:33:47,929:INFO:SubProcess create_model() called ==================================
2025-01-17 20:33:47,930:INFO:Initializing create_model()
2025-01-17 20:33:47,930:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016E629634F0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E6517CFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 20:33:47,930:INFO:Checking exceptions
2025-01-17 20:33:47,930:INFO:Importing libraries
2025-01-17 20:33:47,930:INFO:Copying training dataset
2025-01-17 20:33:47,936:INFO:Defining folds
2025-01-17 20:33:47,936:INFO:Declaring metric variables
2025-01-17 20:33:47,941:INFO:Importing untrained model
2025-01-17 20:33:47,945:INFO:SVM - Linear Kernel Imported successfully
2025-01-17 20:33:47,957:INFO:Starting cross validation
2025-01-17 20:33:47,959:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 20:33:57,195:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:33:57,202:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:57,209:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:33:57,211:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:33:57,212:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:57,215:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:57,216:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:33:57,216:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:57,220:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:57,223:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:57,225:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:57,228:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:33:57,229:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:33:57,232:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:33:57,233:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:33:57,234:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:57,234:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:57,235:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:33:57,235:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:57,240:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:57,243:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:57,243:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:57,244:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:33:57,248:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:33:57,250:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:33:57,250:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:57,252:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:57,253:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:57,254:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:57,256:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:33:57,258:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:33:57,260:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:57,261:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:33:57,261:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:57,266:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:57,267:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:33:57,267:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:57,271:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:57,276:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:57,277:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:57,281:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:33:57,282:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:33:57,285:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:57,286:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:57,288:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:33:57,295:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:57,304:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:57,310:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:33:57,315:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:57,335:INFO:Calculating mean and std
2025-01-17 20:33:57,338:INFO:Creating metrics dataframe
2025-01-17 20:33:57,345:INFO:Uploading results into container
2025-01-17 20:33:57,348:INFO:Uploading model into container now
2025-01-17 20:33:57,349:INFO:_master_model_container: 1
2025-01-17 20:33:57,349:INFO:_display_container: 2
2025-01-17 20:33:57,350:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8913, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-01-17 20:33:57,351:INFO:create_model() successfully completed......................................
2025-01-17 20:33:57,774:INFO:SubProcess create_model() end ==================================
2025-01-17 20:33:57,774:INFO:Creating metrics dataframe
2025-01-17 20:33:57,780:INFO:Initializing Decision Tree Classifier
2025-01-17 20:33:57,781:INFO:Total runtime is 0.1642580548922221 minutes
2025-01-17 20:33:57,785:INFO:SubProcess create_model() called ==================================
2025-01-17 20:33:57,785:INFO:Initializing create_model()
2025-01-17 20:33:57,785:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016E629634F0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E6517CFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 20:33:57,785:INFO:Checking exceptions
2025-01-17 20:33:57,785:INFO:Importing libraries
2025-01-17 20:33:57,785:INFO:Copying training dataset
2025-01-17 20:33:57,790:INFO:Defining folds
2025-01-17 20:33:57,790:INFO:Declaring metric variables
2025-01-17 20:33:57,794:INFO:Importing untrained model
2025-01-17 20:33:57,799:INFO:Decision Tree Classifier Imported successfully
2025-01-17 20:33:57,808:INFO:Starting cross validation
2025-01-17 20:33:57,810:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 20:33:58,234:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:58,243:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:58,249:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:33:58,255:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:58,263:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:58,275:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:58,281:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:33:58,286:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:58,326:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:58,337:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:58,342:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:33:58,349:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:58,377:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:58,384:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:58,388:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:33:58,392:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:58,412:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:58,418:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:58,423:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:33:58,426:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:58,449:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:58,454:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:58,457:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:33:58,460:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:58,477:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:58,484:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:58,487:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:33:58,490:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:58,494:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:58,499:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:33:58,502:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:33:58,504:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:01,684:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:01,684:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:01,688:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:01,689:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:01,692:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:01,693:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:01,694:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:01,695:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:01,704:INFO:Calculating mean and std
2025-01-17 20:34:01,707:INFO:Creating metrics dataframe
2025-01-17 20:34:01,710:INFO:Uploading results into container
2025-01-17 20:34:01,711:INFO:Uploading model into container now
2025-01-17 20:34:01,712:INFO:_master_model_container: 2
2025-01-17 20:34:01,712:INFO:_display_container: 2
2025-01-17 20:34:01,712:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8913, splitter='best')
2025-01-17 20:34:01,712:INFO:create_model() successfully completed......................................
2025-01-17 20:34:01,963:INFO:SubProcess create_model() end ==================================
2025-01-17 20:34:01,963:INFO:Creating metrics dataframe
2025-01-17 20:34:01,971:INFO:Initializing Random Forest Classifier
2025-01-17 20:34:01,971:INFO:Total runtime is 0.23408828179041546 minutes
2025-01-17 20:34:01,975:INFO:SubProcess create_model() called ==================================
2025-01-17 20:34:01,975:INFO:Initializing create_model()
2025-01-17 20:34:01,976:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016E629634F0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E6517CFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 20:34:01,976:INFO:Checking exceptions
2025-01-17 20:34:01,976:INFO:Importing libraries
2025-01-17 20:34:01,976:INFO:Copying training dataset
2025-01-17 20:34:01,981:INFO:Defining folds
2025-01-17 20:34:01,981:INFO:Declaring metric variables
2025-01-17 20:34:01,985:INFO:Importing untrained model
2025-01-17 20:34:01,990:INFO:Random Forest Classifier Imported successfully
2025-01-17 20:34:02,000:INFO:Starting cross validation
2025-01-17 20:34:02,001:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 20:34:02,977:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:02,993:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:03,002:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:03,009:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:03,055:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:03,073:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:03,080:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:03,087:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:03,099:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:03,109:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:03,115:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:03,120:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:03,227:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:03,236:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:03,242:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:03,247:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:03,321:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:03,337:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:03,346:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:03,358:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:03,442:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:03,451:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:03,455:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:03,459:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:03,548:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:03,553:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:03,557:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:03,560:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:03,609:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:03,615:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:03,617:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:03,620:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:03,625:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:03,630:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:03,632:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:03,635:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:03,672:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:03,677:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:03,680:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:03,682:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:03,697:INFO:Calculating mean and std
2025-01-17 20:34:03,698:INFO:Creating metrics dataframe
2025-01-17 20:34:03,700:INFO:Uploading results into container
2025-01-17 20:34:03,701:INFO:Uploading model into container now
2025-01-17 20:34:03,701:INFO:_master_model_container: 3
2025-01-17 20:34:03,701:INFO:_display_container: 2
2025-01-17 20:34:03,702:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=8913, verbose=0,
                       warm_start=False)
2025-01-17 20:34:03,702:INFO:create_model() successfully completed......................................
2025-01-17 20:34:03,924:INFO:SubProcess create_model() end ==================================
2025-01-17 20:34:03,924:INFO:Creating metrics dataframe
2025-01-17 20:34:03,931:INFO:Initializing Ridge Classifier
2025-01-17 20:34:03,931:INFO:Total runtime is 0.2667695999145508 minutes
2025-01-17 20:34:03,935:INFO:SubProcess create_model() called ==================================
2025-01-17 20:34:03,936:INFO:Initializing create_model()
2025-01-17 20:34:03,936:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016E629634F0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E6517CFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 20:34:03,936:INFO:Checking exceptions
2025-01-17 20:34:03,936:INFO:Importing libraries
2025-01-17 20:34:03,936:INFO:Copying training dataset
2025-01-17 20:34:03,940:INFO:Defining folds
2025-01-17 20:34:03,941:INFO:Declaring metric variables
2025-01-17 20:34:03,944:INFO:Importing untrained model
2025-01-17 20:34:03,950:INFO:Ridge Classifier Imported successfully
2025-01-17 20:34:03,959:INFO:Starting cross validation
2025-01-17 20:34:03,961:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 20:34:04,219:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:34:04,225:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:04,237:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:04,243:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:04,249:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:04,268:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:34:04,272:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:04,281:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:04,286:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:04,291:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:04,333:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:34:04,337:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:04,346:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:04,353:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:04,358:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:04,388:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:34:04,393:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:04,403:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:04,408:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:04,413:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:04,433:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:34:04,435:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:04,441:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:04,446:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:04,449:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:04,461:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:34:04,465:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:04,472:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:04,475:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:04,478:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:04,495:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:34:04,498:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:04,503:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:04,506:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:04,508:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:04,530:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:34:04,532:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:04,537:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:04,540:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:04,542:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:04,550:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:34:04,552:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:04,557:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:04,560:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:04,562:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:04,569:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:34:04,571:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:04,575:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:04,578:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:04,580:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:04,599:INFO:Calculating mean and std
2025-01-17 20:34:04,600:INFO:Creating metrics dataframe
2025-01-17 20:34:04,602:INFO:Uploading results into container
2025-01-17 20:34:04,603:INFO:Uploading model into container now
2025-01-17 20:34:04,604:INFO:_master_model_container: 4
2025-01-17 20:34:04,604:INFO:_display_container: 2
2025-01-17 20:34:04,605:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8913, solver='auto',
                tol=0.0001)
2025-01-17 20:34:04,605:INFO:create_model() successfully completed......................................
2025-01-17 20:34:04,826:INFO:SubProcess create_model() end ==================================
2025-01-17 20:34:04,826:INFO:Creating metrics dataframe
2025-01-17 20:34:04,834:INFO:Initializing K Neighbors Classifier
2025-01-17 20:34:04,835:INFO:Total runtime is 0.28182275692621866 minutes
2025-01-17 20:34:04,838:INFO:SubProcess create_model() called ==================================
2025-01-17 20:34:04,839:INFO:Initializing create_model()
2025-01-17 20:34:04,839:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016E629634F0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E6517CFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 20:34:04,840:INFO:Checking exceptions
2025-01-17 20:34:04,840:INFO:Importing libraries
2025-01-17 20:34:04,840:INFO:Copying training dataset
2025-01-17 20:34:04,844:INFO:Defining folds
2025-01-17 20:34:04,844:INFO:Declaring metric variables
2025-01-17 20:34:04,849:INFO:Importing untrained model
2025-01-17 20:34:04,853:INFO:K Neighbors Classifier Imported successfully
2025-01-17 20:34:04,862:INFO:Starting cross validation
2025-01-17 20:34:04,865:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 20:34:05,341:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:05,349:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:05,352:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:05,356:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:05,406:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:05,418:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:05,422:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:05,425:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:05,476:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:05,483:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:05,486:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:05,493:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:05,552:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:05,558:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:05,563:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:05,569:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:05,602:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:05,609:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:05,614:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:05,617:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:05,620:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:05,626:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:05,629:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:05,632:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:05,678:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:05,681:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:05,684:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:05,686:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:05,687:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:05,690:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:05,692:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:05,692:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:05,694:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:05,697:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:05,699:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:05,702:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:05,705:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:05,705:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:05,708:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:05,711:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:05,732:INFO:Calculating mean and std
2025-01-17 20:34:05,733:INFO:Creating metrics dataframe
2025-01-17 20:34:05,735:INFO:Uploading results into container
2025-01-17 20:34:05,736:INFO:Uploading model into container now
2025-01-17 20:34:05,736:INFO:_master_model_container: 5
2025-01-17 20:34:05,737:INFO:_display_container: 2
2025-01-17 20:34:05,738:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-01-17 20:34:05,738:INFO:create_model() successfully completed......................................
2025-01-17 20:34:05,982:INFO:SubProcess create_model() end ==================================
2025-01-17 20:34:05,982:INFO:Creating metrics dataframe
2025-01-17 20:34:05,990:INFO:Initializing Naive Bayes
2025-01-17 20:34:05,990:INFO:Total runtime is 0.30107176303863525 minutes
2025-01-17 20:34:05,994:INFO:SubProcess create_model() called ==================================
2025-01-17 20:34:05,994:INFO:Initializing create_model()
2025-01-17 20:34:05,994:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016E629634F0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E6517CFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 20:34:05,994:INFO:Checking exceptions
2025-01-17 20:34:05,994:INFO:Importing libraries
2025-01-17 20:34:05,995:INFO:Copying training dataset
2025-01-17 20:34:05,999:INFO:Defining folds
2025-01-17 20:34:05,999:INFO:Declaring metric variables
2025-01-17 20:34:06,003:INFO:Importing untrained model
2025-01-17 20:34:06,009:INFO:Naive Bayes Imported successfully
2025-01-17 20:34:06,017:INFO:Starting cross validation
2025-01-17 20:34:06,019:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 20:34:06,295:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:06,304:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:06,309:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:06,313:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:06,338:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:06,346:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:06,352:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:06,357:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:06,396:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:06,407:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:06,411:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:06,415:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:06,446:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:06,453:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:06,458:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:06,462:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:06,502:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:06,509:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:06,512:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:06,516:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:06,533:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:06,538:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:06,541:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:06,543:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:06,558:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:06,563:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:06,566:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:06,569:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:06,584:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:06,588:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:06,591:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:06,593:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:06,606:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:06,612:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:06,615:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:06,617:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:06,630:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:06,635:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:06,637:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:06,639:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:06,656:INFO:Calculating mean and std
2025-01-17 20:34:06,657:INFO:Creating metrics dataframe
2025-01-17 20:34:06,659:INFO:Uploading results into container
2025-01-17 20:34:06,660:INFO:Uploading model into container now
2025-01-17 20:34:06,661:INFO:_master_model_container: 6
2025-01-17 20:34:06,661:INFO:_display_container: 2
2025-01-17 20:34:06,661:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-01-17 20:34:06,661:INFO:create_model() successfully completed......................................
2025-01-17 20:34:06,881:INFO:SubProcess create_model() end ==================================
2025-01-17 20:34:06,881:INFO:Creating metrics dataframe
2025-01-17 20:34:06,891:INFO:Initializing Extreme Gradient Boosting
2025-01-17 20:34:06,891:INFO:Total runtime is 0.31609673897425333 minutes
2025-01-17 20:34:06,895:INFO:SubProcess create_model() called ==================================
2025-01-17 20:34:06,896:INFO:Initializing create_model()
2025-01-17 20:34:06,896:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016E629634F0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E6517CFD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 20:34:06,896:INFO:Checking exceptions
2025-01-17 20:34:06,896:INFO:Importing libraries
2025-01-17 20:34:06,896:INFO:Copying training dataset
2025-01-17 20:34:06,900:INFO:Defining folds
2025-01-17 20:34:06,901:INFO:Declaring metric variables
2025-01-17 20:34:06,907:INFO:Importing untrained model
2025-01-17 20:34:06,912:INFO:Extreme Gradient Boosting Imported successfully
2025-01-17 20:34:06,923:INFO:Starting cross validation
2025-01-17 20:34:06,925:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 20:34:08,077:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:08,084:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:08,087:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:08,091:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:08,174:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:08,178:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:08,181:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:08,184:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:08,225:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:08,230:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:08,232:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:08,235:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:08,720:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:08,731:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:08,736:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:08,737:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:08,741:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:08,752:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:08,759:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:08,766:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:08,791:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:08,800:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:08,804:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:08,804:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:08,808:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:08,812:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:08,816:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:08,816:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:08,819:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:08,824:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:08,827:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:08,831:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:08,919:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:08,924:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:08,927:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-01-17 20:34:08,929:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:34:09,295:INFO:Calculating mean and std
2025-01-17 20:34:09,297:INFO:Creating metrics dataframe
2025-01-17 20:34:09,300:INFO:Uploading results into container
2025-01-17 20:34:09,301:INFO:Uploading model into container now
2025-01-17 20:34:09,302:INFO:_master_model_container: 7
2025-01-17 20:34:09,302:INFO:_display_container: 2
2025-01-17 20:34:09,304:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2025-01-17 20:34:09,305:INFO:create_model() successfully completed......................................
2025-01-17 20:34:09,607:INFO:SubProcess create_model() end ==================================
2025-01-17 20:34:09,607:INFO:Creating metrics dataframe
2025-01-17 20:34:09,634:INFO:Initializing create_model()
2025-01-17 20:34:09,635:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016E629634F0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8913, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 20:34:09,635:INFO:Checking exceptions
2025-01-17 20:34:09,638:INFO:Importing libraries
2025-01-17 20:34:09,638:INFO:Copying training dataset
2025-01-17 20:34:09,644:INFO:Defining folds
2025-01-17 20:34:09,644:INFO:Declaring metric variables
2025-01-17 20:34:09,645:INFO:Importing untrained model
2025-01-17 20:34:09,645:INFO:Declaring custom model
2025-01-17 20:34:09,645:INFO:Decision Tree Classifier Imported successfully
2025-01-17 20:34:09,647:INFO:Cross validation set to False
2025-01-17 20:34:09,647:INFO:Fitting Model
2025-01-17 20:34:09,782:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8913, splitter='best')
2025-01-17 20:34:09,782:INFO:create_model() successfully completed......................................
2025-01-17 20:34:10,078:INFO:_master_model_container: 7
2025-01-17 20:34:10,079:INFO:_display_container: 2
2025-01-17 20:34:10,079:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8913, splitter='best')
2025-01-17 20:34:10,079:INFO:compare_models() successfully completed......................................
2025-01-17 20:38:59,597:INFO:PyCaret ClassificationExperiment
2025-01-17 20:38:59,597:INFO:Logging name: clf-default-name
2025-01-17 20:38:59,597:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-01-17 20:38:59,597:INFO:version 3.3.2
2025-01-17 20:38:59,597:INFO:Initializing setup()
2025-01-17 20:38:59,598:INFO:self.USI: 36aa
2025-01-17 20:38:59,598:INFO:self._variable_keys: {'fold_generator', '_ml_usecase', 'X_train', 'X', 'fix_imbalance', 'logging_param', 'n_jobs_param', 'y_train', 'pipeline', 'memory', 'gpu_param', 'idx', 'y_test', 'gpu_n_jobs_param', 'target_param', 'html_param', 'USI', 'exp_id', 'y', 'seed', 'X_test', 'data', 'log_plots_param', 'is_multiclass', 'fold_groups_param', 'fold_shuffle_param', '_available_plots', 'exp_name_log'}
2025-01-17 20:38:59,598:INFO:Checking environment
2025-01-17 20:38:59,598:INFO:python_version: 3.9.0
2025-01-17 20:38:59,598:INFO:python_build: ('default', 'Nov 15 2020 08:30:55')
2025-01-17 20:38:59,598:INFO:machine: AMD64
2025-01-17 20:38:59,598:INFO:platform: Windows-10-10.0.26100-SP0
2025-01-17 20:38:59,603:INFO:Memory: svmem(total=7967137792, available=1063391232, percent=86.7, used=6903746560, free=1063391232)
2025-01-17 20:38:59,603:INFO:Physical Core: 6
2025-01-17 20:38:59,603:INFO:Logical Core: 12
2025-01-17 20:38:59,603:INFO:Checking libraries
2025-01-17 20:38:59,603:INFO:System:
2025-01-17 20:38:59,603:INFO:    python: 3.9.0 (default, Nov 15 2020, 08:30:55) [MSC v.1916 64 bit (AMD64)]
2025-01-17 20:38:59,603:INFO:executable: e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\python.exe
2025-01-17 20:38:59,603:INFO:   machine: Windows-10-10.0.26100-SP0
2025-01-17 20:38:59,603:INFO:PyCaret required dependencies:
2025-01-17 20:38:59,604:INFO:                 pip: 24.2
2025-01-17 20:38:59,604:INFO:          setuptools: 75.1.0
2025-01-17 20:38:59,604:INFO:             pycaret: 3.3.2
2025-01-17 20:38:59,604:INFO:             IPython: 8.18.1
2025-01-17 20:38:59,604:INFO:          ipywidgets: 8.1.5
2025-01-17 20:38:59,604:INFO:                tqdm: 4.67.1
2025-01-17 20:38:59,604:INFO:               numpy: 1.26.4
2025-01-17 20:38:59,604:INFO:              pandas: 2.1.4
2025-01-17 20:38:59,604:INFO:              jinja2: 3.1.5
2025-01-17 20:38:59,604:INFO:               scipy: 1.11.4
2025-01-17 20:38:59,604:INFO:              joblib: 1.3.2
2025-01-17 20:38:59,604:INFO:             sklearn: 1.4.2
2025-01-17 20:38:59,604:INFO:                pyod: 2.0.3
2025-01-17 20:38:59,604:INFO:            imblearn: 0.12.3
2025-01-17 20:38:59,604:INFO:   category_encoders: 2.6.4
2025-01-17 20:38:59,604:INFO:            lightgbm: 4.5.0
2025-01-17 20:38:59,604:INFO:               numba: 0.60.0
2025-01-17 20:38:59,604:INFO:            requests: 2.32.3
2025-01-17 20:38:59,604:INFO:          matplotlib: 3.7.5
2025-01-17 20:38:59,604:INFO:          scikitplot: 0.3.7
2025-01-17 20:38:59,604:INFO:         yellowbrick: 1.5
2025-01-17 20:38:59,604:INFO:              plotly: 5.24.1
2025-01-17 20:38:59,604:INFO:    plotly-resampler: Not installed
2025-01-17 20:38:59,604:INFO:             kaleido: 0.2.1
2025-01-17 20:38:59,604:INFO:           schemdraw: 0.15
2025-01-17 20:38:59,605:INFO:         statsmodels: 0.14.4
2025-01-17 20:38:59,605:INFO:              sktime: 0.26.0
2025-01-17 20:38:59,605:INFO:               tbats: 1.1.3
2025-01-17 20:38:59,605:INFO:            pmdarima: 2.0.4
2025-01-17 20:38:59,605:INFO:              psutil: 6.1.1
2025-01-17 20:38:59,605:INFO:          markupsafe: 2.1.5
2025-01-17 20:38:59,605:INFO:             pickle5: Not installed
2025-01-17 20:38:59,605:INFO:         cloudpickle: 3.1.1
2025-01-17 20:38:59,605:INFO:         deprecation: 2.1.0
2025-01-17 20:38:59,605:INFO:              xxhash: 3.5.0
2025-01-17 20:38:59,605:INFO:           wurlitzer: Not installed
2025-01-17 20:38:59,605:INFO:PyCaret optional dependencies:
2025-01-17 20:38:59,605:INFO:                shap: 0.44.1
2025-01-17 20:38:59,605:INFO:           interpret: 0.6.9
2025-01-17 20:38:59,605:INFO:                umap: 0.5.7
2025-01-17 20:38:59,605:INFO:     ydata_profiling: 4.12.1
2025-01-17 20:38:59,605:INFO:  explainerdashboard: 0.4.8
2025-01-17 20:38:59,605:INFO:             autoviz: Not installed
2025-01-17 20:38:59,605:INFO:           fairlearn: 0.7.0
2025-01-17 20:38:59,605:INFO:          deepchecks: Not installed
2025-01-17 20:38:59,605:INFO:             xgboost: 2.1.3
2025-01-17 20:38:59,605:INFO:            catboost: 1.2.7
2025-01-17 20:38:59,605:INFO:              kmodes: 0.12.2
2025-01-17 20:38:59,605:INFO:             mlxtend: 0.23.3
2025-01-17 20:38:59,605:INFO:       statsforecast: 1.5.0
2025-01-17 20:38:59,606:INFO:        tune_sklearn: Not installed
2025-01-17 20:38:59,606:INFO:                 ray: Not installed
2025-01-17 20:38:59,606:INFO:            hyperopt: 0.2.7
2025-01-17 20:38:59,606:INFO:              optuna: 4.1.0
2025-01-17 20:38:59,606:INFO:               skopt: 0.10.2
2025-01-17 20:38:59,606:INFO:              mlflow: 2.19.0
2025-01-17 20:38:59,606:INFO:              gradio: Not installed
2025-01-17 20:38:59,606:INFO:             fastapi: Not installed
2025-01-17 20:38:59,606:INFO:             uvicorn: Not installed
2025-01-17 20:38:59,606:INFO:              m2cgen: 0.10.0
2025-01-17 20:38:59,606:INFO:           evidently: 0.4.40
2025-01-17 20:38:59,606:INFO:               fugue: 0.8.7
2025-01-17 20:38:59,606:INFO:           streamlit: 1.41.1
2025-01-17 20:38:59,606:INFO:             prophet: Not installed
2025-01-17 20:38:59,606:INFO:None
2025-01-17 20:38:59,606:INFO:Set up data.
2025-01-17 20:39:00,444:INFO:Set up folding strategy.
2025-01-17 20:39:00,446:INFO:Set up train/test split.
2025-01-17 20:39:00,992:INFO:Set up index.
2025-01-17 20:39:01,031:INFO:Assigning column types.
2025-01-17 20:39:01,715:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-01-17 20:39:01,763:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 20:39:01,764:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 20:39:01,798:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 20:39:01,804:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 20:39:01,865:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-17 20:39:01,866:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 20:39:01,896:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 20:39:01,899:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 20:39:01,899:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-01-17 20:39:01,946:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 20:39:01,975:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 20:39:01,979:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 20:39:02,028:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-17 20:39:02,057:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 20:39:02,060:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 20:39:02,060:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-01-17 20:39:02,138:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 20:39:02,141:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 20:39:02,218:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 20:39:02,221:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 20:39:02,225:INFO:Preparing preprocessing pipeline...
2025-01-17 20:39:02,314:INFO:Set up label encoding.
2025-01-17 20:39:02,314:INFO:Set up simple imputation.
2025-01-17 20:39:04,630:INFO:Finished creating preprocessing pipeline.
2025-01-17 20:39:04,641:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\AMMUNA~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['ability', 'able', 'absolutely',
                                             'across', 'act', 'acted', 'acting',
                                             'action', 'actor', 'actress',
                                             'actual'...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-01-17 20:39:04,641:INFO:Creating final display dataframe.
2025-01-17 20:39:08,407:INFO:Setup _display_container:                     Description                                 Value
0                    Session id                                  7310
1                        Target                             Sentiment
2                   Target type                            Multiclass
3                Target mapping  negative: 0, neutral: 1, positive: 2
4           Original data shape                         (20190, 1001)
5        Transformed data shape                         (20190, 1001)
6   Transformed train set shape                         (14133, 1001)
7    Transformed test set shape                          (6057, 1001)
8              Numeric features                                  1000
9                    Preprocess                                  True
10              Imputation type                                simple
11           Numeric imputation                                  mean
12       Categorical imputation                                  mode
13               Fold Generator                       StratifiedKFold
14                  Fold Number                                    10
15                     CPU Jobs                                    -1
16                      Use GPU                                 False
17               Log Experiment                                 False
18              Experiment Name                      clf-default-name
19                          USI                                  36aa
2025-01-17 20:39:08,499:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 20:39:08,503:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 20:39:08,582:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-17 20:39:08,585:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-17 20:39:08,587:INFO:setup() successfully completed in 9.06s...............
2025-01-17 20:39:08,634:INFO:Initializing get_config()
2025-01-17 20:39:08,634:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016E6714B850>, variable=y_train)
2025-01-17 20:39:08,635:INFO:Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
2025-01-17 20:39:09,102:INFO:Variable:  returned as 9199      neutral
8756      neutral
17926    positive
5803      neutral
9068      neutral
           ...   
18568    positive
1082      neutral
17938    positive
8775      neutral
2089     positive
Name: Sentiment, Length: 14133, dtype: category
Categories (3, object): ['negative', 'neutral', 'positive']
2025-01-17 20:39:09,102:INFO:get_config() successfully completed......................................
2025-01-17 20:39:17,346:INFO:Initializing compare_models()
2025-01-17 20:39:17,346:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016E6714B850>, include=['svm', 'dt', 'rf', 'ridge', 'knn', 'nb', 'xgboost'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000016E6714B850>, 'include': ['svm', 'dt', 'rf', 'ridge', 'knn', 'nb', 'xgboost'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-01-17 20:39:17,347:INFO:Checking exceptions
2025-01-17 20:39:17,712:INFO:Preparing display monitor
2025-01-17 20:39:17,742:INFO:Initializing SVM - Linear Kernel
2025-01-17 20:39:17,742:INFO:Total runtime is 0.0 minutes
2025-01-17 20:39:17,748:INFO:SubProcess create_model() called ==================================
2025-01-17 20:39:17,749:INFO:Initializing create_model()
2025-01-17 20:39:17,749:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016E6714B850>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E629C8940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 20:39:17,749:INFO:Checking exceptions
2025-01-17 20:39:17,749:INFO:Importing libraries
2025-01-17 20:39:17,749:INFO:Copying training dataset
2025-01-17 20:39:18,376:INFO:Defining folds
2025-01-17 20:39:18,377:INFO:Declaring metric variables
2025-01-17 20:39:18,381:INFO:Importing untrained model
2025-01-17 20:39:18,385:INFO:SVM - Linear Kernel Imported successfully
2025-01-17 20:39:18,393:INFO:Starting cross validation
2025-01-17 20:39:18,397:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 20:39:31,668:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:39:31,680:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:31,707:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:31,723:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:32,116:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:39:32,140:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:32,173:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:32,207:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:32,693:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:39:32,705:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:32,723:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:32,739:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:33,252:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:39:33,262:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:33,278:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:33,293:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:33,600:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:39:33,610:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:33,632:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:33,649:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:33,851:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:39:33,860:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:33,877:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:33,898:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:35,035:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:39:35,050:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:35,067:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:35,085:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:35,941:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:39:35,946:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:35,956:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:35,966:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:36,202:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:39:36,206:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:36,215:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:36,223:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:36,437:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:39:36,441:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:36,449:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:36,457:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:36,486:INFO:Calculating mean and std
2025-01-17 20:39:36,493:INFO:Creating metrics dataframe
2025-01-17 20:39:36,502:INFO:Uploading results into container
2025-01-17 20:39:36,505:INFO:Uploading model into container now
2025-01-17 20:39:36,506:INFO:_master_model_container: 1
2025-01-17 20:39:36,506:INFO:_display_container: 2
2025-01-17 20:39:36,507:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7310, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-01-17 20:39:36,507:INFO:create_model() successfully completed......................................
2025-01-17 20:39:36,914:INFO:SubProcess create_model() end ==================================
2025-01-17 20:39:36,914:INFO:Creating metrics dataframe
2025-01-17 20:39:36,925:INFO:Initializing Decision Tree Classifier
2025-01-17 20:39:36,926:INFO:Total runtime is 0.319711442788442 minutes
2025-01-17 20:39:36,931:INFO:SubProcess create_model() called ==================================
2025-01-17 20:39:36,932:INFO:Initializing create_model()
2025-01-17 20:39:36,932:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016E6714B850>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E629C8940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 20:39:36,932:INFO:Checking exceptions
2025-01-17 20:39:36,932:INFO:Importing libraries
2025-01-17 20:39:36,933:INFO:Copying training dataset
2025-01-17 20:39:37,567:INFO:Defining folds
2025-01-17 20:39:37,567:INFO:Declaring metric variables
2025-01-17 20:39:37,573:INFO:Importing untrained model
2025-01-17 20:39:37,578:INFO:Decision Tree Classifier Imported successfully
2025-01-17 20:39:37,585:INFO:Starting cross validation
2025-01-17 20:39:37,590:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 20:39:50,680:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:50,693:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:50,705:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:51,096:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:51,109:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:51,121:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:51,525:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:51,536:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:51,548:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:52,183:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:52,197:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:52,206:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:52,220:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:52,232:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:52,244:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:52,955:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:52,967:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:52,978:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:52,986:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:52,997:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:52,998:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:53,008:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:53,008:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:53,016:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:54,767:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:54,775:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:54,783:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:54,898:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:54,906:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:54,913:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:39:54,953:INFO:Calculating mean and std
2025-01-17 20:39:54,955:INFO:Creating metrics dataframe
2025-01-17 20:39:54,958:INFO:Uploading results into container
2025-01-17 20:39:54,958:INFO:Uploading model into container now
2025-01-17 20:39:54,959:INFO:_master_model_container: 2
2025-01-17 20:39:54,960:INFO:_display_container: 2
2025-01-17 20:39:54,961:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7310, splitter='best')
2025-01-17 20:39:54,961:INFO:create_model() successfully completed......................................
2025-01-17 20:39:55,221:INFO:SubProcess create_model() end ==================================
2025-01-17 20:39:55,221:INFO:Creating metrics dataframe
2025-01-17 20:39:55,233:INFO:Initializing Random Forest Classifier
2025-01-17 20:39:55,233:INFO:Total runtime is 0.6248438755671184 minutes
2025-01-17 20:39:55,237:INFO:SubProcess create_model() called ==================================
2025-01-17 20:39:55,238:INFO:Initializing create_model()
2025-01-17 20:39:55,238:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016E6714B850>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E629C8940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 20:39:55,239:INFO:Checking exceptions
2025-01-17 20:39:55,239:INFO:Importing libraries
2025-01-17 20:39:55,239:INFO:Copying training dataset
2025-01-17 20:39:55,824:INFO:Defining folds
2025-01-17 20:39:55,825:INFO:Declaring metric variables
2025-01-17 20:39:55,829:INFO:Importing untrained model
2025-01-17 20:39:55,835:INFO:Random Forest Classifier Imported successfully
2025-01-17 20:39:55,845:INFO:Starting cross validation
2025-01-17 20:39:55,850:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 20:40:10,070:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:10,196:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:10,215:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:13,033:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:13,117:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:13,139:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:15,278:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:15,327:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:15,393:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:15,409:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:15,427:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:15,441:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:17,603:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:17,618:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:17,670:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:18,674:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:18,687:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:18,732:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:19,753:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:19,778:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:19,798:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:19,801:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:19,818:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:19,836:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:19,962:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:19,973:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:19,985:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:20,161:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:20,170:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:20,179:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:20,211:INFO:Calculating mean and std
2025-01-17 20:40:20,214:INFO:Creating metrics dataframe
2025-01-17 20:40:20,217:INFO:Uploading results into container
2025-01-17 20:40:20,219:INFO:Uploading model into container now
2025-01-17 20:40:20,220:INFO:_master_model_container: 3
2025-01-17 20:40:20,220:INFO:_display_container: 2
2025-01-17 20:40:20,222:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=7310, verbose=0,
                       warm_start=False)
2025-01-17 20:40:20,222:INFO:create_model() successfully completed......................................
2025-01-17 20:40:20,566:INFO:SubProcess create_model() end ==================================
2025-01-17 20:40:20,566:INFO:Creating metrics dataframe
2025-01-17 20:40:20,573:INFO:Initializing Ridge Classifier
2025-01-17 20:40:20,574:INFO:Total runtime is 1.047209362188975 minutes
2025-01-17 20:40:20,580:INFO:SubProcess create_model() called ==================================
2025-01-17 20:40:20,580:INFO:Initializing create_model()
2025-01-17 20:40:20,580:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016E6714B850>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E629C8940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 20:40:20,581:INFO:Checking exceptions
2025-01-17 20:40:20,581:INFO:Importing libraries
2025-01-17 20:40:20,581:INFO:Copying training dataset
2025-01-17 20:40:21,198:INFO:Defining folds
2025-01-17 20:40:21,198:INFO:Declaring metric variables
2025-01-17 20:40:21,204:INFO:Importing untrained model
2025-01-17 20:40:21,208:INFO:Ridge Classifier Imported successfully
2025-01-17 20:40:21,217:INFO:Starting cross validation
2025-01-17 20:40:21,221:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 20:40:23,672:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:40:23,677:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:23,694:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:23,708:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:24,231:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:40:24,236:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:24,259:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:24,282:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:24,903:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:40:24,911:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:24,927:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:24,943:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:25,528:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:40:25,534:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:25,549:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:25,567:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:26,455:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:40:26,465:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:26,484:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:26,508:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:27,223:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:40:27,231:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:27,251:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:27,264:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:27,612:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:40:27,617:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:27,630:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:27,639:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:28,039:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:40:28,044:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:28,056:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:28,067:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:28,315:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:40:28,319:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:28,332:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:28,342:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:28,565:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-17 20:40:28,567:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:28,575:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:28,582:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:28,618:INFO:Calculating mean and std
2025-01-17 20:40:28,620:INFO:Creating metrics dataframe
2025-01-17 20:40:28,622:INFO:Uploading results into container
2025-01-17 20:40:28,623:INFO:Uploading model into container now
2025-01-17 20:40:28,623:INFO:_master_model_container: 4
2025-01-17 20:40:28,623:INFO:_display_container: 2
2025-01-17 20:40:28,624:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7310, solver='auto',
                tol=0.0001)
2025-01-17 20:40:28,624:INFO:create_model() successfully completed......................................
2025-01-17 20:40:28,881:INFO:SubProcess create_model() end ==================================
2025-01-17 20:40:28,881:INFO:Creating metrics dataframe
2025-01-17 20:40:28,890:INFO:Initializing K Neighbors Classifier
2025-01-17 20:40:28,890:INFO:Total runtime is 1.185797659556071 minutes
2025-01-17 20:40:28,895:INFO:SubProcess create_model() called ==================================
2025-01-17 20:40:28,895:INFO:Initializing create_model()
2025-01-17 20:40:28,895:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016E6714B850>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E629C8940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 20:40:28,895:INFO:Checking exceptions
2025-01-17 20:40:28,895:INFO:Importing libraries
2025-01-17 20:40:28,895:INFO:Copying training dataset
2025-01-17 20:40:29,548:INFO:Defining folds
2025-01-17 20:40:29,548:INFO:Declaring metric variables
2025-01-17 20:40:29,556:INFO:Importing untrained model
2025-01-17 20:40:29,562:INFO:K Neighbors Classifier Imported successfully
2025-01-17 20:40:29,577:INFO:Starting cross validation
2025-01-17 20:40:29,582:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 20:40:42,229:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:42,271:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:42,307:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:42,646:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:42,677:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:42,702:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:43,019:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:43,045:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:43,075:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:44,035:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:44,062:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:44,089:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:45,360:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:45,382:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:45,406:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:45,848:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:45,866:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:45,881:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:45,892:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:45,914:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:45,932:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:46,152:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:46,162:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:46,172:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:46,650:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:46,662:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:46,676:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:47,347:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:47,371:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:47,388:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:47,437:INFO:Calculating mean and std
2025-01-17 20:40:47,453:INFO:Creating metrics dataframe
2025-01-17 20:40:47,463:INFO:Uploading results into container
2025-01-17 20:40:47,471:INFO:Uploading model into container now
2025-01-17 20:40:47,474:INFO:_master_model_container: 5
2025-01-17 20:40:47,474:INFO:_display_container: 2
2025-01-17 20:40:47,476:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-01-17 20:40:47,477:INFO:create_model() successfully completed......................................
2025-01-17 20:40:48,152:INFO:SubProcess create_model() end ==================================
2025-01-17 20:40:48,152:INFO:Creating metrics dataframe
2025-01-17 20:40:48,172:INFO:Initializing Naive Bayes
2025-01-17 20:40:48,173:INFO:Total runtime is 1.5071877479553224 minutes
2025-01-17 20:40:48,181:INFO:SubProcess create_model() called ==================================
2025-01-17 20:40:48,181:INFO:Initializing create_model()
2025-01-17 20:40:48,181:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016E6714B850>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E629C8940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 20:40:48,182:INFO:Checking exceptions
2025-01-17 20:40:48,182:INFO:Importing libraries
2025-01-17 20:40:48,183:INFO:Copying training dataset
2025-01-17 20:40:49,227:INFO:Defining folds
2025-01-17 20:40:49,227:INFO:Declaring metric variables
2025-01-17 20:40:49,240:INFO:Importing untrained model
2025-01-17 20:40:49,253:INFO:Naive Bayes Imported successfully
2025-01-17 20:40:49,280:INFO:Starting cross validation
2025-01-17 20:40:49,289:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 20:40:52,336:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:52,354:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:52,377:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:53,160:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:53,177:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:53,198:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:53,927:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:53,943:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:53,972:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:54,591:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:54,611:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:54,632:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:56,063:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:56,083:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:56,103:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:56,816:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:56,839:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:56,859:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:56,903:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:56,923:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:56,946:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:57,508:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:57,523:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:57,540:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:57,937:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:57,947:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:57,958:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:58,219:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:58,226:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:58,234:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:40:58,267:INFO:Calculating mean and std
2025-01-17 20:40:58,269:INFO:Creating metrics dataframe
2025-01-17 20:40:58,271:INFO:Uploading results into container
2025-01-17 20:40:58,272:INFO:Uploading model into container now
2025-01-17 20:40:58,273:INFO:_master_model_container: 6
2025-01-17 20:40:58,273:INFO:_display_container: 2
2025-01-17 20:40:58,274:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-01-17 20:40:58,274:INFO:create_model() successfully completed......................................
2025-01-17 20:40:58,539:INFO:SubProcess create_model() end ==================================
2025-01-17 20:40:58,539:INFO:Creating metrics dataframe
2025-01-17 20:40:58,553:INFO:Initializing Extreme Gradient Boosting
2025-01-17 20:40:58,553:INFO:Total runtime is 1.6801924864451092 minutes
2025-01-17 20:40:58,558:INFO:SubProcess create_model() called ==================================
2025-01-17 20:40:58,558:INFO:Initializing create_model()
2025-01-17 20:40:58,559:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016E6714B850>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E629C8940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 20:40:58,559:INFO:Checking exceptions
2025-01-17 20:40:58,559:INFO:Importing libraries
2025-01-17 20:40:58,559:INFO:Copying training dataset
2025-01-17 20:40:59,163:INFO:Defining folds
2025-01-17 20:40:59,163:INFO:Declaring metric variables
2025-01-17 20:40:59,172:INFO:Importing untrained model
2025-01-17 20:40:59,180:INFO:Extreme Gradient Boosting Imported successfully
2025-01-17 20:40:59,191:INFO:Starting cross validation
2025-01-17 20:40:59,196:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 20:41:11,328:WARNING:create_model() for xgboost raised an exception or returned all 0.0, trying without fit_kwargs:
2025-01-17 20:41:11,464:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\joblib\externals\loky\backend\queues.py", line 161, in _feed
    send_bytes(obj_)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\multiprocessing\connection.py", line 205, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\multiprocessing\connection.py", line 285, in _send_bytes
    ov, err = _winapi.WriteFile(self._handle, buf, overlapped=True)
OSError: [WinError 1450] Insufficient system resources exist to complete the requested service
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
_pickle.PicklingError: Could not pickle the task to send it to the workers.

2025-01-17 20:41:11,470:INFO:Initializing create_model()
2025-01-17 20:41:11,470:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016E6714B850>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000016E629C8940>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 20:41:11,470:INFO:Checking exceptions
2025-01-17 20:41:11,471:INFO:Importing libraries
2025-01-17 20:41:11,473:INFO:Copying training dataset
2025-01-17 20:41:12,368:INFO:Defining folds
2025-01-17 20:41:12,368:INFO:Declaring metric variables
2025-01-17 20:41:12,383:INFO:Importing untrained model
2025-01-17 20:41:12,392:INFO:Extreme Gradient Boosting Imported successfully
2025-01-17 20:41:12,402:INFO:Starting cross validation
2025-01-17 20:41:12,410:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-17 20:44:35,515:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:44:35,553:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:44:35,568:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:44:37,448:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:44:37,476:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:44:37,503:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:44:39,757:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:44:39,791:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:44:39,807:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:44:39,967:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:44:39,996:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:44:40,008:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:44:40,024:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:44:40,066:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:44:40,088:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:44:41,455:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:44:41,471:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:44:41,480:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:44:41,801:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:44:41,814:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:44:41,823:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:44:41,857:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:44:41,873:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:44:41,882:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:44:42,131:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:44:42,149:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:44:42,158:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:44:42,206:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:44:42,225:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:44:42,235:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-17 20:44:42,480:INFO:Calculating mean and std
2025-01-17 20:44:42,512:INFO:Creating metrics dataframe
2025-01-17 20:44:42,572:INFO:Uploading results into container
2025-01-17 20:44:42,577:INFO:Uploading model into container now
2025-01-17 20:44:42,588:INFO:_master_model_container: 7
2025-01-17 20:44:42,588:INFO:_display_container: 2
2025-01-17 20:44:42,599:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2025-01-17 20:44:42,599:INFO:create_model() successfully completed......................................
2025-01-17 20:44:44,191:INFO:SubProcess create_model() end ==================================
2025-01-17 20:44:44,191:INFO:Creating metrics dataframe
2025-01-17 20:44:44,227:INFO:Initializing create_model()
2025-01-17 20:44:44,228:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000016E6714B850>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-17 20:44:44,228:INFO:Checking exceptions
2025-01-17 20:44:44,233:INFO:Importing libraries
2025-01-17 20:44:44,235:INFO:Copying training dataset
2025-01-17 20:44:45,054:INFO:Defining folds
2025-01-17 20:44:45,054:INFO:Declaring metric variables
2025-01-17 20:44:45,055:INFO:Importing untrained model
2025-01-17 20:44:45,055:INFO:Declaring custom model
2025-01-17 20:44:45,056:INFO:Extreme Gradient Boosting Imported successfully
2025-01-17 20:44:45,061:INFO:Cross validation set to False
2025-01-17 20:44:45,061:INFO:Fitting Model
2025-01-17 20:45:21,733:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)
2025-01-17 20:45:21,734:INFO:create_model() successfully completed......................................
2025-01-17 20:45:22,043:INFO:_master_model_container: 7
2025-01-17 20:45:22,043:INFO:_display_container: 2
2025-01-17 20:45:22,044:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)
2025-01-17 20:45:22,044:INFO:compare_models() successfully completed......................................
2025-01-18 11:01:48,178:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-18 11:01:48,179:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-18 11:01:48,180:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-18 11:01:48,180:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-18 11:58:29,569:INFO:PyCaret ClassificationExperiment
2025-01-18 11:58:29,570:INFO:Logging name: clf-default-name
2025-01-18 11:58:29,570:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-01-18 11:58:29,570:INFO:version 3.3.2
2025-01-18 11:58:29,570:INFO:Initializing setup()
2025-01-18 11:58:29,570:INFO:self.USI: f7a9
2025-01-18 11:58:29,570:INFO:self._variable_keys: {'memory', 'n_jobs_param', 'data', 'exp_name_log', 'fold_shuffle_param', 'y_test', 'target_param', 'pipeline', '_ml_usecase', 'exp_id', 'y', 'gpu_n_jobs_param', 'seed', 'X', 'html_param', '_available_plots', 'gpu_param', 'idx', 'fold_groups_param', 'y_train', 'is_multiclass', 'X_test', 'fold_generator', 'log_plots_param', 'fix_imbalance', 'USI', 'X_train', 'logging_param'}
2025-01-18 11:58:29,571:INFO:Checking environment
2025-01-18 11:58:29,571:INFO:python_version: 3.9.0
2025-01-18 11:58:29,571:INFO:python_build: ('default', 'Nov 15 2020 08:30:55')
2025-01-18 11:58:29,571:INFO:machine: AMD64
2025-01-18 11:58:29,571:INFO:platform: Windows-10-10.0.26100-SP0
2025-01-18 11:58:29,576:INFO:Memory: svmem(total=7967137792, available=1523208192, percent=80.9, used=6443929600, free=1523208192)
2025-01-18 11:58:29,577:INFO:Physical Core: 6
2025-01-18 11:58:29,577:INFO:Logical Core: 12
2025-01-18 11:58:29,577:INFO:Checking libraries
2025-01-18 11:58:29,577:INFO:System:
2025-01-18 11:58:29,577:INFO:    python: 3.9.0 (default, Nov 15 2020, 08:30:55) [MSC v.1916 64 bit (AMD64)]
2025-01-18 11:58:29,577:INFO:executable: e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\python.exe
2025-01-18 11:58:29,577:INFO:   machine: Windows-10-10.0.26100-SP0
2025-01-18 11:58:29,577:INFO:PyCaret required dependencies:
2025-01-18 11:58:31,679:INFO:                 pip: 24.2
2025-01-18 11:58:31,680:INFO:          setuptools: 75.1.0
2025-01-18 11:58:31,680:INFO:             pycaret: 3.3.2
2025-01-18 11:58:31,680:INFO:             IPython: 8.18.1
2025-01-18 11:58:31,680:INFO:          ipywidgets: 8.1.5
2025-01-18 11:58:31,680:INFO:                tqdm: 4.67.1
2025-01-18 11:58:31,680:INFO:               numpy: 1.26.4
2025-01-18 11:58:31,680:INFO:              pandas: 2.1.4
2025-01-18 11:58:31,680:INFO:              jinja2: 3.1.5
2025-01-18 11:58:31,680:INFO:               scipy: 1.11.4
2025-01-18 11:58:31,680:INFO:              joblib: 1.3.2
2025-01-18 11:58:31,680:INFO:             sklearn: 1.4.2
2025-01-18 11:58:31,680:INFO:                pyod: 2.0.3
2025-01-18 11:58:31,680:INFO:            imblearn: 0.12.3
2025-01-18 11:58:31,680:INFO:   category_encoders: 2.6.4
2025-01-18 11:58:31,680:INFO:            lightgbm: 4.5.0
2025-01-18 11:58:31,680:INFO:               numba: 0.60.0
2025-01-18 11:58:31,680:INFO:            requests: 2.32.3
2025-01-18 11:58:31,680:INFO:          matplotlib: 3.7.5
2025-01-18 11:58:31,680:INFO:          scikitplot: 0.3.7
2025-01-18 11:58:31,680:INFO:         yellowbrick: 1.5
2025-01-18 11:58:31,680:INFO:              plotly: 5.24.1
2025-01-18 11:58:31,680:INFO:    plotly-resampler: Not installed
2025-01-18 11:58:31,680:INFO:             kaleido: 0.2.1
2025-01-18 11:58:31,680:INFO:           schemdraw: 0.15
2025-01-18 11:58:31,680:INFO:         statsmodels: 0.14.4
2025-01-18 11:58:31,681:INFO:              sktime: 0.26.0
2025-01-18 11:58:31,681:INFO:               tbats: 1.1.3
2025-01-18 11:58:31,681:INFO:            pmdarima: 2.0.4
2025-01-18 11:58:31,681:INFO:              psutil: 6.1.1
2025-01-18 11:58:31,681:INFO:          markupsafe: 2.1.5
2025-01-18 11:58:31,681:INFO:             pickle5: Not installed
2025-01-18 11:58:31,681:INFO:         cloudpickle: 3.1.1
2025-01-18 11:58:31,681:INFO:         deprecation: 2.1.0
2025-01-18 11:58:31,681:INFO:              xxhash: 3.5.0
2025-01-18 11:58:31,681:INFO:           wurlitzer: Not installed
2025-01-18 11:58:31,681:INFO:PyCaret optional dependencies:
2025-01-18 11:58:33,983:INFO:                shap: 0.44.1
2025-01-18 11:58:33,983:INFO:           interpret: 0.6.9
2025-01-18 11:58:33,983:INFO:                umap: 0.5.7
2025-01-18 11:58:33,983:INFO:     ydata_profiling: 4.12.1
2025-01-18 11:58:33,983:INFO:  explainerdashboard: 0.4.8
2025-01-18 11:58:33,983:INFO:             autoviz: Not installed
2025-01-18 11:58:33,983:INFO:           fairlearn: 0.7.0
2025-01-18 11:58:33,983:INFO:          deepchecks: Not installed
2025-01-18 11:58:33,983:INFO:             xgboost: 2.1.3
2025-01-18 11:58:33,983:INFO:            catboost: 1.2.7
2025-01-18 11:58:33,983:INFO:              kmodes: 0.12.2
2025-01-18 11:58:33,983:INFO:             mlxtend: 0.23.3
2025-01-18 11:58:33,983:INFO:       statsforecast: 1.5.0
2025-01-18 11:58:33,983:INFO:        tune_sklearn: Not installed
2025-01-18 11:58:33,983:INFO:                 ray: Not installed
2025-01-18 11:58:33,983:INFO:            hyperopt: 0.2.7
2025-01-18 11:58:33,983:INFO:              optuna: 4.1.0
2025-01-18 11:58:33,983:INFO:               skopt: 0.10.2
2025-01-18 11:58:33,983:INFO:              mlflow: 2.19.0
2025-01-18 11:58:33,983:INFO:              gradio: Not installed
2025-01-18 11:58:33,983:INFO:             fastapi: Not installed
2025-01-18 11:58:33,983:INFO:             uvicorn: Not installed
2025-01-18 11:58:33,983:INFO:              m2cgen: 0.10.0
2025-01-18 11:58:33,983:INFO:           evidently: 0.4.40
2025-01-18 11:58:33,983:INFO:               fugue: 0.8.7
2025-01-18 11:58:33,983:INFO:           streamlit: 1.41.1
2025-01-18 11:58:33,983:INFO:             prophet: Not installed
2025-01-18 11:58:33,983:INFO:None
2025-01-18 11:58:33,983:INFO:Set up data.
2025-01-18 11:58:35,054:INFO:Set up folding strategy.
2025-01-18 11:58:35,054:INFO:Set up train/test split.
2025-01-18 11:58:35,605:INFO:Set up index.
2025-01-18 11:58:35,645:INFO:Assigning column types.
2025-01-18 11:58:36,361:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-01-18 11:58:36,409:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-18 11:58:36,415:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-18 11:58:36,456:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-18 11:58:36,459:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-18 11:58:38,002:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-18 11:58:38,003:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-18 11:58:38,033:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-18 11:58:38,036:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-18 11:58:38,037:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-01-18 11:58:38,084:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-18 11:58:38,113:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-18 11:58:38,116:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-18 11:58:38,164:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-18 11:58:38,194:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-18 11:58:38,196:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-18 11:58:38,196:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-01-18 11:58:38,277:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-18 11:58:38,280:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-18 11:58:38,358:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-18 11:58:38,361:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-18 11:58:38,379:INFO:Preparing preprocessing pipeline...
2025-01-18 11:58:38,467:INFO:Set up label encoding.
2025-01-18 11:58:38,467:INFO:Set up simple imputation.
2025-01-18 11:58:40,205:INFO:Finished creating preprocessing pipeline.
2025-01-18 11:58:40,215:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\AMMUNA~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['ability', 'able', 'absolutely',
                                             'across', 'act', 'acted', 'acting',
                                             'action', 'actor', 'actress',
                                             'actual'...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-01-18 11:58:40,215:INFO:Creating final display dataframe.
2025-01-18 11:58:43,507:INFO:Setup _display_container:                     Description                                 Value
0                    Session id                                  3558
1                        Target                             Sentiment
2                   Target type                            Multiclass
3                Target mapping  negative: 0, neutral: 1, positive: 2
4           Original data shape                         (20190, 1001)
5        Transformed data shape                         (20190, 1001)
6   Transformed train set shape                         (14133, 1001)
7    Transformed test set shape                          (6057, 1001)
8              Numeric features                                  1000
9                    Preprocess                                  True
10              Imputation type                                simple
11           Numeric imputation                                  mean
12       Categorical imputation                                  mode
13               Fold Generator                       StratifiedKFold
14                  Fold Number                                    10
15                     CPU Jobs                                    -1
16                      Use GPU                                 False
17               Log Experiment                                 False
18              Experiment Name                      clf-default-name
19                          USI                                  f7a9
2025-01-18 11:58:43,599:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-18 11:58:43,601:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-18 11:58:43,681:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-18 11:58:43,684:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-18 11:58:43,685:INFO:setup() successfully completed in 14.26s...............
2025-01-18 11:58:43,685:INFO:Initializing get_config()
2025-01-18 11:58:43,685:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020E6F6A44C0>, variable=y_train)
2025-01-18 11:58:43,685:INFO:Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
2025-01-18 11:58:44,096:INFO:Variable:  returned as 14126    negative
14785    negative
13203    negative
20102    positive
4227      neutral
           ...   
5751      neutral
16681    positive
19519    positive
16873    positive
3043      neutral
Name: Sentiment, Length: 14133, dtype: category
Categories (3, object): ['negative', 'neutral', 'positive']
2025-01-18 11:58:44,096:INFO:get_config() successfully completed......................................
2025-01-22 11:18:13,667:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-22 11:18:13,668:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-22 11:18:13,668:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-22 11:18:13,668:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-22 11:20:15,869:INFO:PyCaret ClassificationExperiment
2025-01-22 11:20:15,869:INFO:Logging name: clf-default-name
2025-01-22 11:20:15,869:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-01-22 11:20:15,869:INFO:version 3.3.2
2025-01-22 11:20:15,869:INFO:Initializing setup()
2025-01-22 11:20:15,869:INFO:self.USI: 2c89
2025-01-22 11:20:15,869:INFO:self._variable_keys: {'y_train', 'X_test', 'target_param', 'USI', 'is_multiclass', '_ml_usecase', 'y_test', 'gpu_param', 'y', 'fix_imbalance', 'X', 'gpu_n_jobs_param', 'html_param', 'memory', 'data', 'n_jobs_param', 'exp_name_log', 'fold_shuffle_param', 'seed', 'logging_param', 'exp_id', 'X_train', '_available_plots', 'idx', 'fold_groups_param', 'fold_generator', 'pipeline', 'log_plots_param'}
2025-01-22 11:20:15,869:INFO:Checking environment
2025-01-22 11:20:15,869:INFO:python_version: 3.9.0
2025-01-22 11:20:15,869:INFO:python_build: ('default', 'Nov 15 2020 08:30:55')
2025-01-22 11:20:15,869:INFO:machine: AMD64
2025-01-22 11:20:15,869:INFO:platform: Windows-10-10.0.26100-SP0
2025-01-22 11:20:15,888:INFO:Memory: svmem(total=7967137792, available=1101402112, percent=86.2, used=6865735680, free=1101402112)
2025-01-22 11:20:15,888:INFO:Physical Core: 6
2025-01-22 11:20:15,888:INFO:Logical Core: 12
2025-01-22 11:20:15,888:INFO:Checking libraries
2025-01-22 11:20:15,888:INFO:System:
2025-01-22 11:20:15,888:INFO:    python: 3.9.0 (default, Nov 15 2020, 08:30:55) [MSC v.1916 64 bit (AMD64)]
2025-01-22 11:20:15,888:INFO:executable: e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\python.exe
2025-01-22 11:20:15,888:INFO:   machine: Windows-10-10.0.26100-SP0
2025-01-22 11:20:15,888:INFO:PyCaret required dependencies:
2025-01-22 11:20:17,322:INFO:                 pip: 24.2
2025-01-22 11:20:17,322:INFO:          setuptools: 75.1.0
2025-01-22 11:20:17,322:INFO:             pycaret: 3.3.2
2025-01-22 11:20:17,322:INFO:             IPython: 8.18.1
2025-01-22 11:20:17,322:INFO:          ipywidgets: 8.1.5
2025-01-22 11:20:17,322:INFO:                tqdm: 4.67.1
2025-01-22 11:20:17,322:INFO:               numpy: 1.26.4
2025-01-22 11:20:17,322:INFO:              pandas: 2.1.4
2025-01-22 11:20:17,322:INFO:              jinja2: 3.1.5
2025-01-22 11:20:17,322:INFO:               scipy: 1.11.4
2025-01-22 11:20:17,322:INFO:              joblib: 1.3.2
2025-01-22 11:20:17,322:INFO:             sklearn: 1.4.2
2025-01-22 11:20:17,322:INFO:                pyod: 2.0.3
2025-01-22 11:20:17,322:INFO:            imblearn: 0.12.3
2025-01-22 11:20:17,322:INFO:   category_encoders: 2.6.4
2025-01-22 11:20:17,322:INFO:            lightgbm: 4.5.0
2025-01-22 11:20:17,322:INFO:               numba: 0.60.0
2025-01-22 11:20:17,322:INFO:            requests: 2.32.3
2025-01-22 11:20:17,322:INFO:          matplotlib: 3.7.5
2025-01-22 11:20:17,322:INFO:          scikitplot: 0.3.7
2025-01-22 11:20:17,322:INFO:         yellowbrick: 1.5
2025-01-22 11:20:17,322:INFO:              plotly: 5.24.1
2025-01-22 11:20:17,322:INFO:    plotly-resampler: Not installed
2025-01-22 11:20:17,323:INFO:             kaleido: 0.2.1
2025-01-22 11:20:17,323:INFO:           schemdraw: 0.15
2025-01-22 11:20:17,323:INFO:         statsmodels: 0.14.4
2025-01-22 11:20:17,323:INFO:              sktime: 0.26.0
2025-01-22 11:20:17,323:INFO:               tbats: 1.1.3
2025-01-22 11:20:17,323:INFO:            pmdarima: 2.0.4
2025-01-22 11:20:17,323:INFO:              psutil: 6.1.1
2025-01-22 11:20:17,323:INFO:          markupsafe: 2.1.5
2025-01-22 11:20:17,323:INFO:             pickle5: Not installed
2025-01-22 11:20:17,323:INFO:         cloudpickle: 3.1.1
2025-01-22 11:20:17,323:INFO:         deprecation: 2.1.0
2025-01-22 11:20:17,323:INFO:              xxhash: 3.5.0
2025-01-22 11:20:17,323:INFO:           wurlitzer: Not installed
2025-01-22 11:20:17,323:INFO:PyCaret optional dependencies:
2025-01-22 11:20:18,006:INFO:                shap: 0.44.1
2025-01-22 11:20:18,006:INFO:           interpret: 0.6.9
2025-01-22 11:20:18,006:INFO:                umap: 0.5.7
2025-01-22 11:20:18,006:INFO:     ydata_profiling: 4.12.1
2025-01-22 11:20:18,006:INFO:  explainerdashboard: 0.4.8
2025-01-22 11:20:18,006:INFO:             autoviz: Not installed
2025-01-22 11:20:18,006:INFO:           fairlearn: 0.7.0
2025-01-22 11:20:18,006:INFO:          deepchecks: Not installed
2025-01-22 11:20:18,006:INFO:             xgboost: 2.1.3
2025-01-22 11:20:18,006:INFO:            catboost: 1.2.7
2025-01-22 11:20:18,006:INFO:              kmodes: 0.12.2
2025-01-22 11:20:18,006:INFO:             mlxtend: 0.23.3
2025-01-22 11:20:18,007:INFO:       statsforecast: 1.5.0
2025-01-22 11:20:18,007:INFO:        tune_sklearn: Not installed
2025-01-22 11:20:18,007:INFO:                 ray: Not installed
2025-01-22 11:20:18,007:INFO:            hyperopt: 0.2.7
2025-01-22 11:20:18,007:INFO:              optuna: 4.1.0
2025-01-22 11:20:18,007:INFO:               skopt: 0.10.2
2025-01-22 11:20:18,007:INFO:              mlflow: 2.19.0
2025-01-22 11:20:18,007:INFO:              gradio: Not installed
2025-01-22 11:20:18,007:INFO:             fastapi: Not installed
2025-01-22 11:20:18,007:INFO:             uvicorn: Not installed
2025-01-22 11:20:18,007:INFO:              m2cgen: 0.10.0
2025-01-22 11:20:18,007:INFO:           evidently: 0.4.40
2025-01-22 11:20:18,007:INFO:               fugue: 0.8.7
2025-01-22 11:20:18,007:INFO:           streamlit: 1.41.1
2025-01-22 11:20:18,007:INFO:             prophet: Not installed
2025-01-22 11:20:18,007:INFO:None
2025-01-22 11:20:18,007:INFO:Set up data.
2025-01-22 11:20:19,145:INFO:Set up folding strategy.
2025-01-22 11:20:19,145:INFO:Set up train/test split.
2025-01-22 11:20:19,765:INFO:Set up index.
2025-01-22 11:20:19,797:INFO:Assigning column types.
2025-01-22 11:20:20,462:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-01-22 11:20:20,508:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-22 11:20:20,514:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-22 11:20:20,553:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-22 11:20:20,556:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-22 11:20:22,038:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-22 11:20:22,038:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-22 11:20:22,083:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-22 11:20:22,086:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-22 11:20:22,086:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-01-22 11:20:22,134:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-22 11:20:22,162:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-22 11:20:22,165:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-22 11:20:22,210:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-22 11:20:22,244:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-22 11:20:22,246:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-22 11:20:22,246:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-01-22 11:20:22,321:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-22 11:20:22,321:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-22 11:20:22,402:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-22 11:20:22,402:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-22 11:20:22,424:INFO:Preparing preprocessing pipeline...
2025-01-22 11:20:22,502:INFO:Set up label encoding.
2025-01-22 11:20:22,502:INFO:Set up simple imputation.
2025-01-22 11:20:23,837:INFO:Finished creating preprocessing pipeline.
2025-01-22 11:20:23,837:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\AMMUNA~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['ability', 'able', 'absolutely',
                                             'across', 'act', 'acted', 'acting',
                                             'action', 'actor', 'actress',
                                             'actual'...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-01-22 11:20:23,837:INFO:Creating final display dataframe.
2025-01-22 11:20:27,876:INFO:Setup _display_container:                     Description                                 Value
0                    Session id                                  1751
1                        Target                             Sentiment
2                   Target type                            Multiclass
3                Target mapping  negative: 0, neutral: 1, positive: 2
4           Original data shape                         (20190, 1001)
5        Transformed data shape                         (20190, 1001)
6   Transformed train set shape                         (14133, 1001)
7    Transformed test set shape                          (6057, 1001)
8              Numeric features                                  1000
9                    Preprocess                                  True
10              Imputation type                                simple
11           Numeric imputation                                  mean
12       Categorical imputation                                  mode
13               Fold Generator                       StratifiedKFold
14                  Fold Number                                    10
15                     CPU Jobs                                    -1
16                      Use GPU                                 False
17               Log Experiment                                 False
18              Experiment Name                      clf-default-name
19                          USI                                  2c89
2025-01-22 11:20:27,960:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-22 11:20:27,969:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-22 11:20:28,046:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-22 11:20:28,046:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-22 11:20:28,046:INFO:setup() successfully completed in 12.29s...............
2025-01-22 11:20:28,046:INFO:Initializing get_config()
2025-01-22 11:20:28,046:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA62316490>, variable=y_train)
2025-01-22 11:20:28,046:INFO:Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
2025-01-22 11:20:28,210:INFO:Variable:  returned as 6513      neutral
15750    negative
4923      neutral
11229    negative
12046    negative
           ...   
16460    positive
5418      neutral
4667      neutral
17033    positive
6282     positive
Name: Sentiment, Length: 14133, dtype: category
Categories (3, object): ['negative', 'neutral', 'positive']
2025-01-22 11:20:28,210:INFO:get_config() successfully completed......................................
2025-01-22 11:20:28,235:INFO:Initializing compare_models()
2025-01-22 11:20:28,235:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA62316490>, include=['svm', 'dt', 'rf', 'ridge', 'knn', 'nb', 'xgboost'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001DA62316490>, 'include': ['svm', 'dt', 'rf', 'ridge', 'knn', 'nb', 'xgboost'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-01-22 11:20:28,236:INFO:Checking exceptions
2025-01-22 11:20:28,839:INFO:Preparing display monitor
2025-01-22 11:20:28,877:INFO:Initializing SVM - Linear Kernel
2025-01-22 11:20:28,878:INFO:Total runtime is 1.7007191975911457e-05 minutes
2025-01-22 11:20:28,882:INFO:SubProcess create_model() called ==================================
2025-01-22 11:20:28,882:INFO:Initializing create_model()
2025-01-22 11:20:28,882:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA62316490>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA62028400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-22 11:20:28,882:INFO:Checking exceptions
2025-01-22 11:20:28,882:INFO:Importing libraries
2025-01-22 11:20:28,882:INFO:Copying training dataset
2025-01-22 11:20:29,528:INFO:Defining folds
2025-01-22 11:20:29,529:INFO:Declaring metric variables
2025-01-22 11:20:29,533:INFO:Importing untrained model
2025-01-22 11:20:29,536:INFO:SVM - Linear Kernel Imported successfully
2025-01-22 11:20:29,545:INFO:Starting cross validation
2025-01-22 11:20:29,549:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-22 11:20:43,416:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 11:20:43,420:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 11:20:43,466:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:20:43,468:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:20:43,489:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:20:43,505:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:20:43,823:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 11:20:43,850:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:20:43,870:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:20:43,888:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:20:44,538:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 11:20:44,553:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:20:44,584:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:20:44,606:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:20:45,202:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 11:20:45,216:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:20:45,224:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:20:45,255:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:20:45,533:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 11:20:45,548:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:20:45,577:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:20:45,599:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:20:46,756:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 11:20:46,772:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:20:46,788:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:20:46,797:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 11:20:46,804:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:20:46,804:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:20:46,820:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:20:46,835:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:20:47,157:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 11:20:47,173:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:20:47,173:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:20:47,193:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:20:47,891:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 11:20:47,895:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:20:47,895:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:20:47,895:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:20:47,959:INFO:Calculating mean and std
2025-01-22 11:20:47,998:INFO:Creating metrics dataframe
2025-01-22 11:20:48,020:INFO:Uploading results into container
2025-01-22 11:20:48,020:INFO:Uploading model into container now
2025-01-22 11:20:48,036:INFO:_master_model_container: 1
2025-01-22 11:20:48,036:INFO:_display_container: 2
2025-01-22 11:20:48,036:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1751, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-01-22 11:20:48,036:INFO:create_model() successfully completed......................................
2025-01-22 11:20:48,584:INFO:SubProcess create_model() end ==================================
2025-01-22 11:20:48,584:INFO:Creating metrics dataframe
2025-01-22 11:20:48,598:INFO:Initializing Decision Tree Classifier
2025-01-22 11:20:48,598:INFO:Total runtime is 0.3286828200022379 minutes
2025-01-22 11:20:48,604:INFO:SubProcess create_model() called ==================================
2025-01-22 11:20:48,604:INFO:Initializing create_model()
2025-01-22 11:20:48,604:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA62316490>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA62028400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-22 11:20:48,604:INFO:Checking exceptions
2025-01-22 11:20:48,604:INFO:Importing libraries
2025-01-22 11:20:48,608:INFO:Copying training dataset
2025-01-22 11:20:49,264:INFO:Defining folds
2025-01-22 11:20:49,264:INFO:Declaring metric variables
2025-01-22 11:20:49,270:INFO:Importing untrained model
2025-01-22 11:20:49,275:INFO:Decision Tree Classifier Imported successfully
2025-01-22 11:20:49,285:INFO:Starting cross validation
2025-01-22 11:20:49,290:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-22 11:21:03,674:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:03,694:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:03,709:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:04,285:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:04,300:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:04,314:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:04,561:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:04,577:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:04,589:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:04,613:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:04,627:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:04,640:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:05,762:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:05,773:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:05,784:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:05,937:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:05,939:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:05,947:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:05,948:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:05,957:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:05,958:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:06,365:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:06,375:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:06,383:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:07,595:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:07,604:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:07,612:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:07,900:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:07,910:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:07,919:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:07,948:INFO:Calculating mean and std
2025-01-22 11:21:07,952:INFO:Creating metrics dataframe
2025-01-22 11:21:07,956:INFO:Uploading results into container
2025-01-22 11:21:07,957:INFO:Uploading model into container now
2025-01-22 11:21:07,958:INFO:_master_model_container: 2
2025-01-22 11:21:07,958:INFO:_display_container: 2
2025-01-22 11:21:07,959:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1751, splitter='best')
2025-01-22 11:21:07,959:INFO:create_model() successfully completed......................................
2025-01-22 11:21:08,264:INFO:SubProcess create_model() end ==================================
2025-01-22 11:21:08,264:INFO:Creating metrics dataframe
2025-01-22 11:21:08,278:INFO:Initializing Random Forest Classifier
2025-01-22 11:21:08,278:INFO:Total runtime is 0.6566818833351136 minutes
2025-01-22 11:21:08,282:INFO:SubProcess create_model() called ==================================
2025-01-22 11:21:08,283:INFO:Initializing create_model()
2025-01-22 11:21:08,283:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA62316490>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA62028400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-22 11:21:08,283:INFO:Checking exceptions
2025-01-22 11:21:08,283:INFO:Importing libraries
2025-01-22 11:21:08,283:INFO:Copying training dataset
2025-01-22 11:21:08,914:INFO:Defining folds
2025-01-22 11:21:08,914:INFO:Declaring metric variables
2025-01-22 11:21:08,920:INFO:Importing untrained model
2025-01-22 11:21:08,929:INFO:Random Forest Classifier Imported successfully
2025-01-22 11:21:08,939:INFO:Starting cross validation
2025-01-22 11:21:08,944:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-22 11:21:21,027:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:21,166:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:21,179:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:23,459:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:23,619:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:23,639:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:27,089:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:27,145:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:27,192:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:28,663:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:28,764:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:28,782:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:30,778:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:30,840:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:30,856:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:31,649:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:31,734:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:31,751:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:32,336:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:32,362:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:32,380:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:32,409:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:32,426:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:32,444:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:32,588:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:32,599:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:32,617:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:32,739:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:32,752:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:32,762:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:32,811:INFO:Calculating mean and std
2025-01-22 11:21:32,815:INFO:Creating metrics dataframe
2025-01-22 11:21:32,822:INFO:Uploading results into container
2025-01-22 11:21:32,823:INFO:Uploading model into container now
2025-01-22 11:21:32,824:INFO:_master_model_container: 3
2025-01-22 11:21:32,824:INFO:_display_container: 2
2025-01-22 11:21:32,825:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1751, verbose=0,
                       warm_start=False)
2025-01-22 11:21:32,825:INFO:create_model() successfully completed......................................
2025-01-22 11:21:33,131:INFO:SubProcess create_model() end ==================================
2025-01-22 11:21:33,131:INFO:Creating metrics dataframe
2025-01-22 11:21:33,140:INFO:Initializing Ridge Classifier
2025-01-22 11:21:33,140:INFO:Total runtime is 1.0710514823595683 minutes
2025-01-22 11:21:33,144:INFO:SubProcess create_model() called ==================================
2025-01-22 11:21:33,144:INFO:Initializing create_model()
2025-01-22 11:21:33,145:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA62316490>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA62028400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-22 11:21:33,145:INFO:Checking exceptions
2025-01-22 11:21:33,145:INFO:Importing libraries
2025-01-22 11:21:33,146:INFO:Copying training dataset
2025-01-22 11:21:33,756:INFO:Defining folds
2025-01-22 11:21:33,756:INFO:Declaring metric variables
2025-01-22 11:21:33,762:INFO:Importing untrained model
2025-01-22 11:21:33,766:INFO:Ridge Classifier Imported successfully
2025-01-22 11:21:33,776:INFO:Starting cross validation
2025-01-22 11:21:33,781:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-22 11:21:35,839:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 11:21:35,845:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:35,855:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:35,890:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:36,323:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 11:21:36,340:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:36,356:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:36,367:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:36,885:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 11:21:36,890:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:36,911:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:36,923:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:37,373:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 11:21:37,380:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:37,394:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:37,419:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:38,533:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 11:21:38,542:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:38,561:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:38,573:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:39,029:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 11:21:39,035:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:39,056:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:39,071:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:39,546:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 11:21:39,550:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:39,559:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:39,567:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:40,086:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 11:21:40,089:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:40,097:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:40,106:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:40,221:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 11:21:40,224:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:40,233:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:40,240:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:40,462:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 11:21:40,465:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:40,472:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:40,480:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:40,505:INFO:Calculating mean and std
2025-01-22 11:21:40,507:INFO:Creating metrics dataframe
2025-01-22 11:21:40,510:INFO:Uploading results into container
2025-01-22 11:21:40,510:INFO:Uploading model into container now
2025-01-22 11:21:40,511:INFO:_master_model_container: 4
2025-01-22 11:21:40,511:INFO:_display_container: 2
2025-01-22 11:21:40,511:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1751, solver='auto',
                tol=0.0001)
2025-01-22 11:21:40,511:INFO:create_model() successfully completed......................................
2025-01-22 11:21:40,741:INFO:SubProcess create_model() end ==================================
2025-01-22 11:21:40,742:INFO:Creating metrics dataframe
2025-01-22 11:21:40,752:INFO:Initializing K Neighbors Classifier
2025-01-22 11:21:40,752:INFO:Total runtime is 1.1979143619537354 minutes
2025-01-22 11:21:40,756:INFO:SubProcess create_model() called ==================================
2025-01-22 11:21:40,756:INFO:Initializing create_model()
2025-01-22 11:21:40,756:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA62316490>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA62028400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-22 11:21:40,757:INFO:Checking exceptions
2025-01-22 11:21:40,757:INFO:Importing libraries
2025-01-22 11:21:40,757:INFO:Copying training dataset
2025-01-22 11:21:41,356:INFO:Defining folds
2025-01-22 11:21:41,357:INFO:Declaring metric variables
2025-01-22 11:21:41,362:INFO:Importing untrained model
2025-01-22 11:21:41,371:INFO:K Neighbors Classifier Imported successfully
2025-01-22 11:21:41,383:INFO:Starting cross validation
2025-01-22 11:21:41,389:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-22 11:21:53,234:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:53,275:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:53,314:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:54,462:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:54,500:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:54,529:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:54,887:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:54,925:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:54,952:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:55,109:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:55,127:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:55,144:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:56,613:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:56,634:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:56,651:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:57,097:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:57,110:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:57,124:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:57,238:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:57,248:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:57,261:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:57,540:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:57,548:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:57,558:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:57,997:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:58,006:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:58,014:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:58,180:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:58,187:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:58,195:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:21:58,223:INFO:Calculating mean and std
2025-01-22 11:21:58,236:INFO:Creating metrics dataframe
2025-01-22 11:21:58,244:INFO:Uploading results into container
2025-01-22 11:21:58,248:INFO:Uploading model into container now
2025-01-22 11:21:58,251:INFO:_master_model_container: 5
2025-01-22 11:21:58,251:INFO:_display_container: 2
2025-01-22 11:21:58,252:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-01-22 11:21:58,253:INFO:create_model() successfully completed......................................
2025-01-22 11:21:58,681:INFO:SubProcess create_model() end ==================================
2025-01-22 11:21:58,681:INFO:Creating metrics dataframe
2025-01-22 11:21:58,697:INFO:Initializing Naive Bayes
2025-01-22 11:21:58,698:INFO:Total runtime is 1.4970187822977703 minutes
2025-01-22 11:21:58,702:INFO:SubProcess create_model() called ==================================
2025-01-22 11:21:58,703:INFO:Initializing create_model()
2025-01-22 11:21:58,703:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA62316490>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA62028400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-22 11:21:58,703:INFO:Checking exceptions
2025-01-22 11:21:58,703:INFO:Importing libraries
2025-01-22 11:21:58,705:INFO:Copying training dataset
2025-01-22 11:21:59,348:INFO:Defining folds
2025-01-22 11:21:59,348:INFO:Declaring metric variables
2025-01-22 11:21:59,355:INFO:Importing untrained model
2025-01-22 11:21:59,361:INFO:Naive Bayes Imported successfully
2025-01-22 11:21:59,370:INFO:Starting cross validation
2025-01-22 11:21:59,374:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-22 11:22:01,896:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:22:01,916:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:22:01,935:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:22:02,584:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:22:02,596:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:22:02,618:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:22:03,233:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:22:03,245:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:22:03,258:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:22:04,394:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:22:04,410:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:22:04,422:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:22:04,529:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:22:04,542:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:22:04,554:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:22:05,767:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:22:05,775:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:22:05,783:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:22:05,790:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:22:05,792:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:22:05,801:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:22:06,242:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:22:06,250:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:22:06,258:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:22:06,542:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:22:06,550:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:22:06,558:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:22:06,766:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:22:06,774:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:22:06,784:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:22:06,816:INFO:Calculating mean and std
2025-01-22 11:22:06,816:INFO:Creating metrics dataframe
2025-01-22 11:22:06,816:INFO:Uploading results into container
2025-01-22 11:22:06,825:INFO:Uploading model into container now
2025-01-22 11:22:06,826:INFO:_master_model_container: 6
2025-01-22 11:22:06,826:INFO:_display_container: 2
2025-01-22 11:22:06,827:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-01-22 11:22:06,827:INFO:create_model() successfully completed......................................
2025-01-22 11:22:07,089:INFO:SubProcess create_model() end ==================================
2025-01-22 11:22:07,089:INFO:Creating metrics dataframe
2025-01-22 11:22:07,100:INFO:Initializing Extreme Gradient Boosting
2025-01-22 11:22:07,100:INFO:Total runtime is 1.6370559612909954 minutes
2025-01-22 11:22:07,105:INFO:SubProcess create_model() called ==================================
2025-01-22 11:22:07,105:INFO:Initializing create_model()
2025-01-22 11:22:07,105:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA62316490>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA62028400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-22 11:22:07,105:INFO:Checking exceptions
2025-01-22 11:22:07,105:INFO:Importing libraries
2025-01-22 11:22:07,105:INFO:Copying training dataset
2025-01-22 11:22:07,716:INFO:Defining folds
2025-01-22 11:22:07,716:INFO:Declaring metric variables
2025-01-22 11:22:07,720:INFO:Importing untrained model
2025-01-22 11:22:07,725:INFO:Extreme Gradient Boosting Imported successfully
2025-01-22 11:22:07,733:INFO:Starting cross validation
2025-01-22 11:22:07,738:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-22 11:22:17,617:WARNING:create_model() for xgboost raised an exception or returned all 0.0, trying without fit_kwargs:
2025-01-22 11:22:17,836:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\joblib\externals\loky\backend\queues.py", line 161, in _feed
    send_bytes(obj_)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\multiprocessing\connection.py", line 205, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\multiprocessing\connection.py", line 285, in _send_bytes
    ov, err = _winapi.WriteFile(self._handle, buf, overlapped=True)
OSError: [WinError 1450] Insufficient system resources exist to complete the requested service
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\joblib\parallel.py", line 1952, in __call__
    return output if self.return_generator else list(output)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\joblib\parallel.py", line 1595, in _get_outputs
    yield from self._retrieve()
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\joblib\parallel.py", line 1699, in _retrieve
    self._raise_error_fast()
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\joblib\parallel.py", line 1734, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\joblib\parallel.py", line 736, in get_result
    return self._return_or_raise()
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\joblib\parallel.py", line 754, in _return_or_raise
    raise self._result
_pickle.PicklingError: Could not pickle the task to send it to the workers.

2025-01-22 11:22:17,842:INFO:Initializing create_model()
2025-01-22 11:22:17,842:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA62316490>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DA62028400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-22 11:22:17,842:INFO:Checking exceptions
2025-01-22 11:22:17,843:INFO:Importing libraries
2025-01-22 11:22:17,845:INFO:Copying training dataset
2025-01-22 11:22:18,662:INFO:Defining folds
2025-01-22 11:22:18,667:INFO:Declaring metric variables
2025-01-22 11:22:18,685:INFO:Importing untrained model
2025-01-22 11:22:18,691:INFO:Extreme Gradient Boosting Imported successfully
2025-01-22 11:22:18,699:INFO:Starting cross validation
2025-01-22 11:22:18,704:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-22 11:25:35,768:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:25:35,802:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:25:35,824:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:25:36,242:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:25:36,272:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:25:36,313:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:25:37,168:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:25:37,194:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:25:37,208:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:25:37,633:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:25:37,650:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:25:37,664:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:25:37,742:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:25:37,766:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:25:37,781:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:25:37,861:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:25:37,878:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:25:37,888:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:25:37,976:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:25:37,998:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:25:38,010:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:25:38,151:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:25:38,173:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:25:38,185:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:25:38,990:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:25:39,004:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:25:39,013:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:25:39,010:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:25:39,026:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:25:39,034:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 11:25:39,235:INFO:Calculating mean and std
2025-01-22 11:25:39,270:INFO:Creating metrics dataframe
2025-01-22 11:25:39,314:INFO:Uploading results into container
2025-01-22 11:25:39,319:INFO:Uploading model into container now
2025-01-22 11:25:39,327:INFO:_master_model_container: 7
2025-01-22 11:25:39,328:INFO:_display_container: 2
2025-01-22 11:25:39,336:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2025-01-22 11:25:39,337:INFO:create_model() successfully completed......................................
2025-01-22 11:25:40,915:INFO:SubProcess create_model() end ==================================
2025-01-22 11:25:40,915:INFO:Creating metrics dataframe
2025-01-22 11:25:40,951:INFO:Initializing create_model()
2025-01-22 11:25:40,951:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DA62316490>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-22 11:25:40,952:INFO:Checking exceptions
2025-01-22 11:25:40,956:INFO:Importing libraries
2025-01-22 11:25:40,958:INFO:Copying training dataset
2025-01-22 11:25:41,767:INFO:Defining folds
2025-01-22 11:25:41,767:INFO:Declaring metric variables
2025-01-22 11:25:41,767:INFO:Importing untrained model
2025-01-22 11:25:41,767:INFO:Declaring custom model
2025-01-22 11:25:41,783:INFO:Extreme Gradient Boosting Imported successfully
2025-01-22 11:25:41,790:INFO:Cross validation set to False
2025-01-22 11:25:41,790:INFO:Fitting Model
2025-01-22 11:26:15,322:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)
2025-01-22 11:26:15,322:INFO:create_model() successfully completed......................................
2025-01-22 11:26:15,616:INFO:_master_model_container: 7
2025-01-22 11:26:15,616:INFO:_display_container: 2
2025-01-22 11:26:15,616:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)
2025-01-22 11:26:15,616:INFO:compare_models() successfully completed......................................
2025-01-22 19:27:18,001:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-22 19:27:18,009:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-22 19:27:18,009:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-22 19:27:18,009:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-22 19:35:02,493:INFO:PyCaret ClassificationExperiment
2025-01-22 19:35:02,493:INFO:Logging name: clf-default-name
2025-01-22 19:35:02,493:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-01-22 19:35:02,493:INFO:version 3.3.2
2025-01-22 19:35:02,493:INFO:Initializing setup()
2025-01-22 19:35:02,493:INFO:self.USI: a895
2025-01-22 19:35:02,493:INFO:self._variable_keys: {'gpu_param', 'fold_groups_param', 'n_jobs_param', 'X_train', 'idx', 'data', 'html_param', 'target_param', 'log_plots_param', 'seed', 'pipeline', '_available_plots', 'fold_shuffle_param', 'fold_generator', 'memory', 'gpu_n_jobs_param', 'X', 'USI', 'y_train', 'is_multiclass', 'exp_id', 'logging_param', 'fix_imbalance', 'X_test', 'y', 'exp_name_log', '_ml_usecase', 'y_test'}
2025-01-22 19:35:02,493:INFO:Checking environment
2025-01-22 19:35:02,493:INFO:python_version: 3.9.0
2025-01-22 19:35:02,493:INFO:python_build: ('default', 'Nov 15 2020 08:30:55')
2025-01-22 19:35:02,493:INFO:machine: AMD64
2025-01-22 19:35:02,493:INFO:platform: Windows-10-10.0.26100-SP0
2025-01-22 19:35:02,509:INFO:Memory: svmem(total=7967137792, available=996134912, percent=87.5, used=6971002880, free=996134912)
2025-01-22 19:35:02,509:INFO:Physical Core: 6
2025-01-22 19:35:02,509:INFO:Logical Core: 12
2025-01-22 19:35:02,509:INFO:Checking libraries
2025-01-22 19:35:02,509:INFO:System:
2025-01-22 19:35:02,509:INFO:    python: 3.9.0 (default, Nov 15 2020, 08:30:55) [MSC v.1916 64 bit (AMD64)]
2025-01-22 19:35:02,509:INFO:executable: e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\python.exe
2025-01-22 19:35:02,509:INFO:   machine: Windows-10-10.0.26100-SP0
2025-01-22 19:35:02,509:INFO:PyCaret required dependencies:
2025-01-22 19:35:05,369:INFO:                 pip: 24.2
2025-01-22 19:35:05,369:INFO:          setuptools: 75.1.0
2025-01-22 19:35:05,369:INFO:             pycaret: 3.3.2
2025-01-22 19:35:05,369:INFO:             IPython: 8.18.1
2025-01-22 19:35:05,370:INFO:          ipywidgets: 8.1.5
2025-01-22 19:35:05,370:INFO:                tqdm: 4.67.1
2025-01-22 19:35:05,370:INFO:               numpy: 1.26.4
2025-01-22 19:35:05,370:INFO:              pandas: 2.1.4
2025-01-22 19:35:05,370:INFO:              jinja2: 3.1.5
2025-01-22 19:35:05,370:INFO:               scipy: 1.11.4
2025-01-22 19:35:05,370:INFO:              joblib: 1.3.2
2025-01-22 19:35:05,370:INFO:             sklearn: 1.4.2
2025-01-22 19:35:05,370:INFO:                pyod: 2.0.3
2025-01-22 19:35:05,370:INFO:            imblearn: 0.12.3
2025-01-22 19:35:05,370:INFO:   category_encoders: 2.6.4
2025-01-22 19:35:05,370:INFO:            lightgbm: 4.5.0
2025-01-22 19:35:05,370:INFO:               numba: 0.60.0
2025-01-22 19:35:05,370:INFO:            requests: 2.32.3
2025-01-22 19:35:05,370:INFO:          matplotlib: 3.7.5
2025-01-22 19:35:05,370:INFO:          scikitplot: 0.3.7
2025-01-22 19:35:05,370:INFO:         yellowbrick: 1.5
2025-01-22 19:35:05,370:INFO:              plotly: 5.24.1
2025-01-22 19:35:05,370:INFO:    plotly-resampler: Not installed
2025-01-22 19:35:05,371:INFO:             kaleido: 0.2.1
2025-01-22 19:35:05,371:INFO:           schemdraw: 0.15
2025-01-22 19:35:05,371:INFO:         statsmodels: 0.14.4
2025-01-22 19:35:05,371:INFO:              sktime: 0.26.0
2025-01-22 19:35:05,371:INFO:               tbats: 1.1.3
2025-01-22 19:35:05,371:INFO:            pmdarima: 2.0.4
2025-01-22 19:35:05,371:INFO:              psutil: 6.1.1
2025-01-22 19:35:05,371:INFO:          markupsafe: 2.1.5
2025-01-22 19:35:05,371:INFO:             pickle5: Not installed
2025-01-22 19:35:05,371:INFO:         cloudpickle: 3.1.1
2025-01-22 19:35:05,371:INFO:         deprecation: 2.1.0
2025-01-22 19:35:05,371:INFO:              xxhash: 3.5.0
2025-01-22 19:35:05,371:INFO:           wurlitzer: Not installed
2025-01-22 19:35:05,371:INFO:PyCaret optional dependencies:
2025-01-22 19:35:06,880:INFO:                shap: 0.44.1
2025-01-22 19:35:06,880:INFO:           interpret: 0.6.9
2025-01-22 19:35:06,880:INFO:                umap: 0.5.7
2025-01-22 19:35:06,880:INFO:     ydata_profiling: 4.12.1
2025-01-22 19:35:06,880:INFO:  explainerdashboard: 0.4.8
2025-01-22 19:35:06,880:INFO:             autoviz: Not installed
2025-01-22 19:35:06,880:INFO:           fairlearn: 0.7.0
2025-01-22 19:35:06,880:INFO:          deepchecks: Not installed
2025-01-22 19:35:06,880:INFO:             xgboost: 2.1.3
2025-01-22 19:35:06,880:INFO:            catboost: 1.2.7
2025-01-22 19:35:06,880:INFO:              kmodes: 0.12.2
2025-01-22 19:35:06,880:INFO:             mlxtend: 0.23.3
2025-01-22 19:35:06,880:INFO:       statsforecast: 1.5.0
2025-01-22 19:35:06,880:INFO:        tune_sklearn: Not installed
2025-01-22 19:35:06,880:INFO:                 ray: Not installed
2025-01-22 19:35:06,880:INFO:            hyperopt: 0.2.7
2025-01-22 19:35:06,880:INFO:              optuna: 4.1.0
2025-01-22 19:35:06,880:INFO:               skopt: 0.10.2
2025-01-22 19:35:06,880:INFO:              mlflow: 2.19.0
2025-01-22 19:35:06,880:INFO:              gradio: Not installed
2025-01-22 19:35:06,880:INFO:             fastapi: Not installed
2025-01-22 19:35:06,880:INFO:             uvicorn: Not installed
2025-01-22 19:35:06,880:INFO:              m2cgen: 0.10.0
2025-01-22 19:35:06,880:INFO:           evidently: 0.4.40
2025-01-22 19:35:06,880:INFO:               fugue: 0.8.7
2025-01-22 19:35:06,880:INFO:           streamlit: 1.41.1
2025-01-22 19:35:06,880:INFO:             prophet: Not installed
2025-01-22 19:35:06,880:INFO:None
2025-01-22 19:35:06,880:INFO:Set up data.
2025-01-22 19:35:07,882:INFO:Set up folding strategy.
2025-01-22 19:35:07,882:INFO:Set up train/test split.
2025-01-22 19:35:08,708:INFO:Set up index.
2025-01-22 19:35:08,750:INFO:Assigning column types.
2025-01-22 19:35:09,710:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-01-22 19:35:09,787:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-22 19:35:09,793:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-22 19:35:09,853:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-22 19:35:09,858:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-22 19:35:12,347:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-01-22 19:35:12,349:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-22 19:35:12,415:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-22 19:35:12,421:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-22 19:35:12,422:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-01-22 19:35:12,568:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-22 19:35:12,648:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-22 19:35:12,656:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-22 19:35:12,767:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-01-22 19:35:12,871:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-22 19:35:12,883:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-22 19:35:12,888:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-01-22 19:35:13,201:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-22 19:35:13,214:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-22 19:35:13,403:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-22 19:35:13,408:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-22 19:35:13,442:INFO:Preparing preprocessing pipeline...
2025-01-22 19:35:13,596:INFO:Set up label encoding.
2025-01-22 19:35:13,597:INFO:Set up simple imputation.
2025-01-22 19:35:19,248:INFO:Finished creating preprocessing pipeline.
2025-01-22 19:35:19,269:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\AMMUNA~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['ability', 'able', 'absolutely',
                                             'across', 'act', 'acted', 'acting',
                                             'action', 'actor', 'actress',
                                             'actual'...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-01-22 19:35:19,269:INFO:Creating final display dataframe.
2025-01-22 19:35:25,473:INFO:Setup _display_container:                     Description                                 Value
0                    Session id                                  6542
1                        Target                             Sentiment
2                   Target type                            Multiclass
3                Target mapping  negative: 0, neutral: 1, positive: 2
4           Original data shape                         (17421, 1001)
5        Transformed data shape                         (17421, 1001)
6   Transformed train set shape                         (12194, 1001)
7    Transformed test set shape                          (5227, 1001)
8              Numeric features                                  1000
9                    Preprocess                                  True
10              Imputation type                                simple
11           Numeric imputation                                  mean
12       Categorical imputation                                  mode
13               Fold Generator                       StratifiedKFold
14                  Fold Number                                    10
15                     CPU Jobs                                    -1
16                      Use GPU                                 False
17               Log Experiment                                 False
18              Experiment Name                      clf-default-name
19                          USI                                  a895
2025-01-22 19:35:25,604:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-22 19:35:25,609:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-22 19:35:25,702:INFO:Soft dependency imported: xgboost: 2.1.3
2025-01-22 19:35:25,705:INFO:Soft dependency imported: catboost: 1.2.7
2025-01-22 19:35:25,707:INFO:setup() successfully completed in 23.45s...............
2025-01-22 19:35:25,708:INFO:Initializing get_config()
2025-01-22 19:35:25,708:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CAFEC412E0>, variable=y_train)
2025-01-22 19:35:25,708:INFO:Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
2025-01-22 19:35:25,936:INFO:Variable:  returned as 14528    negative
8852      neutral
8306     positive
15922    positive
4371      neutral
           ...   
6635      neutral
7587      neutral
15979    positive
9583     positive
5017      neutral
Name: Sentiment, Length: 12194, dtype: category
Categories (3, object): ['negative', 'neutral', 'positive']
2025-01-22 19:35:25,936:INFO:get_config() successfully completed......................................
2025-01-22 19:35:25,959:INFO:Initializing compare_models()
2025-01-22 19:35:25,959:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CAFEC412E0>, include=['svm', 'dt', 'rf', 'ridge', 'knn', 'nb', 'xgboost'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001CAFEC412E0>, 'include': ['svm', 'dt', 'rf', 'ridge', 'knn', 'nb', 'xgboost'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-01-22 19:35:25,960:INFO:Checking exceptions
2025-01-22 19:35:26,354:INFO:Preparing display monitor
2025-01-22 19:35:26,393:INFO:Initializing SVM - Linear Kernel
2025-01-22 19:35:26,394:INFO:Total runtime is 1.6657511393229165e-05 minutes
2025-01-22 19:35:26,402:INFO:SubProcess create_model() called ==================================
2025-01-22 19:35:26,403:INFO:Initializing create_model()
2025-01-22 19:35:26,404:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CAFEC412E0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CA803F2880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-22 19:35:26,404:INFO:Checking exceptions
2025-01-22 19:35:26,404:INFO:Importing libraries
2025-01-22 19:35:26,404:INFO:Copying training dataset
2025-01-22 19:35:27,392:INFO:Defining folds
2025-01-22 19:35:27,393:INFO:Declaring metric variables
2025-01-22 19:35:27,398:INFO:Importing untrained model
2025-01-22 19:35:27,408:INFO:SVM - Linear Kernel Imported successfully
2025-01-22 19:35:27,422:INFO:Starting cross validation
2025-01-22 19:35:27,429:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-22 19:36:07,914:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 19:36:07,918:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 19:36:07,951:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 19:36:07,965:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:07,966:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:07,966:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:07,966:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:07,990:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:07,994:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:07,995:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:08,013:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:08,014:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:08,020:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:08,036:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:08,049:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:08,088:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 19:36:08,101:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:08,128:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:08,144:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 19:36:08,148:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 19:36:08,151:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:08,159:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:08,162:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:08,180:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:08,184:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:08,201:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:08,206:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:08,651:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 19:36:08,662:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:08,677:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:08,690:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:08,725:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 19:36:08,732:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:08,740:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 19:36:08,748:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:08,751:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:08,761:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:08,764:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:08,771:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:08,888:INFO:Calculating mean and std
2025-01-22 19:36:08,988:INFO:Creating metrics dataframe
2025-01-22 19:36:09,090:INFO:Uploading results into container
2025-01-22 19:36:09,099:INFO:Uploading model into container now
2025-01-22 19:36:09,111:INFO:_master_model_container: 1
2025-01-22 19:36:09,111:INFO:_display_container: 2
2025-01-22 19:36:09,119:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6542, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-01-22 19:36:09,120:INFO:create_model() successfully completed......................................
2025-01-22 19:36:10,380:INFO:SubProcess create_model() end ==================================
2025-01-22 19:36:10,380:INFO:Creating metrics dataframe
2025-01-22 19:36:10,405:INFO:Initializing Decision Tree Classifier
2025-01-22 19:36:10,405:INFO:Total runtime is 0.7335209210713705 minutes
2025-01-22 19:36:10,414:INFO:SubProcess create_model() called ==================================
2025-01-22 19:36:10,414:INFO:Initializing create_model()
2025-01-22 19:36:10,415:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CAFEC412E0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CA803F2880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-22 19:36:10,415:INFO:Checking exceptions
2025-01-22 19:36:10,415:INFO:Importing libraries
2025-01-22 19:36:10,415:INFO:Copying training dataset
2025-01-22 19:36:11,225:INFO:Defining folds
2025-01-22 19:36:11,226:INFO:Declaring metric variables
2025-01-22 19:36:11,231:INFO:Importing untrained model
2025-01-22 19:36:11,237:INFO:Decision Tree Classifier Imported successfully
2025-01-22 19:36:11,247:INFO:Starting cross validation
2025-01-22 19:36:11,255:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-22 19:36:24,267:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:24,288:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:24,309:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:24,457:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:24,477:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:24,495:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:25,189:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:25,202:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:25,216:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:25,501:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:25,518:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:25,537:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:25,642:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:25,657:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:25,674:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:26,327:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:26,338:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:26,348:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:26,526:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:26,538:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:26,548:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:26,642:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:26,650:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:26,659:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:29,465:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:29,473:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:29,481:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:29,784:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:29,791:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:29,798:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:29,836:INFO:Calculating mean and std
2025-01-22 19:36:29,838:INFO:Creating metrics dataframe
2025-01-22 19:36:29,841:INFO:Uploading results into container
2025-01-22 19:36:29,842:INFO:Uploading model into container now
2025-01-22 19:36:29,843:INFO:_master_model_container: 2
2025-01-22 19:36:29,843:INFO:_display_container: 2
2025-01-22 19:36:29,844:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6542, splitter='best')
2025-01-22 19:36:29,844:INFO:create_model() successfully completed......................................
2025-01-22 19:36:30,096:INFO:SubProcess create_model() end ==================================
2025-01-22 19:36:30,096:INFO:Creating metrics dataframe
2025-01-22 19:36:30,111:INFO:Initializing Random Forest Classifier
2025-01-22 19:36:30,111:INFO:Total runtime is 1.0619610667228698 minutes
2025-01-22 19:36:30,115:INFO:SubProcess create_model() called ==================================
2025-01-22 19:36:30,115:INFO:Initializing create_model()
2025-01-22 19:36:30,116:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CAFEC412E0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CA803F2880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-22 19:36:30,116:INFO:Checking exceptions
2025-01-22 19:36:30,116:INFO:Importing libraries
2025-01-22 19:36:30,116:INFO:Copying training dataset
2025-01-22 19:36:30,657:INFO:Defining folds
2025-01-22 19:36:30,658:INFO:Declaring metric variables
2025-01-22 19:36:30,663:INFO:Importing untrained model
2025-01-22 19:36:30,669:INFO:Random Forest Classifier Imported successfully
2025-01-22 19:36:30,678:INFO:Starting cross validation
2025-01-22 19:36:30,683:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-22 19:36:41,246:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:41,331:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:41,406:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:43,838:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:43,906:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:43,972:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:46,162:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:46,255:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:46,370:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:48,510:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:48,573:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:48,646:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:49,786:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:49,852:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:49,919:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:51,975:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:52,053:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:52,121:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:52,705:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:52,734:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:52,764:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:53,414:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:53,448:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:53,473:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:53,795:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:53,804:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:53,814:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:53,978:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:53,986:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:53,995:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:54,032:INFO:Calculating mean and std
2025-01-22 19:36:54,034:INFO:Creating metrics dataframe
2025-01-22 19:36:54,037:INFO:Uploading results into container
2025-01-22 19:36:54,038:INFO:Uploading model into container now
2025-01-22 19:36:54,038:INFO:_master_model_container: 3
2025-01-22 19:36:54,038:INFO:_display_container: 2
2025-01-22 19:36:54,039:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6542, verbose=0,
                       warm_start=False)
2025-01-22 19:36:54,039:INFO:create_model() successfully completed......................................
2025-01-22 19:36:54,296:INFO:SubProcess create_model() end ==================================
2025-01-22 19:36:54,297:INFO:Creating metrics dataframe
2025-01-22 19:36:54,309:INFO:Initializing Ridge Classifier
2025-01-22 19:36:54,309:INFO:Total runtime is 1.46525928179423 minutes
2025-01-22 19:36:54,314:INFO:SubProcess create_model() called ==================================
2025-01-22 19:36:54,314:INFO:Initializing create_model()
2025-01-22 19:36:54,315:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CAFEC412E0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CA803F2880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-22 19:36:54,315:INFO:Checking exceptions
2025-01-22 19:36:54,315:INFO:Importing libraries
2025-01-22 19:36:54,315:INFO:Copying training dataset
2025-01-22 19:36:54,877:INFO:Defining folds
2025-01-22 19:36:54,877:INFO:Declaring metric variables
2025-01-22 19:36:54,883:INFO:Importing untrained model
2025-01-22 19:36:54,889:INFO:Ridge Classifier Imported successfully
2025-01-22 19:36:54,902:INFO:Starting cross validation
2025-01-22 19:36:54,907:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-22 19:36:56,859:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 19:36:56,868:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:56,882:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:56,902:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:57,325:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 19:36:57,331:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:57,345:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:57,360:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:57,820:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 19:36:57,826:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:57,846:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:57,860:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:58,469:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 19:36:58,477:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:58,496:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:58,518:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:59,249:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 19:36:59,256:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:59,270:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:59,284:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:59,754:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 19:36:59,758:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:59,771:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:36:59,787:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:00,153:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 19:37:00,157:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:00,167:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:00,176:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:00,516:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 19:37:00,519:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:00,528:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:00,537:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:00,752:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 19:37:00,755:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:00,762:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:00,770:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:00,978:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-01-22 19:37:00,981:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:00,988:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:00,995:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:01,019:INFO:Calculating mean and std
2025-01-22 19:37:01,021:INFO:Creating metrics dataframe
2025-01-22 19:37:01,024:INFO:Uploading results into container
2025-01-22 19:37:01,025:INFO:Uploading model into container now
2025-01-22 19:37:01,026:INFO:_master_model_container: 4
2025-01-22 19:37:01,026:INFO:_display_container: 2
2025-01-22 19:37:01,027:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6542, solver='auto',
                tol=0.0001)
2025-01-22 19:37:01,027:INFO:create_model() successfully completed......................................
2025-01-22 19:37:01,258:INFO:SubProcess create_model() end ==================================
2025-01-22 19:37:01,258:INFO:Creating metrics dataframe
2025-01-22 19:37:01,268:INFO:Initializing K Neighbors Classifier
2025-01-22 19:37:01,268:INFO:Total runtime is 1.581238865852356 minutes
2025-01-22 19:37:01,271:INFO:SubProcess create_model() called ==================================
2025-01-22 19:37:01,272:INFO:Initializing create_model()
2025-01-22 19:37:01,272:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CAFEC412E0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CA803F2880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-22 19:37:01,273:INFO:Checking exceptions
2025-01-22 19:37:01,274:INFO:Importing libraries
2025-01-22 19:37:01,274:INFO:Copying training dataset
2025-01-22 19:37:01,795:INFO:Defining folds
2025-01-22 19:37:01,796:INFO:Declaring metric variables
2025-01-22 19:37:01,801:INFO:Importing untrained model
2025-01-22 19:37:01,808:INFO:K Neighbors Classifier Imported successfully
2025-01-22 19:37:01,818:INFO:Starting cross validation
2025-01-22 19:37:01,823:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-22 19:37:10,202:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:10,281:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:10,338:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:10,669:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:10,698:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:10,729:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:11,791:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:11,821:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:11,849:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:11,931:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:11,962:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:11,997:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:13,377:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:13,403:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:13,446:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:13,531:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:13,552:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:13,566:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:13,695:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:13,707:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:13,720:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:14,082:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:14,092:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:14,103:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:14,518:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:14,527:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:14,535:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:14,682:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:14,689:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:14,697:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:14,729:INFO:Calculating mean and std
2025-01-22 19:37:14,732:INFO:Creating metrics dataframe
2025-01-22 19:37:14,735:INFO:Uploading results into container
2025-01-22 19:37:14,736:INFO:Uploading model into container now
2025-01-22 19:37:14,736:INFO:_master_model_container: 5
2025-01-22 19:37:14,737:INFO:_display_container: 2
2025-01-22 19:37:14,737:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-01-22 19:37:14,737:INFO:create_model() successfully completed......................................
2025-01-22 19:37:15,001:INFO:SubProcess create_model() end ==================================
2025-01-22 19:37:15,001:INFO:Creating metrics dataframe
2025-01-22 19:37:15,014:INFO:Initializing Naive Bayes
2025-01-22 19:37:15,014:INFO:Total runtime is 1.810336661338806 minutes
2025-01-22 19:37:15,019:INFO:SubProcess create_model() called ==================================
2025-01-22 19:37:15,019:INFO:Initializing create_model()
2025-01-22 19:37:15,019:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CAFEC412E0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CA803F2880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-22 19:37:15,020:INFO:Checking exceptions
2025-01-22 19:37:15,020:INFO:Importing libraries
2025-01-22 19:37:15,020:INFO:Copying training dataset
2025-01-22 19:37:15,578:INFO:Defining folds
2025-01-22 19:37:15,578:INFO:Declaring metric variables
2025-01-22 19:37:15,584:INFO:Importing untrained model
2025-01-22 19:37:15,589:INFO:Naive Bayes Imported successfully
2025-01-22 19:37:15,598:INFO:Starting cross validation
2025-01-22 19:37:15,604:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-22 19:37:17,658:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:17,678:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:17,696:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:18,191:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:18,202:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:18,214:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:18,804:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:18,820:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:18,837:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:19,417:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:19,433:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:19,447:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:20,265:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:20,286:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:20,310:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:20,877:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:20,893:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:20,910:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:21,060:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:21,074:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:21,084:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:21,411:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:21,422:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:21,434:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:21,744:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:21,761:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:21,781:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:22,001:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:22,008:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:22,018:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:37:22,058:INFO:Calculating mean and std
2025-01-22 19:37:22,060:INFO:Creating metrics dataframe
2025-01-22 19:37:22,063:INFO:Uploading results into container
2025-01-22 19:37:22,064:INFO:Uploading model into container now
2025-01-22 19:37:22,065:INFO:_master_model_container: 6
2025-01-22 19:37:22,065:INFO:_display_container: 2
2025-01-22 19:37:22,065:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-01-22 19:37:22,065:INFO:create_model() successfully completed......................................
2025-01-22 19:37:22,359:INFO:SubProcess create_model() end ==================================
2025-01-22 19:37:22,359:INFO:Creating metrics dataframe
2025-01-22 19:37:22,368:INFO:Initializing Extreme Gradient Boosting
2025-01-22 19:37:22,369:INFO:Total runtime is 1.9329322139422098 minutes
2025-01-22 19:37:22,375:INFO:SubProcess create_model() called ==================================
2025-01-22 19:37:22,375:INFO:Initializing create_model()
2025-01-22 19:37:22,376:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CAFEC412E0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CA803F2880>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-22 19:37:22,376:INFO:Checking exceptions
2025-01-22 19:37:22,376:INFO:Importing libraries
2025-01-22 19:37:22,376:INFO:Copying training dataset
2025-01-22 19:37:22,911:INFO:Defining folds
2025-01-22 19:37:22,911:INFO:Declaring metric variables
2025-01-22 19:37:22,916:INFO:Importing untrained model
2025-01-22 19:37:22,922:INFO:Extreme Gradient Boosting Imported successfully
2025-01-22 19:37:22,932:INFO:Starting cross validation
2025-01-22 19:37:22,937:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-01-22 19:40:38,387:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:40:38,416:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:40:38,444:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:40:41,014:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:40:41,038:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:40:41,058:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:40:43,590:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:40:43,615:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:40:43,632:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:40:44,378:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:40:44,406:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:40:44,427:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:40:46,074:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:40:46,092:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:40:46,111:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:40:46,132:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:40:46,159:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:40:46,173:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:40:48,059:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:40:48,060:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:40:48,071:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:40:48,077:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:40:48,077:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:40:48,090:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:40:48,596:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:40:48,606:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:40:48,614:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:40:49,504:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:40:49,514:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:40:49,522:WARNING:e:\STORAGE\Desktop\CAPSTONE\Movies-Recommendations-and-Sentiment-Analysis\venv\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-01-22 19:40:49,702:INFO:Calculating mean and std
2025-01-22 19:40:49,763:INFO:Creating metrics dataframe
2025-01-22 19:40:49,852:INFO:Uploading results into container
2025-01-22 19:40:49,859:INFO:Uploading model into container now
2025-01-22 19:40:49,867:INFO:_master_model_container: 7
2025-01-22 19:40:49,868:INFO:_display_container: 2
2025-01-22 19:40:49,880:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2025-01-22 19:40:49,881:INFO:create_model() successfully completed......................................
2025-01-22 19:40:51,436:INFO:SubProcess create_model() end ==================================
2025-01-22 19:40:51,436:INFO:Creating metrics dataframe
2025-01-22 19:40:51,465:INFO:Initializing create_model()
2025-01-22 19:40:51,465:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CAFEC412E0>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-01-22 19:40:51,467:INFO:Checking exceptions
2025-01-22 19:40:51,473:INFO:Importing libraries
2025-01-22 19:40:51,475:INFO:Copying training dataset
2025-01-22 19:40:52,279:INFO:Defining folds
2025-01-22 19:40:52,279:INFO:Declaring metric variables
2025-01-22 19:40:52,279:INFO:Importing untrained model
2025-01-22 19:40:52,279:INFO:Declaring custom model
2025-01-22 19:40:52,281:INFO:Extreme Gradient Boosting Imported successfully
2025-01-22 19:40:52,288:INFO:Cross validation set to False
2025-01-22 19:40:52,288:INFO:Fitting Model
2025-01-22 19:41:30,142:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)
2025-01-22 19:41:30,142:INFO:create_model() successfully completed......................................
2025-01-22 19:41:30,589:INFO:_master_model_container: 7
2025-01-22 19:41:30,590:INFO:_display_container: 2
2025-01-22 19:41:30,591:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)
2025-01-22 19:41:30,592:INFO:compare_models() successfully completed......................................
2025-01-22 21:19:27,331:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-22 21:19:27,331:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-22 21:19:27,331:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-22 21:19:27,332:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-23 08:48:23,244:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-23 08:48:23,244:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-23 08:48:23,244:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-23 08:48:23,244:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-24 19:56:31,879:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-24 19:56:31,881:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-24 19:56:31,881:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-24 19:56:31,881:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-26 19:01:38,634:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-26 19:01:38,635:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-26 19:01:38,635:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-01-26 19:01:38,635:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
